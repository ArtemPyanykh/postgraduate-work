(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    319574,       6214]
NotebookOptionsPosition[    316283,       6101]
NotebookOutlinePosition[    316639,       6117]
CellTagsIndexPosition[    316596,       6114]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"k1", "[", 
    RowBox[{
    "p_", ",", "phk_", ",", "phk1_", ",", "qk_", ",", "qk1_", ",", "k_", ",", 
     "j_"}], "]"}], ":=", "\[IndentingNewLine]", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           RowBox[{"m", "*", "p"}], "-", 
           RowBox[{"\[Beta]", "*", "k"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Beta]"}], ")"}], "*", "j"}], "-", 
           RowBox[{"\[Beta]", "*", "qk1"}]}], 
          RowBox[{"j", "<", "k"}]},
         {
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"m", "*", "phk1"}], "-", "k", "-", "\[Beta]"}], ")"}], 
           "*", "qk1"}], 
          RowBox[{"j", "==", "k"}]},
         {
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "+", "\[VeryThinSpace]", "\[Beta]", "-", 
             RowBox[{"m", "*", "phk"}]}], ")"}], "*", "qk"}], 
          RowBox[{"j", "==", 
           RowBox[{"k", "+", "1"}]}]},
         {
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Beta]"}], ")"}], "*", "k"}], "+", 
           RowBox[{"\[Beta]", "*", "j"}], "-", 
           RowBox[{"m", "*", "p"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Beta]"}], ")"}], "*", "qk1"}]}], 
          RowBox[{"j", ">", 
           RowBox[{"k", "+", "1"}]}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k1", "[", 
    RowBox[{
     RowBox[{"k", "/", "m"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k", "-", "1", "+", "\[Beta]"}], ")"}], "/", "m"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k", "+", "\[Beta]"}], ")"}], "/", "m"}], ",", "\[Beta]", ",", 
     
     RowBox[{"1", "-", "\[Beta]"}], ",", "k", ",", "j"}], "]"}], "//", 
   "Simplify"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k1", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k", "+", "\[Beta]"}], ")"}], "/", "m"}], ",", 
     RowBox[{"k", "/", "m"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k", "+", "1"}], ")"}], "/", "m"}], ",", 
     RowBox[{"1", "-", "\[Beta]"}], ",", "\[Beta]", ",", "k", ",", "j"}], 
    "]"}], "//", "Simplify"}], ";"}]}], "Input",
 CellChangeTimes->{{3.63430562942705*^9, 3.634305765778386*^9}, {
  3.634305815942597*^9, 3.634306059058428*^9}, {3.634306226350438*^9, 
  3.634306250005879*^9}, {3.634306286078923*^9, 3.634306286460383*^9}, {
  3.6343063307609653`*^9, 3.6343063325045767`*^9}, {3.634306548858438*^9, 
  3.634306642497293*^9}, {3.6343213932587852`*^9, 3.634321394824835*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "\[Element]", "Integers"}], "&&", 
     RowBox[{"j", "\[Element]", "Integers"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"0", "<", "\[Lambda]", "<", "1"}]}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Lambda]", "*", 
       RowBox[{"k1", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Lambda]", "*", 
           RowBox[{"k", "/", "m"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Lambda]"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"k", "+", "\[Beta]"}], ")"}], "/", "m"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "-", "1", "+", "\[Beta]"}], ")"}], "/", "m"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "+", "\[Beta]"}], ")"}], "/", "m"}], ",", 
         "\[IndentingNewLine]", "\[Beta]", ",", 
         RowBox[{"1", "-", "\[Beta]"}], ",", "k", ",", "j"}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Lambda]"}], ")"}], "*", 
       RowBox[{"k1", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Lambda]", "*", 
           RowBox[{"k", "/", "m"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Lambda]"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"k", "+", "\[Beta]"}], ")"}], "/", "m"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"k", "/", "m"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "+", "1"}], ")"}], "/", "m"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"1", "-", "\[Beta]"}], ",", "\[Beta]", ",", "k", ",", "j"}], 
        "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.634306709445853*^9, 3.6343067285525084`*^9}, 
   3.634306782094759*^9, {3.634306819143523*^9, 3.634306873002474*^9}, {
   3.6343069743334084`*^9, 3.6343070065238028`*^9}, {3.6343070400649242`*^9, 
   3.634307086840291*^9}, {3.6343071210479603`*^9, 3.634307220780015*^9}, {
   3.634307454226693*^9, 3.634307464745366*^9}, {3.6343077400310163`*^9, 
   3.6343077424612303`*^9}, {3.63430783551248*^9, 3.634307856843317*^9}, {
   3.6343081117376347`*^9, 3.6343081592207117`*^9}, {3.634308206140545*^9, 
   3.634308276742653*^9}, {3.634308451388604*^9, 3.634308465526228*^9}, {
   3.634319715509584*^9, 3.634319738647978*^9}, {3.634320245012094*^9, 
   3.6343202456659937`*^9}, 3.634321398666354*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"0", "<", "\[Lambda]", "<", "1"}], "&&", 
    RowBox[{"0", "<", "\[Beta]", "<", "1"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Reduce", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "*", "\[Lambda]"}], "-", "1"}], ")"}], "*", 
         RowBox[{"\[Beta]", "^", "2"}]}], "+", 
        RowBox[{"2", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Lambda]"}], ")"}], "*", "\[Beta]"}], "+", 
        "\[Lambda]"}], " ", ">=", " ", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", "\[Lambda]"}], "}"}]}], "]"}], "//", 
    "FullSimplify"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.63430888135107*^9, 3.634308965655702*^9}, {
  3.634309008411092*^9, 3.634309126165044*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.634308926051708*^9, 3.634308940248784*^9}, {
  3.634309033474741*^9, 3.63430906415798*^9}, {3.634309100145233*^9, 
  3.634309126521687*^9}, {3.63432160485842*^9, 3.634321609594441*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "\[Element]", "Integers"}], "&&", 
     RowBox[{"j", "\[Element]", "Integers"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"0", "<", "\[Lambda]", "<", "1"}]}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"PiecewiseExpand", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Lambda]", "*", 
        RowBox[{"k1", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"k", "+", "\[Beta]"}], ")"}], "/", "m"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Lambda]"}], ")"}], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"k", "+", "1"}], ")"}], "/", "m"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"k", "/", "m"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "+", "1"}], ")"}], "/", "m"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"1", "-", "\[Beta]"}], ",", "\[Beta]", ",", "k", ",", "j"}],
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "+", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Lambda]"}], ")"}], "*", 
        RowBox[{"k1", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"k", "+", "\[Beta]"}], ")"}], "/", "m"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Lambda]"}], ")"}], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"k", "+", "1"}], ")"}], "/", "m"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "+", "\[Beta]"}], ")"}], "/", "m"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "+", "1", "+", "\[Beta]"}], ")"}], "/", "m"}], ",", 
          "\[IndentingNewLine]", "\[Beta]", ",", 
          RowBox[{"1", "-", "\[Beta]"}], ",", 
          RowBox[{"k", "+", "1"}], ",", "j"}], "\[IndentingNewLine]", 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "//", "FullSimplify"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.634313949309512*^9, 3.6343140075624523`*^9}, {
   3.634314045434711*^9, 3.6343140679178553`*^9}, {3.6343141661122913`*^9, 
   3.634314204991843*^9}, {3.634314263118697*^9, 3.6343142698598146`*^9}, {
   3.634319767876683*^9, 3.634319781330727*^9}, {3.634319928106835*^9, 
   3.634320017381446*^9}, {3.634320706898555*^9, 3.6343207232475443`*^9}, 
   3.6343214397366447`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"k", "\[Element]", "Integers"}], "&&", 
    RowBox[{"j", "\[Element]", "Integers"}], "&&", 
    RowBox[{"0", "<", "\[Beta]", "<", "1"}], "&&", 
    RowBox[{"0", "<", "\[Lambda]", "<", "1"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
    RowBox[{"k1", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Lambda]", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"k", "+", "\[Beta]"}], ")"}], "/", "m"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Lambda]"}], ")"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"k", "+", "1"}], ")"}], "/", "m"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"k", "/", "m"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"k", "+", "1"}], ")"}], "/", "m"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"1", "-", "\[Beta]"}], ",", "\[Beta]", ",", "k", ",", "j"}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.634314807603641*^9, 3.634314811522566*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "j", "-", "k", "-", "\[Beta]", "+", 
           "\[Lambda]"}], ")"}]}], 
        RowBox[{"j", "<", "k"}]},
       {
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}]}], " ", "\[Beta]"}], 
        RowBox[{
         RowBox[{"j", "\[Equal]", "k"}], "||", 
         RowBox[{"j", "\[Equal]", 
          RowBox[{"1", "+", "k"}]}]}]},
       {
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Lambda]", "-", 
         RowBox[{"\[Beta]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "j", "+", "k", "+", "\[Beta]", "+", 
            "\[Lambda]"}], ")"}]}]}], 
        RowBox[{"j", ">", 
         RowBox[{"1", "+", "k"}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6343148126996317`*^9, {3.634321606044978*^9, 3.634321610616209*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"k", "\[Element]", "Integers"}], "&&", 
     RowBox[{"j", "\[Element]", "Integers"}], "&&", 
     RowBox[{"0", "<", "\[Beta]", "<", "1"}], "&&", 
     RowBox[{"0", "<", "\[Lambda]", "<", "1"}]}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"k1", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Lambda]", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "+", "\[Beta]"}], ")"}], "/", "m"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Lambda]"}], ")"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "+", "1"}], ")"}], "/", "m"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"k", "+", "\[Beta]"}], ")"}], "/", "m"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"k", "+", "1", "+", "\[Beta]"}], ")"}], "/", "m"}], ",", 
       "\[IndentingNewLine]", "\[Beta]", ",", 
       RowBox[{"1", "-", "\[Beta]"}], ",", 
       RowBox[{"k", "+", "1"}], ",", "j"}], "\[IndentingNewLine]", "]"}], "//",
      "FullSimplify"}]}], "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.634314828721451*^9, 3.6343148336084948`*^9}, {
  3.6343177051907053`*^9, 3.634317717209107*^9}, {3.634317761294465*^9, 
  3.634317817794002*^9}, {3.634321478150873*^9, 3.634321479817428*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Assuming", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"0", "<", "\[Beta]", "<", "1"}], "&&", 
       RowBox[{"0", "<", "\[Lambda]", "<", "1"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Reduce", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", "-", "\[Beta]", "-", "\[Lambda]", "+", 
          RowBox[{"2", "*", "\[Beta]", "*", "\[Lambda]"}]}], ">=", "0"}], ",",
         " ", 
        RowBox[{"{", 
         RowBox[{"\[Beta]", ",", "\[Lambda]"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot3D", "[", 
     RowBox[{
      RowBox[{"2", "-", "\[Beta]", "-", "\[Lambda]", "+", 
       RowBox[{"2", "*", "\[Beta]", "*", "\[Lambda]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.634316008638906*^9, 3.634316125330983*^9}, {
  3.6343161639997053`*^9, 3.634316203993085*^9}, {3.634316239359536*^9, 
  3.6343162895060463`*^9}, {3.634316343387905*^9, 3.634316412764427*^9}, {
  3.6343164650143547`*^9, 3.6343164673975563`*^9}, {3.634321484810625*^9, 
  3.634321509329692*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"\[Beta]", "-", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], "2"], " ", 
      "\[Lambda]"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Minimize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Beta]", "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], "2"], " ", 
        "\[Lambda]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "2"]}]}], ",", 
      RowBox[{"0.0", "<=", "\[Beta]", "<=", "1"}], ",", 
      RowBox[{"0", "<", "\[Lambda]", "<", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", ",", "\[Lambda]"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.63431710263194*^9, 3.634317115514854*^9}, {
  3.634317309047805*^9, 3.6343173774906693`*^9}, {3.634317490762285*^9, 
  3.6343175344706984`*^9}, {3.634321511219264*^9, 3.6343215203142138`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"1", "-", "\[Lambda]", "+", 
     RowBox[{"\[Beta]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", "2", "+", "\[Beta]", "+", 
        RowBox[{"3", " ", "\[Lambda]"}], "-", 
        RowBox[{"2", " ", "\[Beta]", " ", "\[Lambda]"}]}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.634317154632392*^9, 3.634317168214313*^9}, {
   3.634317202530354*^9, 3.6343172039339542`*^9}, 3.63432152587453*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Beta]"}], ")"}], "^", "3"}], "-", 
     RowBox[{"4", "*", "\[Beta]"}]}], "\[Equal]", "0"}], ",", "\[Beta]", ",", 
   "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.634318145569682*^9, 3.634318199063651*^9}, 
   3.6343182336850967`*^9, 3.634318264037856*^9, {3.634318332919486*^9, 
   3.63431833372488*^9}, {3.634318536279503*^9, 3.634318537588146*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Beta]", "\[Rule]", "0.15229240186043347`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6343181771337023`*^9, 3.6343181995929337`*^9}, 
   3.634318234204123*^9, 3.634318334056691*^9, 3.6343185379216747`*^9, {
   3.634321606567831*^9, 3.634321611014382*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Beta]"}], ")"}], "3"], "-", 
   RowBox[{"4", " ", "\[Beta]"}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"7", " ", "\[Beta]"}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["\[Beta]", "2"]}], "-", 
  SuperscriptBox["\[Beta]", "3"]}]], "Output",
 CellChangeTimes->{
  3.6343185181229467`*^9, {3.634321606606394*^9, 3.634321611059287*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Element", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"j", ",", "k"}], "}"}], ",", "Integers"}], "]"}], "&&", 
    RowBox[{"0", "<", "\[Beta]", "<", "1"}], "&&", 
    RowBox[{"0", "<", "\[Lambda]", "<", "1"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Lambda]", "*", 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"j", "-", "k", "+", "\[Beta]"}], ")"}]}], 
             RowBox[{"j", "<", "k"}]},
            {"0", 
             RowBox[{"j", "\[Equal]", "k"}]},
            {"\[Beta]", 
             RowBox[{"j", "\[Equal]", 
              RowBox[{"1", "+", "k"}]}]},
            {
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "j", "-", "k"}], ")"}], " ", 
               "\[Beta]"}], "+", 
              SuperscriptBox["\[Beta]", "2"]}], 
             RowBox[{"j", ">", "k"}]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Lambda]"}], ")"}], 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j", "-", "k", "-", "\[Beta]"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}]}], 
             RowBox[{"j", "<", "k"}]},
            {
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}]}], " ", 
              "\[Beta]"}], 
             RowBox[{
              RowBox[{"j", "\[Equal]", "k"}], "||", 
              RowBox[{"j", "\[Equal]", 
               RowBox[{"1", "+", "k"}]}]}]},
            {
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j", "-", "k", "-", "\[Beta]"}], ")"}], " ", 
              "\[Beta]"}], 
             RowBox[{"j", ">", 
              RowBox[{"1", "+", "k"}]}]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}},
           Selectable->True]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.634320136382063*^9, 3.634320236856657*^9}, {
  3.634320297528873*^9, 3.63432030075222*^9}, {3.634321037051917*^9, 
  3.634321152716675*^9}, {3.6343215354468613`*^9, 3.634321545349291*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"j", "-", "k", "+", 
           RowBox[{"\[Beta]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
        RowBox[{"j", "<", "k"}]},
       {
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", "\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Lambda]"}], ")"}]}], 
        RowBox[{"j", "\[Equal]", "k"}]},
       {
        RowBox[{"\[Beta]", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"\[Beta]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Lambda]"}], ")"}]}]}], ")"}]}], 
        RowBox[{"j", "\[Equal]", 
         RowBox[{"1", "+", "k"}]}]},
       {
        RowBox[{
         RowBox[{"j", " ", "\[Beta]"}], "-", 
         RowBox[{"\[Beta]", " ", 
          RowBox[{"(", 
           RowBox[{"k", "+", "\[Beta]"}], ")"}]}], "+", "\[Lambda]", "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", "\[Beta]", " ", 
          "\[Lambda]"}]}], 
        RowBox[{"j", ">", 
         RowBox[{"1", "+", "k"}]}]},
       {
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"\[Beta]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "j", "-", "k", "+", "\[Beta]"}], 
             ")"}]}]}], ")"}], " ", "\[Lambda]"}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6343216074050922`*^9, 3.634321611913793*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Assuming", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j", ",", "k"}], "}"}], ",", "Integers"}], "]"}], "&&", 
      RowBox[{"0", "<", "\[Beta]", "<", "1"}], "&&", 
      RowBox[{"0", "<", "\[Lambda]", "<", "1"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PiecewiseExpand", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Lambda]", "*", 
         TagBox[GridBox[{
            {"\[Piecewise]", GridBox[{
               {
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "j"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "\[Beta]"}], ")"}]}], "-", 
                 RowBox[{"k", " ", "\[Beta]"}], "-", 
                 SuperscriptBox["\[Beta]", "2"], "+", 
                 RowBox[{"m", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", "k"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Lambda]"}], ")"}]}], "m"], "+", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"k", "+", "\[Beta]"}], ")"}], " ", "\[Lambda]"}], 
                    "m"]}], ")"}]}]}], 
                RowBox[{"j", "<", "k"}]},
               {
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "\[Beta]"}], ")"}], " ", "\[Beta]"}], 
                RowBox[{
                 RowBox[{"j", "\[Equal]", "k"}], "||", 
                 RowBox[{"j", "\[Equal]", 
                  RowBox[{"1", "+", "k"}]}]}]},
               {
                RowBox[{
                 RowBox[{"k", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "\[Beta]"}], ")"}]}], "+", 
                 RowBox[{"j", " ", "\[Beta]"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "\[Beta]"}], ")"}], " ", "\[Beta]"}], 
                 "-", 
                 RowBox[{"m", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", "k"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Lambda]"}], ")"}]}], "m"], "+", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"k", "+", "\[Beta]"}], ")"}], " ", "\[Lambda]"}], 
                    "m"]}], ")"}]}]}], 
                RowBox[{"j", ">", 
                 RowBox[{"1", "+", "k"}]}]}
              },
              AllowedDimensions->{2, Automatic},
              Editable->True,
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{1.}}, "RowsIndexed" -> {}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.84]}, 
                  Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}, "RowsIndexed" -> {}},
              Selectable->True]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.35]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          "Piecewise",
          DeleteWithContents->True,
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Lambda]"}], ")"}], "*", 
         TagBox[GridBox[{
            {"\[Piecewise]", GridBox[{
               {
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "j"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "\[Beta]"}], ")"}]}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "+", "k"}], ")"}], " ", "\[Beta]"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "\[Beta]"}], ")"}], " ", "\[Beta]"}], 
                 "+", 
                 RowBox[{"m", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", "k"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Lambda]"}], ")"}]}], "m"], "+", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"k", "+", "\[Beta]"}], ")"}], " ", "\[Lambda]"}], 
                    "m"]}], ")"}]}]}], 
                RowBox[{"j", "<", 
                 RowBox[{"1", "+", "k"}]}]},
               {"0", 
                RowBox[{"j", "\[Equal]", 
                 RowBox[{"1", "+", "k"}]}]},
               {"\[Beta]", 
                RowBox[{"j", "\[Equal]", 
                 RowBox[{"2", "+", "k"}]}]},
               {
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "+", "k"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "\[Beta]"}], ")"}]}], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1", "-", "\[Beta]"}], ")"}], "2"], "+", 
                 RowBox[{"j", " ", "\[Beta]"}], "-", 
                 RowBox[{"m", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", "k"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[Lambda]"}], ")"}]}], "m"], "+", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"k", "+", "\[Beta]"}], ")"}], " ", "\[Lambda]"}], 
                    "m"]}], ")"}]}]}], 
                RowBox[{"j", ">", 
                 RowBox[{"2", "+", "k"}]}]}
              },
              AllowedDimensions->{2, Automatic},
              Editable->True,
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                "Rows" -> {{1.}}, "RowsIndexed" -> {}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.84]}, 
                  Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}, "RowsIndexed" -> {}},
              Selectable->True]}
           },
           
           GridBoxAlignment->{
            "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
             "Rows" -> {{1.}}, "RowsIndexed" -> {}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.35]}, 
               Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}, "RowsIndexed" -> {}}],
          "Piecewise",
          DeleteWithContents->True,
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}]}], "\[IndentingNewLine]", "]"}], "//", 
      "FullSimplify"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6343203226345873`*^9, 3.634320369290051*^9}, {
   3.634320424560165*^9, 3.634320455403389*^9}, {3.6343204895552588`*^9, 
   3.634320499386154*^9}, 3.634320533198677*^9, {3.634321197934174*^9, 
   3.634321201136648*^9}, {3.6343213070592203`*^9, 3.634321359407851*^9}, {
   3.634321567664442*^9, 3.6343215815814447`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"j", "\[Element]", "Integers"}], "&&", 
     RowBox[{"k", "\[Element]", "Integers"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "\[Lambda]", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"j", "<", "k"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Lambda]", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "j"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Beta]"}], ")"}]}], "-", 
         RowBox[{"k", " ", "\[Beta]"}], "-", 
         SuperscriptBox["\[Beta]", "2"], "+", 
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "k"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Lambda]"}], ")"}]}], "m"], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"k", "+", "\[Beta]"}], ")"}], " ", "\[Lambda]"}], 
             "m"]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Lambda]"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "j"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Beta]"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "k"}], ")"}], " ", "\[Beta]"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Beta]"}], ")"}], " ", "\[Beta]"}], "+", 
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "k"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Lambda]"}], ")"}]}], "m"], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"k", "+", "\[Beta]"}], ")"}], " ", "\[Lambda]"}], 
             "m"]}], ")"}]}]}], ")"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"j", " ", "<", " ", 
    RowBox[{"k", " ", "case"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.634320542221632*^9, 3.634320657455106*^9}, 
   3.6343215924153852`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "j", "-", "k", "+", "\[Beta]", "+", "\[Lambda]", 
    "-", 
    RowBox[{"2", " ", "\[Beta]", " ", "\[Lambda]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.634320634775028*^9, {3.634321608250848*^9, 3.634321612812991*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6343203384390306`*^9, 3.634320340642028*^9}, {
  3.6343203734286633`*^9, 3.6343204495066013`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"j", "\[Element]", "Integers"}], "&&", 
     RowBox[{"k", "\[Element]", "Integers"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "\[Lambda]", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"j", "\[Equal]", "k"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Lambda]", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Beta]"}], ")"}], " ", "\[Beta]"}], ")"}]}], 
      "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Lambda]"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "j"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Beta]"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "k"}], ")"}], " ", "\[Beta]"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Beta]"}], ")"}], " ", "\[Beta]"}], "+", 
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "k"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Lambda]"}], ")"}]}], "m"], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"k", "+", "\[Beta]"}], ")"}], " ", "\[Lambda]"}], 
             "m"]}], ")"}]}]}], ")"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"j", " ", "=", " ", 
    RowBox[{"k", " ", "case"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6343203437433167`*^9, 3.6343203459217863`*^9}, 
   3.634320386500186*^9, {3.634320664200822*^9, 3.634320689693852*^9}, {
   3.634320734403945*^9, 3.634320736448975*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}]}], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Lambda]"}], ")"}], "2"], "+", 
    RowBox[{"\[Beta]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.634320692208041*^9, 3.634320737299247*^9, {3.634321608333577*^9, 
   3.6343216129233837`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"j", "\[Element]", "Integers"}], "&&", 
     RowBox[{"k", "\[Element]", "Integers"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "\[Lambda]", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"j", "\[Equal]", 
      RowBox[{"k", "+", "1"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Lambda]", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Beta]"}], ")"}], " ", "\[Beta]"}], ")"}]}], 
      "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Lambda]"}], ")"}], "*", "0"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
  RowBox[{"(*", 
   RowBox[{"j", "=", 
    RowBox[{"k", "+", "1"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.634320752849866*^9, 3.6343208301059923`*^9}, {
  3.634320875548871*^9, 3.634320924020193*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}]}], " ", "\[Beta]", " ", 
  "\[Lambda]"}]], "Output",
 CellChangeTimes->{{3.634320921121519*^9, 3.634320924481369*^9}, {
  3.634321608375102*^9, 3.6343216130388613`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"j", "\[Element]", "Integers"}], "&&", 
     RowBox[{"k", "\[Element]", "Integers"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "\[Lambda]", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"j", "\[Equal]", 
      RowBox[{"k", "+", "2"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Lambda]", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Beta]"}], ")"}]}], "+", 
         RowBox[{"j", " ", "\[Beta]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Beta]"}], ")"}], " ", "\[Beta]"}], "-", 
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "k"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Lambda]"}], ")"}]}], "m"], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"k", "+", "\[Beta]"}], ")"}], " ", "\[Lambda]"}], 
             "m"]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Lambda]"}], ")"}], "*", 
       RowBox[{"(", "\[Beta]", ")"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}], 
  RowBox[{"(*", 
   RowBox[{"j", "=", 
    RowBox[{"k", "+", "2"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.634320938256637*^9, 3.6343209749211903`*^9}}],

Cell[BoxData[
 RowBox[{"\[Beta]", "-", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], "2"], " ", "\[Lambda]"}], 
  "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", 
   SuperscriptBox["\[Lambda]", "2"]}]}]], "Output",
 CellChangeTimes->{
  3.634320975931419*^9, {3.6343216084440527`*^9, 3.6343216131221037`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"j", "\[Element]", "Integers"}], "&&", 
     RowBox[{"k", "\[Element]", "Integers"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "\[Beta]", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "\[Lambda]", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"j", ">", 
      RowBox[{"k", "+", "2"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Lambda]", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Beta]"}], ")"}]}], "+", 
         RowBox[{"j", " ", "\[Beta]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Beta]"}], ")"}], " ", "\[Beta]"}], "-", 
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "k"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Lambda]"}], ")"}]}], "m"], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"k", "+", "\[Beta]"}], ")"}], " ", "\[Lambda]"}], 
             "m"]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Lambda]"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "k"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Beta]"}], ")"}]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Beta]"}], ")"}], "2"], "+", 
         RowBox[{"j", " ", "\[Beta]"}], "-", 
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "k"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Lambda]"}], ")"}]}], "m"], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"k", "+", "\[Beta]"}], ")"}], " ", "\[Lambda]"}], 
             "m"]}], ")"}]}]}], ")"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}], 
  RowBox[{"(*", 
   RowBox[{"j", ">", 
    RowBox[{"k", "+", "2"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.634320988321961*^9, 3.634321008716195*^9}, {
  3.634321255977426*^9, 3.6343212601358757`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", "\[Lambda]", "+", 
  RowBox[{"\[Beta]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "j", "-", "k", "+", "\[Beta]", "+", 
     RowBox[{"3", " ", "\[Lambda]"}], "-", 
     RowBox[{"2", " ", "\[Beta]", " ", "\[Lambda]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.634321260652575*^9, {3.6343216085459833`*^9, 3.6343216132070093`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"This", " ", "is", " ", 
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox["p", "k", "0"], ",", 
      SubsuperscriptBox["p", "k", "\[Beta]"]}], ")"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"j", "-", "k", "+", 
              RowBox[{"\[Beta]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
           RowBox[{"j", "<", "k"}]},
          {
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", "\[Beta]", 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Lambda]"}], ")"}]}], 
           RowBox[{"j", "\[Equal]", "k"}]},
          {
           RowBox[{"\[Beta]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"\[Beta]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Lambda]"}], ")"}]}]}], ")"}]}], 
           RowBox[{"j", "\[Equal]", 
            RowBox[{"1", "+", "k"}]}]},
          {
           RowBox[{
            RowBox[{"j", " ", "\[Beta]"}], "-", 
            RowBox[{"\[Beta]", " ", 
             RowBox[{"(", 
              RowBox[{"k", "+", "\[Beta]"}], ")"}]}], "+", "\[Lambda]", "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", "\[Beta]", 
             " ", "\[Lambda]"}]}], 
           RowBox[{"j", ">", 
            RowBox[{"1", "+", "k"}]}]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"**", "**", "**", "**", "**", "**", "**", "**"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"(*", 
     RowBox[{"This", " ", "is", " ", 
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["p", "k", "\[Beta]"], ",", 
        SubsuperscriptBox["p", 
         RowBox[{"k", "+", "1"}], "0"]}], ")"}]}], "*)"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "j", "-", "k", "+", "\[Beta]", "+", 
              "\[Lambda]", "-", 
              RowBox[{"2", " ", "\[Beta]", " ", "\[Lambda]"}]}], ")"}]}], 
           RowBox[{"j", "<", "k"}]},
          {
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}]}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Lambda]"}], ")"}], "2"], "+", 
              RowBox[{"\[Beta]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}], 
           RowBox[{"j", "\[Equal]", "k"}]},
          {
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}]}], " ", "\[Beta]", 
            " ", "\[Lambda]"}], 
           RowBox[{"j", "\[Equal]", 
            RowBox[{"1", "+", "k"}]}]},
          {
           RowBox[{"\[Beta]", "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], "2"], " ", 
             "\[Lambda]"}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", 
             SuperscriptBox["\[Lambda]", "2"]}]}], 
           RowBox[{"j", "\[Equal]", 
            RowBox[{"2", "+", "k"}]}]},
          {
           RowBox[{"1", "-", "\[Lambda]", "+", 
            RowBox[{"\[Beta]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "3"}], "+", "j", "-", "k", "+", "\[Beta]", "+", 
               RowBox[{"3", " ", "\[Lambda]"}], "-", 
               RowBox[{"2", " ", "\[Beta]", " ", "\[Lambda]"}]}], ")"}]}]}], 
           RowBox[{"j", ">", 
            RowBox[{"2", "+", "k"}]}]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"**", "**", "**", "**", "**", "**", "**"}], " ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6343213665849648`*^9, 3.634321369681175*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"\[Beta]", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "*", "\[Lambda]"}], "-", "1"}], ")"}]}]}], ")"}], "-", 
   RowBox[{"\[Beta]", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Lambda]"}], ")"}]}]}], "//", "Simplify"}]], "Input",\

 CellChangeTimes->{{3.634404676503913*^9, 3.634404699626029*^9}, {
  3.6344047620081663`*^9, 3.634404766184037*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"\[Beta]", " ", "\[Lambda]"}]}]], "Output",
 CellChangeTimes->{3.634404700651033*^9, 3.63440476751821*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "+", 
   RowBox[{"\[Beta]", "*", 
    RowBox[{"(", 
     RowBox[{"\[Lambda]", "-", "1"}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Beta]"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Lambda]"}], ")"}]}]}], "//", "Simplify"}]], "Input",\

 CellChangeTimes->{{3.6344049319608603`*^9, 3.6344049475575457`*^9}}],

Cell[BoxData["\[Lambda]"], "Output",
 CellChangeTimes->{3.634404948317122*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"j", " ", "\[Beta]"}], "-", 
    RowBox[{"\[Beta]", " ", 
     RowBox[{"(", 
      RowBox[{"k", "+", "\[Beta]"}], ")"}]}], "+", "\[Lambda]", "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", "\[Beta]", " ", 
     "\[Lambda]"}]}], "/.", 
   RowBox[{"j", "\[Rule]", 
    RowBox[{"k", "+", "2"}]}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6344050454425583`*^9, 3.634405171076025*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[Beta]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Lambda]"}], ")"}]}], "+", "\[Lambda]", "+", 
   
   RowBox[{
    SuperscriptBox["\[Beta]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "\[Lambda]"}]}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Beta]"}], ")"}], "*", "\[Beta]", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Lambda]"}], ")"}]}]}], "//", "Simplify"}]], "Input",
 
 CellChangeTimes->{{3.634405184825992*^9, 3.634405184843378*^9}, {
  3.6344052842732973`*^9, 3.634405295637636*^9}}],

Cell[BoxData[
 RowBox[{"\[Beta]", "+", "\[Lambda]", "-", 
  RowBox[{"\[Beta]", " ", "\[Lambda]"}], "+", 
  RowBox[{
   SuperscriptBox["\[Beta]", "2"], " ", "\[Lambda]"}]}]], "Output",
 CellChangeTimes->{3.634405296145512*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"\[Beta]", "+", "\[Lambda]", "-", 
    RowBox[{"\[Beta]", " ", "\[Lambda]"}], "+", 
    RowBox[{
     SuperscriptBox["\[Beta]", "2"], " ", "\[Lambda]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6344053411119213`*^9, 3.6344053505797873`*^9}},
 NumberMarks->False],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
m3BTzcsszxnDx1ta1dN7gSydPP+X50rjjn3oG9LmQwbzPLzZD7EwjZNkJ75t
8yGTPA9ftm6aSDuNy4lNtu9WxPKc3i5f/YSSVO5u65eXSyfmkOcej0YNEIhS
OY26uvY2z1ie0zX+0lltQSo3dqDRn88tPb/xea2pTfJvOMabJiZkubP82zQ+
/hOlPcc0D2d5zkA+/kbfGzX1Epbn1Ofj/9A7zHNKPfPsxce/3D7mcOAQln/r
xsdvmt2xl8laluc8wcdf9SosVPyI5Tn/q+vK5FzKO3od7M7yb7f5eFfP/XHp
1bcs8qyRFblaIs7g2nYYIwl+kU2e/8uLZXBbfAJHmn7JIc/Nx3lOEmlncOdF
lRu7tM0jzztsmj8VStJ/Pzc5LZY5sDznf3mfdK6FWXyQZ3MpeQ7m81quTfJv
w/n45xkGNerfYfk3HMU9lyUJHrD8Ww8+/vLKN6vah7I8pysf/3Hl0Y3L8lme
U4mPv/xgsy7qA1j+bRsfv+8DYaueG1ieM5ePnwsOmWQewvKcZ6Z9VxeIsrku
JSo3fI1Z/q3F5nEu2oJszkRy1mHLjxzyvJOP12i0qMLeJ5c8S0NbWkvEWVzt
To/fPI88W0v//SYWZnHOvUdzhvEsz/lfPVkW9/lK9bX9o6TkeQY39oFQksl9
27Q1TT2Y5Tl7/o/822k+fnHY8U4FLiz/1pyPP33ypX1nT7L8G475//wK73OX
5d/y+fjNi26t3PKD5Tmt+PhPXjC4IezF8m/f+fg1t3wpK7Nnec5pfPzHAoPf
ZsWyPGdh7Y2bQsnv56HC+qupa1j+zUa7VUfFfb3X2pkzB6bnkee42cJ92oJc
bt3yIrUBF/PJsxkf7yHBjpeeBwvI8+sbRpYScQ63yWdrp0VeUvI88sv1z2Jh
DtdPuiOnQznLc/qUKY8Taedwl891bHVqO8tzOv6P/JuUj7/3UgvtO9Ys/2bN
x99hw4/+iRtY/i2Wjz/1QKOh/mmWf8OxS0LnkKNhLM8ZzMff//6KYR+7sPzb
cD5+1zE6qV+3sTynNx9/1Et/bm8uy3POfGKvL9Iu4Ebnl15RO8Xyb29+xHkK
JflcpayldmJBAXke1XxCO4EonzvvYjYk/vfzJzzf1fPapRhP2/dauPuzVSF5
7s3Hazn8Wcb2TUXk2W3fpsUScR63a0KFwTU/ludseTf2vViYx41MXnzh4EWW
54z/H/k3Mz7+gwWDxtpOZPm313z84891/6g1i+XfRvLxJ3zoc814G8u/+fDx
/3jj3P+aH8tz4hj46mSglirLv53m46+rc4m4s4vlOZvz8ffwf/ZavZ7lOe/Z
GgeJhYXc++zcS8Z+LP/W55S3rkj79/1m9+t614pClhcSt/UQSqTc+/s+U447
FpFnldTNKgKRlLsoHWFcOb6YPDu1SdimLZBy2iuql83sw/JvRXy8dmFGwRcC
WZ5z1fJb8yTiAs5j08B7xttYntPwf+Tf7vLx5+ytEGj2ZPm33nz8a4MWb7Ab
yvJvbnz8X9tObDVnGcu/teTjv3pX5uLnxfKcjnz886IDpju1ZPk3HO1CUl86
72N5Tms+fpsXjyY+VGP5IpUe7WdIxMXcnN7+LxZJiskz6ukeqDjGmciLyXPR
v4naIu1irsbO2eCaIcu/reLrEjv+Onrg7EmW50x4dbuZYv7f06v7e8sWLP82
M6fdZm1BEede5GidcpnlOd/w8TYolQfVzmV5Trf/kX9rycc/s+P75ZJK5tkR
9YAZ59WeqrL8WyEf/7s5yzevNGH5Nxs+fpuzK7O+uLE8Zxwff25mTmxMPfNs
xscfd2TibUsXljd+z+e7wj7vyJUbPiP/g3j+vLY04Po0lg/R4n/u9YT4QytT
i+l13vL/bpYUk39+Ersex/QGScwXrQY6b817yLk2O+B+IePIE76slbvXdmyk
10cd2lXVecOa/1UfiX83a+Pzp04S14F77243tPlfdWngY8tycq3MP7P6J55/
fbVm/ta2rC8efPy8wf2GOLK+ePD050GpC2SJVAcA/iFL86zMgfXFgztsHaKh
dICt+4Jftxy2KiScrUeCr3/gMSC4N+szAY9etXGFzIH1xYPHO99Vs/qWT+sE
tN7VevZ4ZQOW1wYPrFz6U/HcC5/4Pq2euP1P/hA+wVNlk2v+rucDn9T20cAI
XVZPBq4Z5Bje1orVOYELfPvMN7jD6m/A30mvBBgps/538A/iGqWuwazfDzxS
Q9RVSYmtl4M7a17saWXO1nHBEz+27mhwh60vEu+cU+HQlvW/g+9XGhmh68j6
38G/uuWJFsiK2LoL/KSpDHQMYPXD4I9mRVbL5SXkGePTvi1TtnU8FUmeadwa
cCD57/pI8Jye2fF2D2NY3RvPN788OcXLN4E8gy/t1MXFMJ71A4NHdzb+rNae
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
2b4N4LffdP4ilzdye/l6OMoTdnG/FaH7ierPwJNDvQyGOEZRvRT1ic6c1Zia
Fcs58PUx4He8wl61tUrk99tLIr7mc6dNd1J/0ro+uICvb8Q6NLizqvSs4jkQ
66bgS4yfh4fr5tI6H/iXhPS9RofzaV0KPOmH093ULCmto4Afm7R7ZsjMYsr7
g08Ndp6mlySjejvk2RYVnwnMmRZD9WHgI3ptqlc7lUD1TFRn6jpQs2+uhOpv
wNf3s+zUZmgq58M/f4Cr8PWHLfn1VPCU3MA9m7bl0fol+PItXr+fNwpovQ38
oGdl7PwlRbQ+BK7zQuI3bqOM1jPArYUOO5s9K6H6NuS75tp45PsaJ1E9FnjP
cdV6d3elUP0Q+ICs3tfr1v9+nuXv99QXxdf1xfPrlFSvGLlig2RMIWfIr6uB
9wkfsK59aDEn4teBwFvMf5S1Xb+E1l3A5wxrNivIpZTqw5BHKp+v6bDweCrV
M4GnGZhb691Pp/Vdqpfk69+wHgm+ZKSzQetzMlo/I75z5DgPaQmt94D7zeg7
4srcMqqXQr7lVrPihR7SDFrXBL/E131hHY76pAdueHjdp5TWjaiO+83nQTd7
lNP6HO1zwNcvYT2J8jlnWwz7KimnOmPM4w7weQafJvmBTnx+oG+TPMBBPg8Q
3mS+H8PP9482mdc35+f1pk3m7x35+btVk3n3V37eHfw/5tc9/8c82rHJfHkc
P1+ObzIvtuLnxYZN5r9l/PwX622Y//ry9UhuTea/Vfz8dxc/fmK+Nso1tZnX
iEyuhB8/ab5pPdyj4mYW1WuCb9nWdp35pByqLwTf+GnTJsX8C/Vw4POWr3is
1r6A6l3Ag2Y+t36oVkL1GeD7u77ZYrexlOoJwMfK1TTvpJbR+jd4RmsfO7uN
FbReC35opLP5Q7UqWl8E19hzM8rhSzUXwo+TVJ+uFFgTr5VDdajg3fWGtDW4
k0t1k+A/owaHf7DJpzo/8PMlLyYo9rNFfQl45Y2J5SPalVE9BPiT1XZrjQ6X
0/o9ePqapOHWGpW03kzzaO9zC3w+/v478uMhuK+W+7d2bjWcCz8eYv7ysbf5
QEV/K8ePh+CLAj33XvYvoHpE8JT2+xptLxRSfQb4rYevS/R1KqieANzSMUev
PrSS1r/B1a4vdTq8u5rWa8FDtLr+/DK3ltPhxz08/8cc+nJ4SKdCLoMf98B1
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
lzz3j7wQyNbzwL34Ol74ARfN9yhu58b2hQDvXzR58Ysgti8E+JBuEb32ObP9
Cuh1VCIEsmdsXwh6vzP6jR5RyvaFoHyjJPynCcee9xBXCZ9/Q/zgy/n6UuoT
4+N1Xm+iNC6G9QuB2/L5N7wOeCBfP4nXpf1dxv1wUfQV4vXxvjtK1izvLWZ1
A+AfPrZ/MsmDzTea5t/we8Fd+XpCqn/l+ezId72ezmJ93+Ab1ySJV9uzzxV8
X/9zP2X1CpQH40zff7Bh8xxwh3NnNeYsY+vu4Af5/BviBA/i6/EQJ3jDmifP
v7VnfdPg/Z8uO7d/FOubpnUxveiLnbewvy/Vg71+qp61m9VV0P4WYsdEgR6b
j4E/KnGbqN+B1QeAX7WvMVGsO3Zpkn9byuff8L7A8/j6N7wv8Mf1l2cWfmPv
C/xHbZL95Sr2vsDter6zbTWe9SlTn73lAh3DC2z/B9pP1CB+82crKb1f8Lxh
j4u+lrM6DPCcOW427UPZvA785fk9n4+GsXoF8Ef7jc71bcb6i8HX8fk3eADv
wdenUV889pc9dySjnRvr16b821TLWS+CWL82+J02Lwzqm7M+YvB7v86dSl3D
+ojB3T9WrVmVyfYT+F/5JfCZtzNazH/N9j8E7//4zGHpdtbXBJ73U35X0W9C
+wnwXD/nkqFiPxD4Af9Vej7LZD/rCwZv2hdM+yLwdWjwBq42xGH3kHmsLxh8
iptkcNR+1n8NnlXtUycLZ97Ay21jy1xHs75g8E3Rtp28g1lfMPiiSYsWjrFh
+x/CazC/bvt/376gFQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1: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
I/Ls2D/YBuO/Ay3T4QI=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsvpFEYwOGPcRsMK6Jd0RAFpSgoN4pViSjoiGK3WIlsQakQOh1/AS0R
+k3o3MfMuM2ystkIu2Tjfg3PSRS/eU7mO5nznsxX0zvQ8S0niqJR3SqsL/Vb
87lR9IE/WM0NNvKQrTxnO5/Zw9JYFCX01bqew2zmONs4xS7OsJ+L/M5l/ucJ
77Wta/3TioFSXGWaa8xwnTthJu5yk3vcYlL74Xd4wBSzTPMnMzzkDo+4y1+c
dY9TPuhYN+GOmjBbkiNc4iAX2MdpdnKSnzjGJg6xjrX6Yh1nNx+d8Zl/2cIs
G8K9+JEX9v3hncp1FfaqyoxlrGSCFSwNe1jCBItZwng4j0UsYL4KrWMsCP9x
+I6vytNLeKYnGSOa83H2/j68Acy/Svc=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1004, 473, 689, 1113, 912, 691, 1114, 913, 692, 1115, 
       914, 693, 1116, 915, 694, 1117, 916, 695, 1118, 1010, 1217, 696, 1119, 
       917, 697, 1120, 918, 698, 1121, 919, 699, 1122, 920, 700, 1123, 921, 
       701, 1124, 922, 702, 1322, 1005, 923, 1006}], 
      Line3DBox[{704, 1011, 1218, 703, 488, 705, 1125, 924, 706, 1126, 925, 
       707, 1127, 926, 708, 1128, 927, 709, 1129, 1012, 1219, 710, 1013, 1220,
        711, 1130, 928, 712, 1131, 929, 713, 1132, 930, 714, 1133, 931, 715, 
       1134, 932, 716, 1135, 933, 717}], 
      Line3DBox[{719, 1014, 1221, 718, 1015, 1222, 720, 504, 721, 1136, 934, 
       722, 1137, 935, 723, 1138, 936, 724, 1139, 1016, 1223, 725, 1017, 1224,
        726, 1018, 1225, 727, 1140, 937, 728, 1141, 938, 729, 1142, 939, 730, 
       1143, 940, 731, 1144, 941, 732}], 
      Line3DBox[{734, 1019, 1226, 733, 1020, 1227, 735, 1021, 1228, 736, 520, 
       737, 1145, 942, 738, 1146, 943, 739, 1147, 1022, 1229, 740, 1023, 1230,
        741, 1024, 1231, 742, 1025, 1232, 743, 1148, 944, 744, 1149, 945, 745,
        1150, 946, 746, 1151, 947, 747}], 
      Line3DBox[{749, 1026, 1233, 748, 1027, 1234, 750, 1028, 1235, 751, 1029,
        1236, 752, 536, 753, 1152, 948, 754, 1153, 1030, 1237, 755, 1031, 
       1238, 756, 1032, 1239, 757, 1033, 1240, 758, 1034, 1241, 759, 1154, 
       949, 760, 1155, 950, 761, 1156, 951, 762}], 
      Line3DBox[{764, 1035, 1242, 763, 1036, 1243, 765, 1037, 1244, 766, 1038,
        1245, 767, 1039, 1246, 768, 552, 769, 1157, 1040, 1247, 770, 1041, 
       1248, 771, 1042, 1249, 772, 1043, 1250, 773, 1044, 1251, 774, 1045, 
       1252, 775, 1158, 952, 776, 1159, 953, 777}], 
      Line3DBox[{781, 1160, 954, 779, 1161, 955, 783, 1162, 956, 785, 1163, 
       957, 787, 1164, 958, 789, 1165, 959, 791, 1166, 569, 793, 1167, 960, 
       795, 1168, 961, 797, 1169, 962, 799, 1170, 963, 801, 1171, 964, 803, 
       1172, 965, 805, 1174, 967, 807}], 
      Line3DBox[{806, 966, 1173, 804, 1265, 1057, 802, 1264, 1056, 800, 1263, 
       1055, 798, 1262, 1054, 796, 1261, 1053, 794, 1260, 1052, 792, 1259, 
       568, 790, 1258, 1051, 788, 1257, 1050, 786, 1256, 1049, 784, 1255, 
       1048, 782, 1254, 1047, 778, 1253, 1046, 780}], 
      Line3DBox[{809, 1058, 1266, 808, 1175, 968, 810, 1176, 969, 811, 1177, 
       970, 812, 1178, 971, 813, 1179, 972, 814, 1180, 1059, 1267, 815, 585, 
       816, 1181, 973, 817, 1182, 974, 818, 1183, 975, 819, 1184, 976, 820, 
       1185, 977, 821, 1186, 978, 822}], 
      Line3DBox[{824, 1060, 1268, 823, 1061, 1269, 825, 1187, 979, 826, 1188, 
       980, 827, 1189, 981, 828, 1190, 982, 829, 1191, 1062, 1270, 830, 1063, 
       1271, 831, 601, 832, 1192, 983, 833, 1193, 984, 834, 1194, 985, 835, 
       1195, 986, 836, 1196, 987, 837}], 
      Line3DBox[{839, 1064, 1272, 838, 1065, 1273, 840, 1066, 1274, 841, 1197,
        988, 842, 1198, 989, 843, 1199, 990, 844, 1200, 1067, 1275, 845, 1068,
        1276, 846, 1069, 1277, 847, 617, 848, 1201, 991, 849, 1202, 992, 850, 
       1203, 993, 851, 1204, 994, 852}], 
      Line3DBox[{854, 1070, 1278, 853, 1071, 1279, 855, 1072, 1280, 856, 1073,
        1281, 857, 1205, 995, 858, 1206, 996, 859, 1207, 1074, 1282, 860, 
       1075, 1283, 861, 1076, 1284, 862, 1077, 1285, 863, 633, 864, 1208, 997,
        865, 1209, 998, 866, 1210, 999, 867}], 
      Line3DBox[{869, 1078, 1286, 868, 1079, 1287, 870, 1080, 1288, 871, 1081,
        1289, 872, 1082, 1290, 873, 1211, 1000, 874, 1212, 1083, 1291, 875, 
       1084, 1292, 876, 1085, 1293, 877, 1086, 1294, 878, 1087, 1295, 879, 
       649, 880, 1213, 1001, 881, 1214, 1002, 882}], 
      Line3DBox[{884, 1088, 1296, 883, 1089, 1297, 885, 1090, 1298, 886, 1091,
        1299, 887, 1092, 1300, 888, 1093, 1301, 889, 1215, 1094, 1302, 890, 
       1095, 1303, 891, 1096, 1304, 892, 1097, 1305, 893, 1098, 1306, 894, 
       1099, 1307, 895, 665, 896, 1216, 1003, 897}], 
      Line3DBox[{911, 1009, 685, 910, 1321, 1111, 909, 1320, 1110, 908, 1319, 
       1109, 907, 1318, 1108, 906, 1317, 1107, 905, 1316, 1106, 904, 1315, 
       1314, 1105, 903, 1313, 1104, 902, 1312, 1103, 901, 1311, 1102, 900, 
       1310, 1101, 899, 1309, 1100, 898, 1112, 1308, 1007, 1008}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1113, 252, 488, 280, 1222, 503, 295, 1227, 518, 
       310, 1234, 533, 325, 1243, 548, 340, 1254, 563, 1161, 355, 578, 1175, 
       370, 1269, 593, 385, 1273, 608, 400, 1279, 623, 415, 1287, 638, 430, 
       1297, 653, 445, 1309, 668, 460}], 
      Line3DBox[{253, 475, 1114, 254, 489, 1125, 281, 504, 296, 1228, 519, 
       311, 1235, 534, 326, 1244, 549, 341, 1255, 564, 1162, 356, 579, 1176, 
       371, 594, 1187, 386, 1274, 609, 401, 1280, 624, 416, 1288, 639, 431, 
       1298, 654, 446, 1310, 669, 461}], 
      Line3DBox[{255, 476, 1115, 256, 490, 1126, 282, 505, 1136, 297, 520, 
       312, 1236, 535, 327, 1245, 550, 342, 1256, 565, 1163, 357, 580, 1177, 
       372, 595, 1188, 387, 610, 1197, 402, 1281, 625, 417, 1289, 640, 432, 
       1299, 655, 447, 1311, 670, 462}], 
      Line3DBox[{257, 477, 1116, 258, 491, 1127, 283, 506, 1137, 298, 521, 
       1145, 313, 536, 328, 1246, 551, 343, 1257, 566, 1164, 358, 581, 1178, 
       373, 596, 1189, 388, 611, 1198, 403, 626, 1205, 418, 1290, 641, 433, 
       1300, 656, 448, 1312, 671, 463}], 
      Line3DBox[{259, 478, 1117, 260, 492, 1128, 284, 507, 1138, 299, 522, 
       1146, 314, 537, 1152, 329, 552, 344, 1258, 567, 1165, 359, 582, 1179, 
       374, 597, 1190, 389, 612, 1199, 404, 627, 1206, 419, 642, 1211, 434, 
       1301, 657, 449, 1313, 672, 464}], 
      Line3DBox[{261, 479, 1118, 263, 493, 1129, 285, 508, 1139, 300, 523, 
       1147, 315, 538, 1153, 330, 553, 1157, 345, 568, 1166, 360, 583, 1180, 
       375, 598, 1191, 390, 613, 1200, 405, 628, 1207, 420, 643, 1212, 435, 
       658, 1215, 450, 1314, 673, 465}], 
      Line3DBox[{265, 481, 1119, 266, 1220, 495, 287, 1224, 510, 302, 1230, 
       525, 317, 1238, 540, 332, 1248, 555, 347, 1260, 570, 1167, 362, 585, 
       377, 1271, 600, 392, 1276, 615, 407, 1283, 630, 422, 1292, 645, 437, 
       1303, 660, 452, 1316, 675, 467}], 
      Line3DBox[{267, 482, 1120, 268, 496, 1130, 288, 1225, 511, 303, 1231, 
       526, 318, 1239, 541, 333, 1249, 556, 348, 1261, 571, 1168, 363, 586, 
       1181, 378, 601, 393, 1277, 616, 408, 1284, 631, 423, 1293, 646, 438, 
       1304, 661, 453, 1317, 676, 468}], 
      Line3DBox[{269, 483, 1121, 270, 497, 1131, 289, 512, 1140, 304, 1232, 
       527, 319, 1240, 542, 334, 1250, 557, 349, 1262, 572, 1169, 364, 587, 
       1182, 379, 602, 1192, 394, 617, 409, 1285, 632, 424, 1294, 647, 439, 
       1305, 662, 454, 1318, 677, 469}], 
      Line3DBox[{271, 484, 1122, 272, 498, 1132, 290, 513, 1141, 305, 528, 
       1148, 320, 1241, 543, 335, 1251, 558, 350, 1263, 573, 1170, 365, 588, 
       1183, 380, 603, 1193, 395, 618, 1201, 410, 633, 425, 1295, 648, 440, 
       1306, 663, 455, 1319, 678, 470}], 
      Line3DBox[{273, 485, 1123, 274, 499, 1133, 291, 514, 1142, 306, 529, 
       1149, 321, 544, 1154, 336, 1252, 559, 351, 1264, 574, 1171, 366, 589, 
       1184, 381, 604, 1194, 396, 619, 1202, 411, 634, 1208, 426, 649, 441, 
       1307, 664, 456, 1320, 679, 471}], 
      Line3DBox[{275, 486, 1124, 276, 500, 1134, 292, 515, 1143, 307, 530, 
       1150, 322, 545, 1155, 337, 560, 1158, 352, 1265, 575, 1172, 367, 590, 
       1185, 382, 605, 1195, 397, 620, 1203, 412, 635, 1209, 427, 650, 1213, 
       442, 665, 457, 1321, 680, 472}], 
      Line3DBox[{277, 682, 1322, 683, 278, 501, 1135, 293, 516, 1144, 308, 
       531, 1151, 323, 546, 1156, 338, 561, 1159, 353, 576, 1173, 1174, 368, 
       591, 1186, 383, 606, 1196, 398, 621, 1204, 413, 636, 1210, 428, 651, 
       1214, 443, 666, 1216, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1308, 444, 652, 1296, 429, 637, 1286, 414, 
       622, 1278, 399, 607, 1272, 384, 592, 1268, 369, 577, 1266, 354, 1160, 
       562, 1253, 339, 547, 1242, 324, 532, 1233, 309, 517, 1226, 294, 502, 
       1221, 279, 487, 1218, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1315, 451, 659, 1302, 436, 644, 1291, 421, 629, 
       1282, 406, 614, 1275, 391, 599, 1270, 376, 584, 1267, 361, 569, 1259, 
       346, 554, 1247, 331, 539, 1237, 316, 524, 1229, 301, 509, 1223, 286, 
       494, 1219, 264, 480, 1217, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
Vr8iy4E91maF11wZ4Ee3Wj+ygEBvntyN3BHGgfENEvPtQhmwvnp429woHNX6
H1y1upMDn5XfpOP9DLibUpypNMlGi72XvZslyQVbhptF7w2qzydf+VR7lI0U
KqVy7+tzoezNx9gVPizImLfT3rgdQ3sDjIS4O7ig/Oeh5ONNGEhJfllJIcr8
o/pkIrEXItcSstYMAoSICqcYMw5y/8fv3wPeHVeWyOmCZDMhy4dCHLga2n6A
QiT8j9/Rl1aqBpa6M0DubkLm6Tc4ZPMCSqz2c9DQP35H/6dLIWHOOAsUg95W
17xkg2yAjlmg7f+p5cujseq/t2VKlERFSGVISZEhNPiUJgmZMpchQiKhKDOh
hMjYqEGolCakaIuiKDPhHs99zrlvMhWllDzvedby+37X6l3+eH9rvX/t1VnW
3Tn7fPbe17XPtTeJ3GaYr09sfBVXp4bBnd/Byrtb2UBsMBHWWjHz3H1EgtcK
oOJQ019yy9RcNtyR+CCa2EmgHdPz+Iem5/GFp+fxfxeObTy1BgfOhQfl3hgT
VjAr790NpK5Pz+krTc/pZ0/P6c/UT57pekB24oGfj6m67BbjcvgIAxzuHk62
Pz3zXL99tpj4XhMSdjjf2j+wiqpTIzG676i8N9O8v41ljs9YPQkqtr8L67UY
ELQ4duyx3cx7AOxH+6Zc1LmQbyQVeYo6h++eCTk6VmEz7geoGzhO9oVyQdh0
o8bZeUyouI90E5bNvDdA72S7VdtDLgykrH87SL3PMsP4o5eiZt4noMF/uXZ/
MxfmFR228KxiAX5YKpSy/9kzsH16z8DL6T0DkyNmmGhhFzxZvFK/8igBD/Xg
jzqbREaJQRbf+9pg955cgalrJMgdM1agLJJ1Ddi0xLAXzJLn39y4FQfz0ivX
8BESWdc5bJl/mQHlX1oFZJQ5EHlp1tp9LSSq4f/naShV/0QvttMTFDGA4lLB
3YkkerTI/VN0OQaTHoYCLtvZsF9I20NenkTf55+eGBzmQJNFW1KYNAuqkm70
hGTPfE4SnJsVN5IESG9QaMjUZUDZFqMFLnY4cn7YvKqiiAQiqls4q5oOuu/C
5i24y0Fng4LuNJtQ78skN/hnDh3arPz8jo9jaGHW4oNbm7jwaor5dPAZHWIT
qgxcjDBUVnR16XVdHmwqeCBcM58BU8Kp2cOpbDRagz3eFseDjss+DT43GJBY
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
haO5DV7bUhj/+W5r9td32/8Diov/Gw==
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{340.504537988431, 125.80467367341254`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {0., 1.9999997857142962`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.1009326272901085`, -1.3531622867013278`, 0.05629091273830778},
  
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.634405334877627*^9, 3.634405351170233*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]", "-", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], "2"], " ", "\[Lambda]"}], 
   "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", 
    SuperscriptBox["\[Lambda]", "2"]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Beta]"}], ")"}], "*", "\[Beta]", "*", 
    "\[Lambda]"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6344888656576443`*^9, 3.6344888792507544`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Lambda]"}], ")"}], " ", "\[Lambda]"}], "+", 
  RowBox[{"\[Beta]", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Lambda]", "-", 
     SuperscriptBox["\[Lambda]", "2"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.6344888800251617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Lambda]"}], ")"}], " ", "\[Lambda]"}], "+", 
   
   RowBox[{"\[Beta]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Lambda]", "-", 
      SuperscriptBox["\[Lambda]", "2"]}], ")"}]}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"\[Beta]", "-", "\[Lambda]", "+", 
  RowBox[{"\[Beta]", " ", "\[Lambda]"}], "+", 
  SuperscriptBox["\[Lambda]", "2"], "-", 
  RowBox[{"\[Beta]", " ", 
   SuperscriptBox["\[Lambda]", "2"]}]}]], "Output",
 CellChangeTimes->{3.634488961881523*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"\[Beta]", "-", "\[Lambda]", "+", 
    RowBox[{"\[Beta]", " ", "\[Lambda]"}], "+", 
    SuperscriptBox["\[Lambda]", "2"], "-", 
    RowBox[{"\[Beta]", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", ".5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6344892782277203`*^9, 3.6344892887300587`*^9}},
 NumberMarks->False],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nHlcTdsbxo9UyExmIQ4ylcgQspHpGDJPRco8dGTOHJlT4hgylshwy5gc
IkMoVIYGQ53meS6uLqL6dbKe/Wb9Pu4/93O+d9193v2c1bvf9ax3bf159pMX
akgkktFaEkn1in/f29e9sUSSJHjN9L27r/uawYYS9T9JQmbKkVkKabLIF/4X
PEr9uanZT0+pLEXkZ/MOuKk/j3Cfl6GUp4o8OmXSR/XntZ9fdZcp0kReO6ZZ
W/XnC2ON16iU6SI3fxu/SP058uKJALkqQ+Sbgi9cV3+uVhlXlshvPVj6X3l5
ptDTcvFIhTRb5Fm3jAarP8/1f+MileWIvO2V4t3qzwfr9Y1SynNFPsPjwWv1
54dLzraQKfJEfvDojibqz3lPNW1UynyRBzuPmqP+3ErP7pJcVSDy0u11L6o/
j3aIyisvLxS5MfsMnZcZDj7ZUeYnvEoJHHg5KV7UGfzxj2UXxhskiTqDt3D6
dmWUTbKoM/ganV3Xh55IEXUGD1c08B/4LlXUGbxzq7MBfWqSzuBOF7o8NhpC
OoOruimfd9lAOoP38R8W2uFmlqgzuNugt2/1srJFncFznlu9b9aOdAYfPj4r
tuFM0hn87Pu1SbUPkc7g3+dUy9B6STqDT8hwza2q89WsmHKp7KlgfV7/e7pu
nKgzuIW9R/HNiwmizuBtPVx/mJ1OEnUGd9cct+FCarKoM3i95TrfanYnncH3
RLxct2JtmqgzeGm/vV+jAtNFncHXeoxYY6pFOoPna2p+8RhPOoMvWP50peZx
0hk8LmJ74dKEHFFn8Cn9hRVvO5HO4GEepXkm9qQzuLlW4PJTd0ln8HvLN+VU
1Vl6X7f3XXmY0E4w7BN4JlbUGVywST+9cHS8qDP43B1nNOp/TRR1Bh8S8Y9J
3ATSGfydrVbWzYspos7idb7YnN79M1XUGbzAKdDCchLpDL6tcXMNo8sZos7g
9bzX3KleminqDO5h8nbJp8mkM3iP4K6tr10hncEfTtvzdkdZrqgz+PiMZKfp
U0ln8Pj1Zn27+ZDO4MtrnMyuqvOb4M63pbJIoXZAypcuG2JEncEnhviYBvSP
E3UGPxa1evvoHwmizuDylWdTc+OSRJ3BGzhU29vbjHQG99u6sOvms6Qz+LRd
r14/LU0TdQb/7txjlY416Qx+6vBh3cmPSGfwQSeK755sQzqDJ3rMskreRjqD
O118WGaQSDqDS6/qn18pkM7gIX67R9zzJJ3BlwRkZ1XV2dkwOFyu+iDoNxCM
jS5/EnUG3+FV8MZ3vUrUGTypl4edwUjSGbxdSqfdkc6kM/g7n7KoQ1+SRZ3F
66/50H6CJekM3nPQ9VV1n5LO4vdq7nkS1oV0Bj/8ek5958OkM/iQ432sR//I
EnUG/2xd95q2LekM7tU5/efzl6Qz+MSiwDE7e5LO4JKAoyeHniCdwa/vsPtD
55GVOqmEecPNi8K6kM7gEZ9vWplpkM7gQz3bvLgeGy/qDD6z08gWh2aRzuAN
S3+9eRlMOoO/irq9q1ov0hl8h8+yAQM8SGfw/jv0i1brkM7gX2Z8uui7nnQG
/8fQzSothXQW71drZEO9CaQzeIu4XyHTHpDO4JF+t7cc7Ew6gzvvX9brxRHS
GVyw0f9D52qsngufVmgkkZDO4MPufk6Uq2JFncHvNv/qplKSzuC/x5HO4BHy
Xw4qJekM7uJROkEhJZ3BR74t60z/f5bINSr/TTqDB/as9kkpJ53B19tq3JSr
SGfwXorq+9TjoDN4fqW+pDP45X+1+iukpDO4rbRGA5mCdAZvOa3mHzr/jivl
/+YzeCQ3n8GHcfMZfBY3n8H5+QzOz2dwJ24+g5ty8xn8Mzefwfn5DG7LzWfw
ltx8FnXg5jM4P5/B+fn8+3vShHZcfgbn8zN4Mpefxetw+Rmcz8/g27n8DM7n
Z3A+P4Mf4vIzOJ+fwYu4/Ax+jsvP4JO4/AxejcvP4Hx+/v3/ZQh1uHoDfBJX
b4Af5+oN8BVcvQHO1xvgt7l6A5yvN8D5egP8NFdvgJtx9QZ4EldvgPP1BnhH
rt4Af8HVG+CLuXpjY8SA3up49bn6GXwIVz+D23D1szieq5/B+foZnK+fwfn6
GdyRq5/B+foZnK+fwQ25+hmcr5/BLbj6GZyvn8H5+vnj7lpP1N9vw60HwSdw
60Fwfj0Izq8Hwfn1IDi/HgTn14Pg67j1IDi/HgTn14Pg/HoQfCq3HgTn14Pg
/HoQnF8P9hnwaZz6eqGcvwHO+xvgLTl/A5z3N8Bfc/4GuAHnb4Dv4PwN8DjO
3wDn/Q3wQ5y/AZ7N+RvgvL8B7sH5G+DfOH8DfCLnbxwuuBSj/sz7deCLOL8O
nPfrwHm/Dpz368CHcX4dOO/XgfN+HTjv14Hzfh34dM6vA3fl/Dpw3q8D/8X5
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
lj1Pq/enwTMjs6TNaqQKzda5J6v3O8E/BlkG245NY+sb8idf3AxfeNUtnfVD
kA95gvUralTur5PfuN/uaOaHczlsX5/8xo1W2vv003MFm8p9VvIbl47ZYGDX
JZ/tT5PfaGma81IpLxDfJwA+2mD20mp+heI+yHGu//C80fzJCin5hLEJbRNy
Z6cIEftDT0hl5BN6OT6JV15LFSRpxolKOfmEi9vZxu8oSxMC2T6F6EOy/sDc
S30FhZT8vdHDd6k2KCryfjWP3VIZ+Xv106Uq89Q8QWalFa6+D/APu4Nj65kU
CA537BrJFOTvnem0KDZmV6G4j2PP9fUdqFynkv8WZN+n1nF99PeQ/2Y58JiJ
95Y01j9BvtkM1l8XXbmfTf5YkSS6/w+PPNYHQP7Y/vDeC2qU5LN9ZfLH2p84
4tZkWqG4r9SY639bW/fEeIWUfCr94HZavWqnsXNy5CMdZP1mD3ctH6CQkl/0
37u8skdPKvJ1QuR2qYz8ojlDzrSP6lAo7lvd5fq+HNh+ELgH66e6VLkeJT/k
bUq/HsZfClifGfkeQ5jv0YTzK+4wv2I450s0Yb7EGs5/eMf8h/Ocz3CA+QwR
nJ8wgvkJEs43QN+UEecPPGD+gDXnA6xjPoArt943Zuv9QG5dn8fW9bnc+v0S
W7+35NbpNmydbsP2s7BO/8n6pkZx6/QWbJ2OfI515RANU5+QTfFCGcvn4C0u
tH4b1iVJzOfgDYNby0yOJwuzWT4Hr5XZ+pm6rxX5XFwv19Iz07JPE/M5+L+s
D6o5y+fgOSv0fAf7Z4n5HDz1kF7Hy+0q1i0sn4PH+el51nfNFfM5+PtovRYb
fuQJ0Syfg7/+T+9I0kLK5+BPm7epK4ssFO6xvI31oGPpk8A1HZLEvA1+a//E
ixNdkoWmLG+DpzZJcu1RnCLmbfAm5+3X61inifuw4FdZPxLyNnhC5LXm26rl
CD1Z3gZvMNesmtUyytvgw3LDs/tF5QkHWd4GX+swO1J3UIEQyPI2uHf1vPuf
vQvF/Ix1WR/HCZ0mnEoW3rH8DH6moEw2vzRFzM/gmtbX5Q42aeI+MvgF1ueT
w/IzuM6BVu3iJlB+Bl9dEmpe5Fex/mH5GTx26abFmk0rPrP8DD4kpsuB5hsL
WX8kreOUJsaHZ7emPAw+QXI4cJlDmrivDW7B+mGQh8Ezgt8+eXwyT9BgeRh8
+2GjvNdf84WeLA+DN5/j1ixuQqGYb7Eu2DDu7S8Nb8q34PqsDySQ5VvwrFu9
S9xiKupElm/Br02O/mHZtVDcZ0c9fIz1M1xkeRV899abYbdrFQpla35YKaS0
T61ZWk/TU54g2LK8Af6Y7ZujPgQPYPVhKbuOWK+y62BdA36Y7YNjnx0c+/ia
7O8OXIPVUQ/UxwdUmeL31k/8d6j6/KxVnZIX6r5G1Bvd63Tau2JtgrCuy6IV
6r4l8Lueg7W/RVX8vVX2QdK+7T8Hb14a2jxLaKLfw1GlpH3P2j82P2ryPk4Y
vvlosFxF+6QnBjx8qPYTjNTHcBSZIu8RVC1+3IQMwfqExE6lpP3Kr7bn45qd
yxRcvyz2k6tovzJQwzwupShLeMveW4Xn9T0nu7v3l6lYvzXtG+a06F7vY7sE
oUdl3zPtDx78tM5v4/IkIbuyTzdT5F+0i+f6fUwXmlf2d9K+nkvk1ANPemWy
vlja1+vo4a9845rF/Gna13u0VDclLitb2D/mSL5STvto/XouvniqX6xwz7uk
t0xB+27a9UPynpbGCZlltptUStpfe58vNcl9lig0nfXqiVxF+2uTM4Ie1hqR
LFxYXH5Efe4cfJ/JO4ORKyqeH0GLYpVy2i/7fMFxnGVExXqq9Zt2MgXtl81s
bLRyhUmW0HN9n8UqJe2XPXFKOOLkni3MfXfmmlxF+2Wdv7jePV6SI5iz92ih
3nDZp3rwxSxGWB3QI1fdXwtedK7E5Wr9OMGr8TFjdb8m+JSAFtaLkhNYHUH7
WXFLzjQ7FJMklL+Y/0jddwher7ibRD4sRZizpddYdZ8c+Kq6YyM66aYLLpV9
t7Rv5X0yNqD61gxWR9C+1ceOy84npWcKOZX9o7RvVdPvh/NDi2zWd0v7VgMG
719z6m6OMLqyD5L2rexCm892aJcn/v2iTnjYyNRQsv2T0P2NzXmpjPahrk43
bR8xUyVYGbzMUspp/+jsKdOm540TBGcnIyOZgvaJRha23m26u2K9E3d8nUpJ
+0FDGuqVe32uWO/0LXsgV9G+T//eeht1rKnv1IrrVx+ZGz5aff4V3MBBT67q
myGsG2HiJpXRfk37k3qZ5hcyBW/P0++VctqXafFAz/Zq/Wwh6odGa5mC9l8a
x+updLfkCBpTl81TKWmfRadcb9rWrFzB+HrEFbmK9lOq67d5mz41XzjH1sWo
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
g/Mv7cFWqWsx0pP/BzkJuv4=
          "]], Polygon3DBox[CompressedData["
1:eJw1mnfgT9X/x+855xoNkhBS2Tsjmig0VGjQUKSlUEJpoIHKKHuk7FFUNu30
rZTV+ja+TRJJey9t/Z6Pnvf3x/m8z/Oe+77ve8895/l6vp6vT41LB3TpH7Ms
u15/cn2eoT+P6nN5yLLDSmTZmcKPCa8QbiLcM2XZSuEbdX4N4bM1/pTwGo0f
Lny68Crhh4QbC7cQHiJ8jfD+wmcJPy68Urip8PG63iThbrpeBeFjNH6X8G0a
P1D4OI1PFD5P4wcIt859/p0aryp8ssbvFb5I4xWFTxGeIXyxcCXho3T+GOHh
weNHCg8XHhL8e0cL3yk8IhTnJ+Mzo+/3VOGZwpdE388xyfd3lnB54eb6/pXC
l+r7+wlfqPEVwjdovLrwRcnzMVi4JuM6f5Pwszq/tXAPjS8v5v9Q4S4af0J4
lcabCXfT+EPCAzV+sHAzjffm+TReVril8FDha4Pvp4nw5cI9hfcVbip8BfMj
XEb4fF1vCe9D1ztEuFXu+R2j8SrMd+75nCRcTfg8nf+g8IBo/KDG+2lskI4d
zL0JXy18nfChwnNyzwVzUka4sVp/9U/S91drLKiVE/5Dbbv6+6g1U7++vvOF
+veonaV+Nx37jTkR7qp+Jx37W/3pameqf56O/cocC5+tfmcd26P+rNxzwxyV
0m8fpjZA/ZN17hqNbdVnY+Fcn3cJv6/PhsJRn2OEx6sdq++317GdOjZb+BLh
PsKlda3ayf22GlumsfrCVwm3F14hvEStv86/XsdqaKyR2tXqn6jxVRprKNxP
+AThlcIz1Lrp/It1LGMtC3cRPl/wd945z6v+KTr2p/pV1DpxPeFf1X9Lban6
a1ij3J9wd/W76ljU+6oj3EP4bOEk/LbwMvUfZs0mz0FL4VaZ5+bN3HuXNcva
HSC8N3tR+Ilijg4XPibz3NUVvlD9c3Qs1/XrCfcUPle4hPA69rP6k5kzXe8g
4dN5Hzr2u/pV1TqzPoR/U/+53HubPQ43VBM+Q/0OOvaH+jXUzhE+Xfgf9Wuq
nQtvCWf6vQa555I5LSVcX/gi+EO4pHCt3GuHNRSEU+5n4xk/Un+c2jHqt9Ox
j/R8S4UHCN8gXEv3U1q4nvrVdexT9U9Qmyd8bzAftheeK3xP8P7vmHt/LxZu
INwpNz88INxQ+Bxd8wFhSPgg+DA3f00O3u9naHy+cJ9ovjsxN54RzCdtc/PT
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
fJmca5LTkdv9HzfO12Y=
          "]], Polygon3DBox[CompressedData["
1:eJwt2HfA1dMfB/D73PvctEtbVLRo0qStrUmbpqbVoiFpoFKojKKkgaj8bBpG
ZTSEklAayMje2Sten9+3P96d83l9z/d5nvsd55zbaUPGdB+dTqVSH0hWmuWm
UgHLc1KpVeremVSqORvDVrDVrBerxy5g17E57BxWUkpINcfOdux+7YnqonK6
fgN2r7a+dNO/3rk3Ofdsx5uyS9litoJ1ZV3YbLaBbWajWHEpJmc41tCx+7QP
q/8y5hSpYtw7vA2fpF3DHmcDjWnJJrAH2QOyR91OprHH1OuNG2ZcezadPc42
sBGsLjuPTWJXy9PxeaQPm62+UV5QN5FL2CL1cud2ce6jksMqsursgH4d41pq
r2TXsGrGVJKKcpZjLRx7WHuSuozU0G/MVmk7ykz9tfF3yLvqk40pKzXjb3Bs
tfYRdUr/NGOq6e7XP5dfGdeNPcQuNOYJyWVVWC32XlwPltZWYjXYQf1Ozp2l
Xcc2siuMeVwyrDKryQ7F72OnypnGN1f/T9tBrtd/0rhnjbvU8fPZXLaRbWXj
2Wr5RV1KyrNdjp9j3MXa29hi1s6Y1uzq+JzsMTaAnceuY0+wZ9glrC2byh5l
69hw1pBdyOawW1lz1pXNYc/EfWSjWWM2gt3F7pRX1a1kYtwH9aPG9TeuM7uR
rWeb2EjWiA1mt7O72XmsnJwitRxrGs9mvCcySP9W4xYZ197xFmxsvCtsDevD
Kkh5qe1YM8ce0j4gK6W6NIrnWltKyul3cW5P5/4c7ryf1MXiHWGvs1/YzfGM
xTPErlT/KrewR9hadpX6Z7kp7iF7io1VH5UpbBl7kA1VH4vnnL3G3mL/qn+X
Jex5toVdH3+H3MBWskfY5eofZDK7h61kg9UX+xz3sT3sAJvNlmaSZyKejYcd
+1O9LZPMNSeYvErpl5bXMsk1KphNnsN4Hl/JJO9PvmzynsT7siOTvCv5s8l9
ifvzaia5NwWyyfWO6/6b3M2e83tf9vuvU/8o17KlMZewIerv5Rq2hN3PLo7P
Ku/o3xPXVS7xuTbGe67f2rhOjv2pn8t/VVeV2mw3O4lV0vZg/djf+mVZZW1P
1p/9pV+GVdCez3qzX/XLsdO1fdiguB/65eNZ0fZlF8kS9SlSlfVWDzTumH4h
f19BqexY3bjP2nyS1W9gXLNYL/TfNqZdfCY2ltWO62pcFdaLDWD/xOLCPlTn
lRNktDot38U7LuVksjoj3+tXiOvgtO3OzbLf1KfLmeyNuNfsWFwnacD2srzs
3xgjDdm+uIf+nvxSxbF6saZpc+RzY0rH7zHuRZ6H/RNzX8xhMkv9Zswxjg1T
jzKuhnqPtGHD4zOwmurd0ooNZSNZdfU+6cRGsvGsrnqvdGRXsHGsjvqIDGTT
2WzWVr0/1j02mk1k9dUHY65kY9kk1lD9bsw7bBSbwOqpv5Wr2AK2lPVVH4i5
jY2JdYs1UH8n49hCtoz1Ux+S7mwcm8Iaq9+XnmwCm8aaqrdnkrkmbzZZl2J9
OiwXscnG3WDcueoPpS+7ls1gLdUfST82hc1krdQfSC82kU2P/Yf6PenBxrOp
rIn6Y+nPpsb9Ya3Vn8gANi3WX9ZGXcm9O5MNYiNYnnj/pAO7nF3FzlJ/JVew
uWwh667eLGexbvF+sLzqLZlk35LNJvuO2H9skjNYB+O6G5ej3ppJ9iN5sske
KPZCu+RcNti4y4yrqn5Z6sf7nk32RbE/ej2TrJOFssn6H/uAnZlkD1CYVY5n
WL6RUWy+n3eXn9dT/YLUYd1ZX5ZP/WImeW/T2eT5j/fgcxnGZhk337jO6s9k
KJvJ5rFO6k9lCJvB5rKO6q9lJJsX6yDrof5SLme3sAWsm/qlTPKeZfzewvpF
5C1py0YYN8a4Wuov5DJ2M7uDXaBeJT+rS8R8wHY6XsG9rKHtx4bEVibmclaL
DWDDYmqJ54wtZjvYbjaNDWL3sjfZfnZjPKNsEXuFvcGmssGxhsZcxg6yOfFO
shVsd+yt2Kx4zthy9gbbx2Zmkj1he3Zp3F8p6nNfyO5i29W7jJsS7xW7lb3A
XmETWTc2n21m29kE1pstZFvZ62wy68PuZNvYTnZtvJPsdvZS7EnYpHiH2AK2
JdYoOaTuIbexF9U7jLs63iG2jO1ie9kMdgGbxzaxbWxcPAOxv2DvxM9iN8W7
y5aynTnJmhZrW+w9zkkn60msKzEvrOQ/6heWssa96vjTMRdra7D67BP9p1g+
bXVWj32s/yTLq63G6rKPYq/D/oifJZXYW7G2+70F0sl8HfP2V+pnYz5ijdWt
jTuqv4b9rj5JKrI9sZdhf6pPlsrs7Zi/nf+gdi97j91szDNShjVirdiP+g+w
o3Gv43z2Wjp5zuN5r5qbvNsrtOvVxfTrGdfEuK/0S/Cy2iasqRzNTdaev4+v
gbEWHlFviHnGuPoxzrlfx96DnaptyTqw3/XXxfyhrcsasy/117Ki2jqsEfsi
1jA/c5V2H3uf3ZJJ9gLVWMfYg8jfx9fkb4+v0bFWf6guFntK49qpuzr3O/0T
WUltW9aFfaNflJXQtmGd2bfpZP88PJ18N4rvSGWyyXew8elkPx376gqsOCvN
2qvPd+736eR5viOdfL+J7zn1ssn3rd7p5PtXfA8rnk2+C81IJ9/n4nvdGawI
K8JaqNv5eZ/p549rrW3ImrP39Suy2tqBbDjLui6lWXnWlfViv+iXjH2StjPr
wX6KuZoV0jZjbdiRmKtZYW1z1pZ9ql+AnaA9m7Vgh48/Byenk+se1//O3OR5
LphOnot4PuarT5WarL96qHMzmWQvdVidlTzyQcw3sbbq54sY8mw8g7HG5cTi
5PdptrB7Yy5Xp6Uk28qWx1yuPqYuLi+zJbEOsBOlENvE7on1Iq55vNdsM7sv
1iR1rpRi29hwf89q7bs5yf8pzDVmWcz58Yypi8lLjj8fc7m2VVwD9of+/ewH
dcF4X9kOtijWfnUByc+eYwtjb6LOiWvA1sfzFHsJdSaeX7aBLYi9hPrfVPJ/
G+vY4tg3xOeKn8mej7XJ37xGu58dZvOMuVuOqIvE38M2On4HO6T+J7kNqbXs
dnaQ/RX3R55mt+kcYA+l///1O/Wkf/4DgsD20g==
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rkvhEEYwOHPfa4joiUaoqAUBaUoqEQUdERBQSIKSoXQ6fgLaInQS+jc
x7rPiIircZ/hmUTx22eyO/nmnd0tae9t6kmIomhYrwrrR11qNjGK8rjAYq6z
kqes5QMb+c02ZidFUUzd1uUcZDVHWc8JtnCKnZxnP5f4w2u+a1vPuteygXa4
wjhXucs17oWZuM8NHnCTWzoMz+ERd3jMOE+4y1Pu8Yz7POe0e9zwQxd6CXfU
mNm2OMRF9nGOHZxkM8dZxxFWcYBlLFWXdQZb+emMBt6xhsesCPdiEb/su+Kb
cvUU9qrQjDksYIz5zA57mMUYM5nFjHAe05nKFKVZJzE1/MbhPf4qOXz34bNw
towRzXi5/f8//AHox0sR
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1017, 1128, 912, 689, 1129, 913, 691, 1130, 914, 692, 
       1131, 915, 693, 1132, 916, 694, 1133, 917, 695, 1134, 1024, 1246, 696, 
       1135, 918, 697, 1136, 919, 698, 1137, 920, 699, 1138, 921, 700, 1139, 
       922, 701, 1140, 923, 702, 1351, 1018, 924, 1019}], 
      Line3DBox[{704, 1025, 1247, 703, 1141, 925, 705, 1142, 926, 706, 1143, 
       927, 707, 1144, 928, 708, 1145, 929, 709, 1146, 1026, 1248, 710, 1027, 
       1249, 711, 1147, 930, 712, 1148, 931, 713, 1149, 932, 714, 1150, 933, 
       715, 1151, 934, 716, 1152, 935, 717}], 
      Line3DBox[{719, 1028, 1250, 718, 1029, 1251, 720, 1153, 936, 721, 1154, 
       937, 722, 1155, 938, 723, 1156, 939, 724, 1157, 1030, 1252, 725, 1031, 
       1253, 726, 1032, 1254, 727, 1158, 940, 728, 1159, 941, 729, 1160, 942, 
       730, 1161, 943, 731, 1162, 944, 732}], 
      Line3DBox[{734, 1033, 1255, 733, 1034, 1256, 735, 1035, 1257, 736, 1163,
        945, 737, 1164, 946, 738, 1165, 947, 739, 1166, 1036, 1258, 740, 1037,
        1259, 741, 1038, 1260, 742, 1039, 1261, 743, 1167, 948, 744, 1168, 
       949, 745, 1169, 950, 746, 1170, 951, 747}], 
      Line3DBox[{749, 1040, 1262, 748, 1041, 1263, 750, 1042, 1264, 751, 1043,
        1265, 752, 1171, 952, 753, 1172, 953, 754, 1173, 1044, 1266, 755, 
       1045, 1267, 756, 1046, 1268, 757, 1047, 1269, 758, 1048, 1270, 759, 
       1174, 954, 760, 1175, 955, 761, 1176, 956, 762}], 
      Line3DBox[{764, 1049, 1271, 763, 1050, 1272, 765, 1051, 1273, 766, 1052,
        1274, 767, 1053, 1275, 768, 1177, 957, 769, 1178, 1054, 1276, 770, 
       1055, 1277, 771, 1056, 1278, 772, 1057, 1279, 773, 1058, 1280, 774, 
       1059, 1281, 775, 1179, 958, 776, 1180, 959, 777}], 
      Line3DBox[{781, 1181, 960, 779, 1182, 961, 783, 1183, 962, 785, 1184, 
       963, 787, 1185, 964, 789, 1186, 965, 791, 1188, 1189, 966, 793, 1190, 
       967, 795, 1191, 968, 797, 1192, 969, 799, 1193, 970, 801, 1194, 971, 
       803, 1195, 972, 805, 1197, 974, 807}], 
      Line3DBox[{806, 973, 1196, 804, 1294, 1072, 802, 1293, 1071, 800, 1292, 
       1070, 798, 1291, 1069, 796, 1290, 1068, 794, 1289, 1067, 792, 1288, 
       1066, 1187, 790, 1287, 1065, 788, 1286, 1064, 786, 1285, 1063, 784, 
       1284, 1062, 782, 1283, 1061, 778, 1282, 1060, 780}], 
      Line3DBox[{809, 1073, 1295, 808, 1198, 975, 810, 1199, 976, 811, 1200, 
       977, 812, 1201, 978, 813, 1202, 979, 814, 1203, 1074, 1296, 815, 1204, 
       980, 816, 1205, 981, 817, 1206, 982, 818, 1207, 983, 819, 1208, 984, 
       820, 1209, 985, 821, 1210, 986, 822}], 
      Line3DBox[{824, 1075, 1297, 823, 1076, 1298, 825, 1211, 987, 826, 1212, 
       988, 827, 1213, 989, 828, 1214, 990, 829, 1215, 1077, 1299, 830, 1078, 
       1300, 831, 1216, 991, 832, 1217, 992, 833, 1218, 993, 834, 1219, 994, 
       835, 1220, 995, 836, 1221, 996, 837}], 
      Line3DBox[{839, 1079, 1301, 838, 1080, 1302, 840, 1081, 1303, 841, 1222,
        997, 842, 1223, 998, 843, 1224, 999, 844, 1225, 1082, 1304, 845, 1083,
        1305, 846, 1084, 1306, 847, 1226, 1000, 848, 1227, 1001, 849, 1228, 
       1002, 850, 1229, 1003, 851, 1230, 1004, 852}], 
      Line3DBox[{854, 1085, 1307, 853, 1086, 1308, 855, 1087, 1309, 856, 1088,
        1310, 857, 1231, 1005, 858, 1232, 1006, 859, 1233, 1089, 1311, 860, 
       1090, 1312, 861, 1091, 1313, 862, 1092, 1314, 863, 1234, 1007, 864, 
       1235, 1008, 865, 1236, 1009, 866, 1237, 1010, 867}], 
      Line3DBox[{869, 1093, 1315, 868, 1094, 1316, 870, 1095, 1317, 871, 1096,
        1318, 872, 1097, 1319, 873, 1238, 1011, 874, 1239, 1098, 1320, 875, 
       1099, 1321, 876, 1100, 1322, 877, 1101, 1323, 878, 1102, 1324, 879, 
       1240, 1012, 880, 1241, 1013, 881, 1242, 1014, 882}], 
      Line3DBox[{884, 1103, 1325, 883, 1104, 1326, 885, 1105, 1327, 886, 1106,
        1328, 887, 1107, 1329, 888, 1108, 1330, 889, 1243, 1109, 1331, 890, 
       1110, 1332, 891, 1111, 1333, 892, 1112, 1334, 893, 1113, 1335, 894, 
       1114, 1336, 895, 1244, 1015, 896, 1245, 1016, 897}], 
      Line3DBox[{911, 1023, 1022, 1352, 910, 1350, 1126, 909, 1349, 1125, 908,
        1348, 1124, 907, 1347, 1123, 906, 1346, 1122, 905, 1345, 1121, 904, 
       1344, 1343, 1120, 903, 1342, 1119, 902, 1341, 1118, 901, 1340, 1117, 
       900, 1339, 1116, 899, 1338, 1115, 898, 1127, 1337, 1020, 1021}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1129, 252, 488, 1141, 280, 1251, 503, 295, 1256, 
       518, 310, 1263, 533, 325, 1272, 548, 340, 1283, 563, 1182, 355, 578, 
       1198, 370, 1298, 593, 385, 1302, 608, 400, 1308, 623, 415, 1316, 638, 
       430, 1326, 653, 445, 1338, 668, 460}], 
      Line3DBox[{253, 475, 1130, 254, 489, 1142, 281, 504, 1153, 296, 1257, 
       519, 311, 1264, 534, 326, 1273, 549, 341, 1284, 564, 1183, 356, 579, 
       1199, 371, 594, 1211, 386, 1303, 609, 401, 1309, 624, 416, 1317, 639, 
       431, 1327, 654, 446, 1339, 669, 461}], 
      Line3DBox[{255, 476, 1131, 256, 490, 1143, 282, 505, 1154, 297, 520, 
       1163, 312, 1265, 535, 327, 1274, 550, 342, 1285, 565, 1184, 357, 580, 
       1200, 372, 595, 1212, 387, 610, 1222, 402, 1310, 625, 417, 1318, 640, 
       432, 1328, 655, 447, 1340, 670, 462}], 
      Line3DBox[{257, 477, 1132, 258, 491, 1144, 283, 506, 1155, 298, 521, 
       1164, 313, 536, 1171, 328, 1275, 551, 343, 1286, 566, 1185, 358, 581, 
       1201, 373, 596, 1213, 388, 611, 1223, 403, 626, 1231, 418, 1319, 641, 
       433, 1329, 656, 448, 1341, 671, 463}], 
      Line3DBox[{259, 478, 1133, 260, 492, 1145, 284, 507, 1156, 299, 522, 
       1165, 314, 537, 1172, 329, 552, 1177, 344, 1287, 567, 1186, 359, 582, 
       1202, 374, 597, 1214, 389, 612, 1224, 404, 627, 1232, 419, 642, 1238, 
       434, 1330, 657, 449, 1342, 672, 464}], 
      Line3DBox[{261, 479, 1134, 263, 493, 1146, 285, 508, 1157, 300, 523, 
       1166, 315, 538, 1173, 330, 553, 1178, 345, 568, 1187, 1188, 360, 583, 
       1203, 375, 598, 1215, 390, 613, 1225, 405, 628, 1233, 420, 643, 1239, 
       435, 658, 1243, 450, 1343, 673, 465}], 
      Line3DBox[{265, 481, 1135, 266, 1249, 495, 287, 1253, 510, 302, 1259, 
       525, 317, 1267, 540, 332, 1277, 555, 347, 1289, 570, 1190, 362, 585, 
       1204, 377, 1300, 600, 392, 1305, 615, 407, 1312, 630, 422, 1321, 645, 
       437, 1332, 660, 452, 1345, 675, 467}], 
      Line3DBox[{267, 482, 1136, 268, 496, 1147, 288, 1254, 511, 303, 1260, 
       526, 318, 1268, 541, 333, 1278, 556, 348, 1290, 571, 1191, 363, 586, 
       1205, 378, 601, 1216, 393, 1306, 616, 408, 1313, 631, 423, 1322, 646, 
       438, 1333, 661, 453, 1346, 676, 468}], 
      Line3DBox[{269, 483, 1137, 270, 497, 1148, 289, 512, 1158, 304, 1261, 
       527, 319, 1269, 542, 334, 1279, 557, 349, 1291, 572, 1192, 364, 587, 
       1206, 379, 602, 1217, 394, 617, 1226, 409, 1314, 632, 424, 1323, 647, 
       439, 1334, 662, 454, 1347, 677, 469}], 
      Line3DBox[{271, 484, 1138, 272, 498, 1149, 290, 513, 1159, 305, 528, 
       1167, 320, 1270, 543, 335, 1280, 558, 350, 1292, 573, 1193, 365, 588, 
       1207, 380, 603, 1218, 395, 618, 1227, 410, 633, 1234, 425, 1324, 648, 
       440, 1335, 663, 455, 1348, 678, 470}], 
      Line3DBox[{273, 485, 1139, 274, 499, 1150, 291, 514, 1160, 306, 529, 
       1168, 321, 544, 1174, 336, 1281, 559, 351, 1293, 574, 1194, 366, 589, 
       1208, 381, 604, 1219, 396, 619, 1228, 411, 634, 1235, 426, 649, 1240, 
       441, 1336, 664, 456, 1349, 679, 471}], 
      Line3DBox[{275, 486, 1140, 276, 500, 1151, 292, 515, 1161, 307, 530, 
       1169, 322, 545, 1175, 337, 560, 1179, 352, 1294, 575, 1195, 367, 590, 
       1209, 382, 605, 1220, 397, 620, 1229, 412, 635, 1236, 427, 650, 1241, 
       442, 665, 1244, 457, 1350, 680, 472}], 
      Line3DBox[{277, 682, 1351, 683, 278, 501, 1152, 293, 516, 1162, 308, 
       531, 1170, 323, 546, 1176, 338, 561, 1180, 353, 576, 1196, 1197, 368, 
       591, 1210, 383, 606, 1221, 398, 621, 1230, 413, 636, 1237, 428, 651, 
       1242, 443, 666, 1245, 458, 685, 1352, 686, 687}], 
      Line3DBox[{459, 667, 684, 1337, 444, 652, 1325, 429, 637, 1315, 414, 
       622, 1307, 399, 607, 1301, 384, 592, 1297, 369, 577, 1295, 354, 1181, 
       562, 1282, 339, 547, 1271, 324, 532, 1262, 309, 517, 1255, 294, 502, 
       1250, 279, 487, 1247, 250, 1128, 473, 681, 688}], 
      Line3DBox[{466, 674, 1344, 451, 659, 1331, 436, 644, 1320, 421, 629, 
       1311, 406, 614, 1304, 391, 599, 1299, 376, 584, 1296, 361, 1189, 569, 
       1288, 346, 554, 1276, 331, 539, 1266, 316, 524, 1258, 301, 509, 1252, 
       286, 494, 1248, 264, 480, 1246, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
SYuaDd/YzQJFxs6a3uwMtElUdE1jGwP1eyvkDT9kwj3yjoPhUBo6sqwmCo9R
gt5Y2bUDLCj9+nSPrnAKyrz0k3n0HQPNPaid/T2MCWePTx4/FZaADCc7w/EY
fbh5Z8M1PRbUNluszIA4dPetXTl3DwOxJUg/UI5mguC9y/yLooMQl+/vq3iM
mqYU7a/j705psCefbnkA2jRsqfAOf3ecm0JLjfF3qlJD5/jN1ldoR0vhNA/m
tMsFNy7FnGEBozf7ST1vHco9fveUbgeBZr+4HPDyKgs6HW70iWyvRfc7s3dG
MLG/m5z94LUnC2S/DEa9sKtGfn7Xej6NY//1mFB6GojXOa7IXRhbiQ6tzXq5
YjYDyfe/TTsYh7noyY/qm/XlyNjy67jWAgbStpXIKXnOghV3WJka46Vots3J
QmPhf+bnX/6Wn78Y8/D+UMGCV1k1GjP2BShuYmn+GnkG+qW466Z7PQtktvWt
2Zabg8rebtjVvQG/R2YrFbpaWdA3uay3+WsGSmCJEhaYQ1LSd8/71MmCiaB6
Lz/j5+ha3/rLtfh979x3TiHwIwvin0hY2tUmoE+1/PrfdzBQ+l2JnaOYozba
3OXmOBuFpD3HHCcpjjqPYiYwR33X+tzZfO4+cnnAMK/EHMW2X6LX5CsLxoKa
snwnqlCkmNmrhpsEktuXs4TrNwu2WRiuiPKtRG/7FHzqfLFPv0scG+cm4ffN
8+K5yyrQ0SjxTvGHBPoYuz5CRIAEviKOvq9JZchFZf7yjnDsF/ad/XprJeZ5
qxjdKyqlKPrX5tZPjwkk43YrRVSKhPGbG60zvIqR2qL2NM1nBIpdV7frmwIJ
fRE1HD7hBejBQ4774/+Sn7P+lp8H84Z7btxMgnWoh7picRY67Dc8oVNMINV+
pfHIbSQ0LOlojKtLR6PWqcRgGYEWRSySUt5FwiWYHxeekoouflvd01lFoAFV
eZjQJkHRfNP+8dJE1L72WNlizOFCcaYxhA4JDvP4O3pbYlGe+4eAh68IFMWb
xZrGvqDVT3jpZFUw8hmeDjBtwL5b68yIBub/PbuUZh+o8UYdKRobL2P+X5Ko
ebTYEvvNudfOe+uUooSXL+r37iZQ/5Ioi922JJgnRKmOXi5BVy8Yr87fh/n/
64Ok0w7YvzzaZLJ+fxEK1iy3fHUY+5fRFWILXEi44jTgPCBZgC4UtHW7GhKI
ODM+qO1OApm5W1h1JheFKGSUvjXG/jFDSpnPm4Rygx+LNrVmI7UFjcdaTAmk
VDm23uIOCQoLHIvYnmairB328y+cxn7wz/y8/c/83O7P/Jx5f15+cQAJQ0LK
cc8jnqMbEzHut7Cfrd94bDL/EQkJ10ff792WjDoXzFH9ZUmgW/F5VzRD8Pkw
tjpe641HBSpbvi/BfjZrgHipF0aC/s60kMu3YtG+JmmrposEyhtBsSPY5x4Y
mNzUrxWG3M+FaUtjP7so50bOEuxnJWoGT17x9EcB4Z+NVmDfKjq6tqMW1801
lS1mPN3QIpnQKy9wvapNePdwEQnxLU57993PRkZV40U2IgTalP37URuQUGuO
YXN1FrI7NRJdt5pAlU1rk73LsX+cSC3Oz8hA6/Tzk6bFCFSmE63HVYV9tBL/
/O0701GB+q+MuZLYR5eonzWsIcFfUE+lPPkFOiYbHMyQItCb+eXZti9J6Ndy
OKRRj3VyRe7GCBkCdTlsWW38Cq/Drt/D9SUJVfJsuyAr98/83PFv+XnVrpwS
/9e4T46uKCyVf4I6NeZvr5EnkEp4fVZPIwlZo3KcbTqxyGjkwrMOBdy31Rf2
Tjfh96XF8PN0WwTaWvt9X8laArXNv2hFNJMgI6mfGLs4GPlrzVvitI5AEZ98
uUJbSIhluOvm7fdHmd6DU/MVCSSmrSK4rJWEIpEuRjWfN9IbevLFHtf1hUu8
zuF60xPJZEF+BzRrycH+bFzXWSYUwvMFv9cM503ddvFozKRGrmwugcaac20r
cL2xUyVTl+MJakt0SjDgIJC7w9kwmyESlrI/GkoMiUP6m6KGu3F9xLN6/sJh
EnIWiu74JBeLLFjKc09yYr/MFf4yFte/t3razHKMRgJpNsQbXE+In1UvPUJC
ZFWV1aKoCBS97vZtTS4CjW9T54vFdWH5mNdfy0JRYuvCibh/yc8T/5afW3Tu
MruA67/ljrns4g5Ei4WCBXdzE4idXceyFNendZ+8KZL3R+uO3K72xXX70wtS
OcZI0HRZ7LMx5i46npaqUo7r4XHRa7bh+v3w4F9VTC9U0OFrPoLrnz90Eda4
LqbBhA0KbuhX/hVdAR4CLYjrar+L60Tx8K8FLHvU0b1mWgHXBw4dmhWD687V
npZiLHN08sTw6a3/h/y8k77K/Ef9QpbVqe9bFf/POfnA/1hnBz3m/496h8TA
+SaX9f8jl15f+Pd61v+YX0zXNf+jHujTlbltWuF/5d5s/9f6zJz/vn/ib/uR
2G1O9/PCvNM2uJ/hTLAU3c+HOQrofn73kXsY9zNoLtlK93Ow3a8Qqp8/r7x6
+GlIHOwynDVK9fO6rhheqp8PSGo+xf0MTU06HFQ/hwu60/3cuT1kFPczRMcf
o/s58MXXV1Q/mxS1F+J+hvjvN/7oZ6Uvi6l+vr6aT3a8LBTWPtel+/mv/Fzg
b/l5ovBbup9lBmvbcT+DSVKdANXPzM8qVlQ/ey9vPlks7w91QbuqqH4uvB/5
nOrn2mUZpzbF3IXF+kkbqX7WVAiXp/o5fc/MNO5n2NV06CzVz5kH3el+Tkmu
6VNScIOe8iG6nz36xOh+Xh/G08jLsofbkctmqH6effsw3c9OV8+rrWaZQ6/x
CN3P6kMMLUqfz4x1WWJ9hr1dSbQ+i6oY0Pq8P698XunqLDi6Ti6G0ufavKgk
Sp/l1JzHsD6D/IkEWp8lDdRpff6Vv3kP1mfYJpJC6/NPAUNan6enJh9gfQbf
VDKI0mfLL6E5lD7PnzvrDtZnmD3fWJnS5ymDN7Q+q7r463J/SYJIpVErSp//
ys9X/C0/t3J1A0qfl5EnWFifoXEJaxulzzfMhml9XqRuuR/rM4R/46D1WcvM
mNbnqN3IeKYtAqzZ+2l9ThTop/V5zeXFjVifQTbhvBClzzzcNbQ+Sz4wuIT1
GQZHw2h9Pla/XoDS55+qp07W8HmDTcaHIUqfBzk+eFL6fJLf7xnWZ0htNBug
9DnIt82I4g1OE2NnzBtwynMDzRufvO7RvFFuNHkC8wYM7XNfRfFGGpHylOIN
tf75npg3QPjwKM0bKvV7RCneuPlzMBzzBmxw2dBD8cbd+CqaN6ZSryhg3oAI
4zs0byyIV6Z5I3DoqyzmDQjfpEfzBlM7V4niDYOsnZ8wb4By4c95FG/8lZ8P
/y0/F5NVz6V4oxiaGzBvQOiAnwfFGzubxr5RvFEqWsypsy0Z0n7eUKN4o0Qg
3o7iDT3iw23MG+C20f4HxRtXYw1p3tgKuamYN+D7ijKaNwTiLGMo3vhsHOSL
eQOk01z3ULzR7xCTRfGGRceyl5g34N5qwWMUb3D5mbZTvLFl90DEL083WPbo
1lWKN2LSYz5R/Fw1+1gl5mcwuDFWR/Hze8kcIYqfz7LurcP8DDbZkjQ/e1fI
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
jm9Ur9wrLG3kD1KKunN8YzvfzBzfiLZLdle10nzyP1+pqMTnaCnJ5dR2dKUq
ibeBjcPMAMnlrvLEsJL87WUEb+Kyry3wiSlvjr/xu2bP8bdu5SAPB8tmWCQ6
c5Hkb1lCU3EkfzNZN9zp9qEBErVb5/jbYZvObJK/JTpT3OuP1kFrvdUXkr/x
KolzkvxtVefL7YsyqoGnyMWI5G87VjRsJ/nb0bbNNUNMVVC6pcKL5G+9oevn
+JvXpgtPz+hUAP9AlzfJ3x5UEdtJ/naFq3KF7KkyoBo6J5D8TdUpSZbkb7b6
tSR/g4oaHg2Sv+2RPDvH31Rjnr1zssuGhgMX5vjbdUm9DSR/6zz0/fWbqQSQ
Wsp6m+RvImtLvUn+9lqbS6HuRyC8UGjwJPkb8mYvEZMn4LJ/S7HptOaT//lK
RRJ0Ocnz8zlJHzee5SUufWAT4NG8jK8V7Z7pTZLE60RU1dukPaIPHFfp9qs0
NCOf/Isd7QZUpM6R+7mtuA/EdF5XMKJGZOa6O/ayIxWdfDrKE9nWB9Xbyl3b
U+tQwu3JVeMPqKindHwrN60PKg++qLReVYOyvvjfUU2iIqb53GMtXe5x9PSA
FvNmApJPCrF95y5Hne9vstx5Q0XdHZf3PxAgQCShgyevoBCdt2v96woV/zyC
Dwdt/yTAcEdApdbBHFSk+rHx9Rcq2uY7UZwmQ0D6pRHn0MAkNOutX5g/hu9D
lkyVIL5vzaYnj49KYp+yfzD+xxQVFayFNCF83xaJZe7eFWqKljistjHE9+1X
7rGMLvf4mvAt7VEiYMqATbrDoh6VXLI1919ERSdmlg606BBwJqvd+p1cLTpR
+yMuZR0VOTaoNLNfJgBWDzScWV2NHni+jNi/g4q8W/IU450JmFaoDa99/RSZ
Zj/Old9LRc7zecUKurzigzVidm1ZBAhrfi9uSMtDTVbUdz/1qUhYeapXuIgA
2sxJTV+JTMTVRnmVZYL3OyNreVg5ARrVfYeqViYgV/UDzTEXqYiBa2MOB96P
MjtVjVkgGKVYlC9pu0RFZS4tn+Pwfmy+uvLG8iu26Fmn6+p9eD9azecPv87n
D0N/5Q8HFwsz9xIQs0c6rP1UFeqm1QEHYD9uUd/2dIgAyYzjtpwelWjZs5OM
MlgPex50HlOaIqBOnIX9mxGgDI4YN+WXFKQ0nw90p8sHVnmwTzFvpUF/J3qh
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
WleoiHrv5dqS6j7I4HUy1PlSj1xT+DObPago4pHdpqC3fUA9gWadkmpRxfDb
3RGhVBR07lRC8lAfeNqf9bqlXY3kzwifL05f4Ir1dFxRWZRT4gQXAae5FWuk
6srR+I0O9sFOfP93R+WW8xHwtqPR6DRzMdrxIMez/iMVfX7Z27xtNwFvzHVF
hg7kIXmpJv2SATxX8559cU2SAJn0QWnLwXR0teSnaf4oFT3vzUwow/eTV+J7
9pBKHFpn/G0gf2KBH5bT8cOL8adkDQ8TIJZ7QehKZj2SS3HlOMNARUr14cli
WgQoZB7nOFZdi36Gldv44DlcmetGbukFAiY/vAgq6axGTB03HvtzU1FiYcnS
b/YECOrNhi/rq0IjPs9zTETwnGzSP9x2G68HJYqh50glSr5xP3xWeoErPqPj
ii5r3hu2ZhLQr9pq9lA8HzFmaN/j0Kei5okXt0IKcL2Iz/X5rmxUaaLIrWhM
RVm3nlz+hPcXj6n7Mt9jyYjHkHtsozneF0ulWjOwfzHSG+f3lIhGQUfVJXyx
f4ma0ZQaqyDgflTy5FGp+4hX9Gl75OUFrjhKxxX3rYnPu4n1lqN+S6G7TxUy
1OUzq3tMvn/PLWL0M/78j/sta/Hvxdur49Fai/u+MLXJdoyAZZ8/tsqoV6BB
WpHPkjYK2vlBt3nxLAG0R6GmukaP0csG/ZcGbxaeR75DxxvVqzP03LCuzjLI
RLIEpiKt4pSOUqyrm+2b9/Jif3e1xqN2y7c4JFqf87N/koJma9rHy3bQ4EoZ
i2RxeCiyNE9aJ4b93dGxLktl7O/6POPXFUV6o/X8L0Xu/YM3rqDjje5szpdc
1WhguY82eNmgHJ0PWCXW6UxB/eKe3tKn8fwf6kQJqi9BSd1sXT63KehIogDH
CV0axNUoy1vtLkKNEVpGRd4LHFKXjkNSLS5nMGP/O7VrTVxFTBSSFt2m+XcE
BWl35a/ItqUB846dzoIbA9EJ9SgLHex/TU4maWVi/5v+7V3mLo7bKJlv2m/v
/8Ihb7yhhVlE00DQSVDCTTgPEWXPOrqPUtDDMomE7jgahAxrdFRI5KCwLsGQ
omMLfLKN/nnY1bM3TXJoMFCcGXw76h4andxu1I/rS2U2dY7jev/DVSOm0c5I
Se8Lm+E/+ORhOj755bhOw8+XNHh2/ZD8H+2JKCbP5zMrzwK3BDpuGWAm9bf0
OxrM+KVeYja3Rd9SEuW5/t+45Z1/e38aA8MH7X97D9v/wi19/v06DMb/fI/Z
7+bqf+SajH7zfrbhWfSvnNP43z+vZPpv72djYHDJ/P372f5/OCeZ71r7/8E5
Df7rvW0y37wG5bBPyWG6MJKpFwOcBToOhXhub1p6fbYC19NefZrm3xEN4Q3t
WpuxT+neJlYsiX3KGWaZpzydEcBsyFp8A9d7L55bn4DrkSqar1+cD4OKBpOg
l7jOW8DLwYLv87uS5SnnRkLgp9fmb9vxfe6giVScx/XCa6pqrTeCwL52stHy
H/zzLR3/dLv6lk0B14lc9yXmV/wgq+ZZEw/+vSIMZXKu4brH0mJnU687oCBS
eUgF1zuqqUOxuP4x3XREIeYWtE5m7L2E6/byo7VVuN5hmvNkvbUTKIxvDruD
63+9v4fe4XrqOX/L6zFXoaq/yS4M1x1aUk7247rCelVf75jz0HB4XW0ieZ3F
6TJez2ng7Ex8bpbKhqFZpzuNmyjIX7eSatxKA6W6CDj4IwM4Pd4WHd9CQStY
9yhtbse+6ZtNzvk7aeCgfTwnD/vfDVkjall4361vY8xdtDYFOr8L6E/jfeeX
8+oL6YsvCKkrCEQkQjLPkXTSF//ioivpuGjAVz0he+xzPRefMlLOCoGQvZPr
M3D9tGCW2Ta8T6NPfVSagYdQlO6oL4n3KTvV+F0Crh8ZGNgeG+0HRzv/Ho/F
9STnEccleP9S13ixQsUtaHzi/mqY3NeNDQfJ8whzx2X5f1dchTDR0THyPGJI
O8n57CMa0Na73BJILYTk445yrAr4+g38PX9F0KDWINuntTUftkTmmsgp4X4t
wWX/HOubkPzZ6ITxXPAUveEppkz2l6sDLPE0YN8jXVjElQNea00OdR9b4KWF
dLz0yqIROdss8v/LCB8yJSJAw3ONk+ppCtqfef5LLNbDuK5P0+GXguBa2X1X
Jax7gZMqbuR5DUUa9N/3+wFHtYH9NK6nxdI+fcd11lNODXc/O8GnNZeOGGM9
dA1x+nD6BA3Mio+bc60qhxenNm2IdKEg2f6b6x/jPqJBnFgs5V8CscFxE0s8
KCh6144BX9xHiu/NSPisK4LP0SEcX7wXOKoGHUfVLL77UAH3EdWlh9y8lSPB
XJs9SDgS97vq03qNuI9EWm8++ujPAHjkN7TPFvcRYdivWYD7yIWloXvM97qD
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
N9Cdd/8fOuOFPQ==
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{343.2635636281162, 320.1581696330023},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0.5, 1}, {0, 1}, {0.3750000446428572, 0.9999999642857117}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.9884335120301952`, 0.7194777485090542, 2.6416820281092814`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.634489274847197*^9, 3.634489289398225*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"1", "-", "\[Lambda]", "+", 
    RowBox[{"\[Beta]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "+", "j", "-", "k", "+", "\[Beta]", "+", 
       RowBox[{"3", " ", "\[Lambda]"}], "-", 
       RowBox[{"2", " ", "\[Beta]", " ", "\[Lambda]"}]}], ")"}]}]}], "/.", 
   RowBox[{"j", "\[Rule]", 
    RowBox[{"k", "+", "2"}]}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.634489671082262*^9, 3.634489677879261*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "-", "\[Lambda]", "+", 
   RowBox[{"\[Beta]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Beta]", "+", 
      RowBox[{"3", " ", "\[Lambda]"}], "-", 
      RowBox[{"2", " ", "\[Beta]", " ", "\[Lambda]"}]}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Beta]"}], ")"}], "*", "\[Beta]", "*", 
    "\[Lambda]"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.634489682810031*^9, 3.6344897033906393`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{
   SuperscriptBox["\[Beta]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Lambda]"}], ")"}]}], "-", "\[Lambda]", "+", 
  RowBox[{"\[Beta]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", "\[Lambda]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.6344897039873667`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{"1", "-", 
   RowBox[{
    SuperscriptBox["\[Beta]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Lambda]"}], ")"}]}], "-", "\[Lambda]", "+", 
   
   RowBox[{"\[Beta]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "\[Lambda]"}]}], ")"}]}]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"1", "-", "\[Beta]", "+", 
  SuperscriptBox["\[Beta]", "2"], "-", "\[Lambda]", "+", 
  RowBox[{"2", " ", "\[Beta]", " ", "\[Lambda]"}], "-", 
  RowBox[{
   SuperscriptBox["\[Beta]", "2"], " ", "\[Lambda]"}]}]], "Output",
 CellChangeTimes->{3.634489709586993*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"1", "-", "\[Beta]", "+", 
    SuperscriptBox["\[Beta]", "2"], "-", "\[Lambda]", "+", 
    RowBox[{"2", " ", "\[Beta]", " ", "\[Lambda]"}], "-", 
    RowBox[{
     SuperscriptBox["\[Beta]", "2"], " ", "\[Lambda]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.634489719195951*^9, 3.634489727818624*^9}},
 NumberMarks->False],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
Z/BB9fGwZ/D/neeTZ/CWau/1JOrsmfKUF9polJmzZ5oveHQlSXqEPVM8M647
mSqxZ/DIde3fSI+wZ3A17TyFMnP2DN58lLqSRJ09Y1yotyCsyFYngzyDRwkG
N+82zSTP4JcVz4xP6JJFnmm+MUT3YfCabPIMrtkteYvflhzyDL5oyfm9Mfa5
5BncVv/L71jbPPIMXizmz+EZ/NZejX1f/AvIM7jWoLxz6lVS8kzzzzP/0W8z
kz2Dv6purVKcXUyewdUaL3X028Kewb/tnKA3cDB7Bt+y5Z7FFRX2jHH21fn9
3HU6pZBnyqsHNzY8sTOVPIO3iNCJS9NOJ8/gv87v2VqQl0GewXWnj/gnNDGL
PIPfK/evCVqXQ57B3dpZJtuezSXP4LFi/hyewWcoTvnsb8yeKe/48o7x4DPs
Gbzvt4crB+ixZ/DN+5eGHLvPnsEd90Z+n7GYPYPnVoSbbe/LnsG/3Lf3VGnN
npG3MJ0frFWokUiewSPbZ/uuV0wiz+ALN/hPyeuQQp7Bex7+ZK49IY08g6va
xy/ucTmDPIOrZ4yIaWWUTZ7BTzQ9ez1HmkOewcPE/Dk803za5sOzrSPzyTPl
F2ftiZgzjj1T3v7omMeyeU94Bjc2fGU3+ih7Br+j3uFgu6nsGTxmeve57wzY
M/iSr4p/xrPsGXmgqHn6d6+oxJJncMH9gfqs7fHkma4f0CWlRO09eaZ8svvM
ZtMeJJNncIX58/z8tqSRZ/BbWcPOx9hnkmfwsJpqj0U92TP4OTF/Ds/gQTXx
UbUT2TO4SeWsCXu+FZBncIt+71p5XGXP4AURRnXVy9kzeNNTSw1iBfYMfjPC
x/0vbfYMnmsc3DapGXtGXu1y9ODzhRrR5Bl8U3oftQ2Kb8kzuMGngJlVLePJ
M+W3Vz57ecDwPXkG/7jk6/t2U1PIM/jk3MGbdh1JJ8/gIXGHInKkWeQZfJ+Y
P4dn8Akr1fsG5eSRZ3DvbX2zblxgz+BT302fcd2VPVPee8bugHOW7BnctsuT
8L3d2TP4cSOl8wvbsme63nnSdFMl9ow85dMXPVNclSPIM/jaW8U/hzV+QZ7B
FWeOf1TV8i15Br/v0OvAi8Px5Bk8x2V3y33dk8gzeHX+wOnmL1PJM/iX20NW
fnTJJM/grmL+HJ7Ba0onnZi8gj2DV7VVdE6xYc/gc5fmBCWbsmdwy8+Fkkld
2TP4peAOk0e3Y8+Uh/d2eXq7BXumOqCLNSd9G7Nn5OvOuet3avznHJ5pHmmP
f7HsHJ7Bo+MmPpedwzN4+YRjk2Tn8Awev66TmewcnsGPFZoYy87hGXzAMame
7ByewWeJ+XN4Bj8z71BjBQX2DG4dmPxDdg7P4MtaOH2RncMz+O/9oytl5/AM
/qO/c4nsHJ7BF/3Irj+HTxytqzbN2OfI+cwZ+8zq7jkHC8sqsts4jea85anO
AdLl6YHC2JBLCUoWnJ/MEPPQoUfLnWTjU/gcfC5+3gPnU0JER00l7Xecb7wv
5mkXvTiVomZbTD5X/w772UviLtzqWtRBos75Rvv/yB82FuN/euXRW48ozheN
EuM/+bZEP2MC5wO3i/G3/2HQoqplCfl8JsY/JEx6rckv7icri/G3Pnj0z/PM
eby9yFs3DWzVwaOcPG4+4BLmrR8pfBw6659Nizj/hmNv/bcxqTs4/zY0ZKxd
RuhDoebQ4qMtnnP+LbPO7fVd5weCdWv/V5IenO/dNO6ycFg/TBiknXs2OayI
fP7tk35rWXqocM/i5OiPLpyPfZTXysDSO0RIaD/0Y6wt52MD/yP/5ibGv9jg
90CTaezTQoz/m8PD201+cb6irxh/5+PXp3WM53F0nBh/hc2oKbeS2edKMf5/
NcuyW6qyT3Ux/nXL2/Zy3MTtQIgYv5lcnvPLv1fL9SUvhdDw4+458zn/FqU0
JtBbP0b4YBe+w/IZ599wDFzeY3rrkUXkecGktR2XpUcJhTum9lqQy/m3ATUq
Cemhz4UbupcHewdwnrPp6YueEu9nQvOXx2+93c95zqSRZmPuOj8VqpsdirY9
y3nOv/8j//ZRjF/Nb5h/jpTzQhFi/FOrD47scZk9HxTj7/3PoACz4+zZQYzf
v/zcd4db7Lkv4vcbsSaqlttbBTH+OSlbx193Zc9xYvx35fKcdzU/e6WHxgmb
hr5/J8tfwfPZJRFLvfXjhCtel4UHTQrJr8cjT4nEO1aYOr5cU+0x599w3Pyz
hZe7j5Q8X4u2bLos/a3QTd/1vZUX5zk3L8t/nB76RrAb56Nz9SLnOa01Nq6T
eL8WNL5L/XKknH979R/5txAx/rCOm5T3r2bPvmL8t3fOi7OZzp53iPEPjo+o
crJnz0vF+KfsanRWZT97vijG39joWKttUvbsJsYvMatw/uHEniVi/PJ5Ttdt
hy7pS5KEUeFq2kEOnH+bmTh7V3roe2HJ8+O1PcwLyLO5YXdHb/33glKPq2ka
QwvIb4/1XwWJd6LQbtWjj2fGc56T5osMh65otp7znD90vL6HOicIl14f9dz3
lPNv+S4zk5zT4wWT0sHrFvVkzx7/kX9bIcb/7+FwV1Ml9mwrxq+mOchhvSJ7
HiHGP3a5RJDN+8BzNzH+ZroOox4tZM+qYvxTbpadGxLLnr+J8fe9PPPAWAf2
nCPGL5/n7FPa+6lzepqgPNR6sbI95986DPtxVl+SJnT/seuOrzvn3+q8XmxM
D00VQpov89UM4/xbUd5hO2/9VOFqmYvNgyac53z3j8MAiXeKoNlDqeWTeZzn
xPH7+CPfnbI4/3Y2/VtlqHOyMDXda9JHF85zmsvVr8JzTzH+Zq1/ZkiPcF5I
Q4x/+eWWlbJ5Fnj+KcY/uVW85/1SHkcXiPHfD3tUsnQke34txn/B1Mz06332
HCLG37FtzLXD09izrxi/fJ6zrD7Pki3EycqjZnL+LaE+L5AllPRdvaL1E86/
Pagfx2YJjoW97bUG5JLn/9UtZQqjHQ1DksM4//a/cUKmcLD32wsbJ3Ce83/9
2gxB8s57gcV3zr9R/+J1gZFbGOffcET9KjwXi/Ff3zWk/jmH51gx/tdDszfF
2LPne2L8DpdmpOXdYM9+YvzOk7W9/tJmz7vF+Gsij727cYE9rxDjb7RxwLts
K/Zsi/6mXJ4zQYy3z9oDLc7d5Pzb2Pp2MFeY+CZq2s/GWey5b6OUUOdcwWB3
tjBiQTZ57lv/fc4VMtLS231enkOeA7a/CXFOzxGa9/MZMXAw5zn/91zmCCcm
Hkow0GDPnkknDulL/vxdH5r+6d+yZ3u5+lV4xnGqwobrw0M4LzRGjL/Hu1ut
qlqy5/ti/M5j8g1brmXPvcX4dT5sMHlZw+OOc2L8Fpbl85ccZM/txfhLC85X
9miQ59wrxt9MLs9p7N1kt76kQHiwplnAoiucf7sgxvtu0PnXmdvSyHNH6bt5
6aH5wk7zOU/HOmSQ5wP1/dd8oSRAt1LXKos8Nx7ka+atny9s/cchvUqf85xr
6vtneUJpnNcIpT6c5yzdu+hviXeecOfagTSPMZznDJerX4XfvmL8v9bd1ywz
Z8847p6z65RmGOeFNMX41+cvWd1/GHv2FONP2JWW6hbPnhXE+E/Em/3suoE9
rxLjjxuvpupmyp6Lxfg3y+U5vcbEa0i8/4wn12wd3ieI829NVgzaLus/WQVs
GflYIZk8rxXjLfidN2bCjFTyXP5E0UHWD9A8sueW3b108uxQvvhtqLNU+LjS
ptxWh/Ocie3ihsq+54MnH7iaL+E8p4UwMNg5vUBIOpt/S2U/5zk7/Uf+7YAY
f0D1920+Cey3sRh/UbVd9xEL2DOOu7Z+fjKzCXsuFePfpWu6xfAqe7YX4y+b
4eOdM589x4vxh4Vu7vusT4P5ETF++Tznh1o/f+f0YiFx9feUL/6cf5uj30xV
4l0svFSZdc9vSwJ5fj/eebO+pFgYeX/ey2lTksizpRjv2O2fVsveJ/D8yM90
ZnpokZDjVqD39nM6ee738myMbPymcanjPztisshzYLXSIG/9IuHrwUH7fBI4
/+b2H/m3cjF+S2fTMnNH9uwgxj9qV6+whW3Zb6IYv7f2JtUdMZyvwNH0vo++
rJ4EnsPF+Ifll3c7NZE99xXj99cpn6jaIM8ZIMYvn+ccd315b2/9MiGqtKDQ
zTSGPD9Oee/rnF4qHPq6Ypbir3fkuX/joS0l3qWC/+rC8fbWCeT5Yo9z6/Ql
pcJal5mmrw4mkWctMd7YLWvq8z/wfHDzsmnpoSXCneD2KmZ1/P5TvJj4LNS5
ROjgvt9RpxN7TvqP/JulGP+nQrcpHz9xvuKRGP85zUYWXhGcF+onxn/mvpL9
FS/2HCjGXz75a8yOuewZxwNLRj6eOoQ9HxDj37PbbuUsLfbcWIxfPs95yXH4
g1DnP/2+kqS/mvaJJM/a+wOMvPU/CJ5vjCxe1PI48FCo8nHn9HKhru+iuPkW
PD5pmrOiqcS7XAic8+xnk18J5Hl9i+RV+pJyIWJX8/33ziaT5wox3mnX2pb8
MuE859xZ5yelh5YJywqfrbWO5DynyX/k3y6K8Z9yuPdQ1v+EZy0x/kbBiUmh
zuz5oBh/8PQDwYlT2bOiGP/ZD1OW9x/Gnt3E+HOqfaaqGrBnHFdWRR26qM6e
HcT4p8vlOZtqtrZID60ULJQsP3XUvUWeUU/nGZDXf++3SPJcsThV31u/8s/z
nnApbcdL8jxXrEtMmtgrYqhTHOeTH15oJPGuEG7uP/mk1+r35HlcUcsV+pIK
4csN1af3F3Oe87EY743oZd3srTnPefA/8m+KYvxmaTUGEnX27CbGbz/s4vys
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
J7jzmoTBUxrsfwivWOf7/wAZG5FJ
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1: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
I/Ls2D/YBuO/Ay3T4QI=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsvpFEYwOGPcRsMK6Jd0RAFpSgoN4pViSjoiGK3WIlsQakQOh1/AS0R
+k3o3MfMuM2ystkIu2Tjfg3PSRS/eU7mO5nznsxX0zvQ8S0niqJR3SqsL/Vb
87lR9IE/WM0NNvKQrTxnO5/Zw9JYFCX01bqew2zmONs4xS7OsJ+L/M5l/ucJ
77Wta/3TioFSXGWaa8xwnTthJu5yk3vcYlL74Xd4wBSzTPMnMzzkDo+4y1+c
dY9TPuhYN+GOmjBbkiNc4iAX2MdpdnKSnzjGJg6xjrX6Yh1nNx+d8Zl/2cIs
G8K9+JEX9v3hncp1FfaqyoxlrGSCFSwNe1jCBItZwng4j0UsYL4KrWMsCP9x
+I6vytNLeKYnGSOa83H2/j68Acy/Svc=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1004, 473, 689, 1113, 912, 691, 1114, 913, 692, 1115, 
       914, 693, 1116, 915, 694, 1117, 916, 695, 1118, 1010, 1217, 696, 1119, 
       917, 697, 1120, 918, 698, 1121, 919, 699, 1122, 920, 700, 1123, 921, 
       701, 1124, 922, 702, 1322, 1005, 923, 1006}], 
      Line3DBox[{704, 1011, 1218, 703, 488, 705, 1125, 924, 706, 1126, 925, 
       707, 1127, 926, 708, 1128, 927, 709, 1129, 1012, 1219, 710, 1013, 1220,
        711, 1130, 928, 712, 1131, 929, 713, 1132, 930, 714, 1133, 931, 715, 
       1134, 932, 716, 1135, 933, 717}], 
      Line3DBox[{719, 1014, 1221, 718, 1015, 1222, 720, 504, 721, 1136, 934, 
       722, 1137, 935, 723, 1138, 936, 724, 1139, 1016, 1223, 725, 1017, 1224,
        726, 1018, 1225, 727, 1140, 937, 728, 1141, 938, 729, 1142, 939, 730, 
       1143, 940, 731, 1144, 941, 732}], 
      Line3DBox[{734, 1019, 1226, 733, 1020, 1227, 735, 1021, 1228, 736, 520, 
       737, 1145, 942, 738, 1146, 943, 739, 1147, 1022, 1229, 740, 1023, 1230,
        741, 1024, 1231, 742, 1025, 1232, 743, 1148, 944, 744, 1149, 945, 745,
        1150, 946, 746, 1151, 947, 747}], 
      Line3DBox[{749, 1026, 1233, 748, 1027, 1234, 750, 1028, 1235, 751, 1029,
        1236, 752, 536, 753, 1152, 948, 754, 1153, 1030, 1237, 755, 1031, 
       1238, 756, 1032, 1239, 757, 1033, 1240, 758, 1034, 1241, 759, 1154, 
       949, 760, 1155, 950, 761, 1156, 951, 762}], 
      Line3DBox[{764, 1035, 1242, 763, 1036, 1243, 765, 1037, 1244, 766, 1038,
        1245, 767, 1039, 1246, 768, 552, 769, 1157, 1040, 1247, 770, 1041, 
       1248, 771, 1042, 1249, 772, 1043, 1250, 773, 1044, 1251, 774, 1045, 
       1252, 775, 1158, 952, 776, 1159, 953, 777}], 
      Line3DBox[{781, 1160, 954, 779, 1161, 955, 783, 1162, 956, 785, 1163, 
       957, 787, 1164, 958, 789, 1165, 959, 791, 1166, 569, 793, 1167, 960, 
       795, 1168, 961, 797, 1169, 962, 799, 1170, 963, 801, 1171, 964, 803, 
       1172, 965, 805, 1174, 967, 807}], 
      Line3DBox[{806, 966, 1173, 804, 1265, 1057, 802, 1264, 1056, 800, 1263, 
       1055, 798, 1262, 1054, 796, 1261, 1053, 794, 1260, 1052, 792, 1259, 
       568, 790, 1258, 1051, 788, 1257, 1050, 786, 1256, 1049, 784, 1255, 
       1048, 782, 1254, 1047, 778, 1253, 1046, 780}], 
      Line3DBox[{809, 1058, 1266, 808, 1175, 968, 810, 1176, 969, 811, 1177, 
       970, 812, 1178, 971, 813, 1179, 972, 814, 1180, 1059, 1267, 815, 585, 
       816, 1181, 973, 817, 1182, 974, 818, 1183, 975, 819, 1184, 976, 820, 
       1185, 977, 821, 1186, 978, 822}], 
      Line3DBox[{824, 1060, 1268, 823, 1061, 1269, 825, 1187, 979, 826, 1188, 
       980, 827, 1189, 981, 828, 1190, 982, 829, 1191, 1062, 1270, 830, 1063, 
       1271, 831, 601, 832, 1192, 983, 833, 1193, 984, 834, 1194, 985, 835, 
       1195, 986, 836, 1196, 987, 837}], 
      Line3DBox[{839, 1064, 1272, 838, 1065, 1273, 840, 1066, 1274, 841, 1197,
        988, 842, 1198, 989, 843, 1199, 990, 844, 1200, 1067, 1275, 845, 1068,
        1276, 846, 1069, 1277, 847, 617, 848, 1201, 991, 849, 1202, 992, 850, 
       1203, 993, 851, 1204, 994, 852}], 
      Line3DBox[{854, 1070, 1278, 853, 1071, 1279, 855, 1072, 1280, 856, 1073,
        1281, 857, 1205, 995, 858, 1206, 996, 859, 1207, 1074, 1282, 860, 
       1075, 1283, 861, 1076, 1284, 862, 1077, 1285, 863, 633, 864, 1208, 997,
        865, 1209, 998, 866, 1210, 999, 867}], 
      Line3DBox[{869, 1078, 1286, 868, 1079, 1287, 870, 1080, 1288, 871, 1081,
        1289, 872, 1082, 1290, 873, 1211, 1000, 874, 1212, 1083, 1291, 875, 
       1084, 1292, 876, 1085, 1293, 877, 1086, 1294, 878, 1087, 1295, 879, 
       649, 880, 1213, 1001, 881, 1214, 1002, 882}], 
      Line3DBox[{884, 1088, 1296, 883, 1089, 1297, 885, 1090, 1298, 886, 1091,
        1299, 887, 1092, 1300, 888, 1093, 1301, 889, 1215, 1094, 1302, 890, 
       1095, 1303, 891, 1096, 1304, 892, 1097, 1305, 893, 1098, 1306, 894, 
       1099, 1307, 895, 665, 896, 1216, 1003, 897}], 
      Line3DBox[{911, 1009, 685, 910, 1321, 1111, 909, 1320, 1110, 908, 1319, 
       1109, 907, 1318, 1108, 906, 1317, 1107, 905, 1316, 1106, 904, 1315, 
       1314, 1105, 903, 1313, 1104, 902, 1312, 1103, 901, 1311, 1102, 900, 
       1310, 1101, 899, 1309, 1100, 898, 1112, 1308, 1007, 1008}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1113, 252, 488, 280, 1222, 503, 295, 1227, 518, 
       310, 1234, 533, 325, 1243, 548, 340, 1254, 563, 1161, 355, 578, 1175, 
       370, 1269, 593, 385, 1273, 608, 400, 1279, 623, 415, 1287, 638, 430, 
       1297, 653, 445, 1309, 668, 460}], 
      Line3DBox[{253, 475, 1114, 254, 489, 1125, 281, 504, 296, 1228, 519, 
       311, 1235, 534, 326, 1244, 549, 341, 1255, 564, 1162, 356, 579, 1176, 
       371, 594, 1187, 386, 1274, 609, 401, 1280, 624, 416, 1288, 639, 431, 
       1298, 654, 446, 1310, 669, 461}], 
      Line3DBox[{255, 476, 1115, 256, 490, 1126, 282, 505, 1136, 297, 520, 
       312, 1236, 535, 327, 1245, 550, 342, 1256, 565, 1163, 357, 580, 1177, 
       372, 595, 1188, 387, 610, 1197, 402, 1281, 625, 417, 1289, 640, 432, 
       1299, 655, 447, 1311, 670, 462}], 
      Line3DBox[{257, 477, 1116, 258, 491, 1127, 283, 506, 1137, 298, 521, 
       1145, 313, 536, 328, 1246, 551, 343, 1257, 566, 1164, 358, 581, 1178, 
       373, 596, 1189, 388, 611, 1198, 403, 626, 1205, 418, 1290, 641, 433, 
       1300, 656, 448, 1312, 671, 463}], 
      Line3DBox[{259, 478, 1117, 260, 492, 1128, 284, 507, 1138, 299, 522, 
       1146, 314, 537, 1152, 329, 552, 344, 1258, 567, 1165, 359, 582, 1179, 
       374, 597, 1190, 389, 612, 1199, 404, 627, 1206, 419, 642, 1211, 434, 
       1301, 657, 449, 1313, 672, 464}], 
      Line3DBox[{261, 479, 1118, 263, 493, 1129, 285, 508, 1139, 300, 523, 
       1147, 315, 538, 1153, 330, 553, 1157, 345, 568, 1166, 360, 583, 1180, 
       375, 598, 1191, 390, 613, 1200, 405, 628, 1207, 420, 643, 1212, 435, 
       658, 1215, 450, 1314, 673, 465}], 
      Line3DBox[{265, 481, 1119, 266, 1220, 495, 287, 1224, 510, 302, 1230, 
       525, 317, 1238, 540, 332, 1248, 555, 347, 1260, 570, 1167, 362, 585, 
       377, 1271, 600, 392, 1276, 615, 407, 1283, 630, 422, 1292, 645, 437, 
       1303, 660, 452, 1316, 675, 467}], 
      Line3DBox[{267, 482, 1120, 268, 496, 1130, 288, 1225, 511, 303, 1231, 
       526, 318, 1239, 541, 333, 1249, 556, 348, 1261, 571, 1168, 363, 586, 
       1181, 378, 601, 393, 1277, 616, 408, 1284, 631, 423, 1293, 646, 438, 
       1304, 661, 453, 1317, 676, 468}], 
      Line3DBox[{269, 483, 1121, 270, 497, 1131, 289, 512, 1140, 304, 1232, 
       527, 319, 1240, 542, 334, 1250, 557, 349, 1262, 572, 1169, 364, 587, 
       1182, 379, 602, 1192, 394, 617, 409, 1285, 632, 424, 1294, 647, 439, 
       1305, 662, 454, 1318, 677, 469}], 
      Line3DBox[{271, 484, 1122, 272, 498, 1132, 290, 513, 1141, 305, 528, 
       1148, 320, 1241, 543, 335, 1251, 558, 350, 1263, 573, 1170, 365, 588, 
       1183, 380, 603, 1193, 395, 618, 1201, 410, 633, 425, 1295, 648, 440, 
       1306, 663, 455, 1319, 678, 470}], 
      Line3DBox[{273, 485, 1123, 274, 499, 1133, 291, 514, 1142, 306, 529, 
       1149, 321, 544, 1154, 336, 1252, 559, 351, 1264, 574, 1171, 366, 589, 
       1184, 381, 604, 1194, 396, 619, 1202, 411, 634, 1208, 426, 649, 441, 
       1307, 664, 456, 1320, 679, 471}], 
      Line3DBox[{275, 486, 1124, 276, 500, 1134, 292, 515, 1143, 307, 530, 
       1150, 322, 545, 1155, 337, 560, 1158, 352, 1265, 575, 1172, 367, 590, 
       1185, 382, 605, 1195, 397, 620, 1203, 412, 635, 1209, 427, 650, 1213, 
       442, 665, 457, 1321, 680, 472}], 
      Line3DBox[{277, 682, 1322, 683, 278, 501, 1135, 293, 516, 1144, 308, 
       531, 1151, 323, 546, 1156, 338, 561, 1159, 353, 576, 1173, 1174, 368, 
       591, 1186, 383, 606, 1196, 398, 621, 1204, 413, 636, 1210, 428, 651, 
       1214, 443, 666, 1216, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1308, 444, 652, 1296, 429, 637, 1286, 414, 
       622, 1278, 399, 607, 1272, 384, 592, 1268, 369, 577, 1266, 354, 1160, 
       562, 1253, 339, 547, 1242, 324, 532, 1233, 309, 517, 1226, 294, 502, 
       1221, 279, 487, 1218, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1315, 451, 659, 1302, 436, 644, 1291, 421, 629, 
       1282, 406, 614, 1275, 391, 599, 1270, 376, 584, 1267, 361, 569, 1259, 
       346, 554, 1247, 331, 539, 1237, 316, 524, 1229, 301, 509, 1223, 286, 
       494, 1219, 264, 480, 1217, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJx0vHc01v//x28VSgMhUglpKJSEhkcpq4ySERWJzOxQipBCyKrIKlJmZWSP
p7333q69XWmqjH6Xd/1+3/d5/86nf+7ncZ3O1dX9erwej/vjdhw7rrkaXudg
Y2Pbu4qNjZOlBcuJwpm3cQAmYlorOndqwWNFhQ18bnrcwMIeteLQ3w+x8LQg
UGviAgE+fvzskTs7A1nHdx1JdMJAoqW+aKwZCWJ3XJf3WJwA5lOvp3uOTYMH
2uNHuEuBRnf3YPOBYeg6NLPt6r4JyFTufw1pNKjxOLqZYNILRb5XvU+mj0Dp
xtwtGxMYsNGEctVdtQ7i97fxWLwfgLcJ5oKh0kw4zpl6+LG2T83iu35t+7U9
8Ec/QmzHpeOmPXUozPbWEjupGVKfWM6N7P0I3sUJZY89+1Bq5xPB1j0Idoi2
pKo+YoJo1al5rNQY4r53pjtkVxFUn5TOCDGaBZ5Xw091KmaQ3/JPhdvXM0Cm
Z9qfrYEOzkuhxaMJOHRkosm0hS0GJmx7ouV5aeBx9OcWtQEC0vSbSumudIXE
nQsvWs9SwDzupn7qSxJi+/MnYBchzJ9Vw4epnFGhZxjIwOdZNJrhwUM4PWJF
UwwbvLTbpoGYecyMfh4H+2o/3jwIRNDlvpCqEDkBSppVAyOiWLjFna9dqUkG
2vmQdW/OjAAtdUOT57kZKK0u25ZzmQrv1ofwDs/0gX/8J3E0OwHHIgWiai3o
cKHDzckgrhkqX5dJhG4YhUkRZzZN8VnY0dQTForeQu+58WXuoQForNY3OmTB
hODrvD/vFxagmY9dX21+dMMfZcI79pdyhQpt6P4DsfMDuc1w4cit9DcTTGAL
C13u0BxElHuR0qNlNcDb+HI2fAsTTviae6BtE4jRHiFfPVUIcVE8h8PwDDgl
QErl8Mcgf6kxMx2JDBjkjykftKGD4jjST/+EQzsYx83ah6MhRPyQPKGVCq9f
xX6NnCcgl4/PRWdjXcHY0jfr9j4KaKRMG/zbZxjf7rfi8/Fdnbjb45NQ/FW7
KfQgARZ/nvi2oprH045c2D8OaVdOTMfw4+HyONbSZysJzC8fPlGRMQwFW56L
xpZhwcN0w7qWbRRY4xT1fXpbP+CPqHoe3Y6BGpF5bdetNJhzTRQxEG0DJZV3
xX4PJiGIY80R7y90WCXt07+RtwySzKXOLRqPgmGkVcJ991ng8I18lD8Zh9Zf
GffMmRyAOf17IkQHJuxsSH1tFVuHrKKDv+yp7YY/ygQJI3GBmt29KLR7y3yH
ZTNwN2we33uTCZLPVCwHfg6jXtXXxWpHa+D3ur0xXi9nYcMXYWlXjik04tal
T48uBK87IyNkZwZoTszl+W3GIkx0u7jV+CvomGuZf7uKDnLcLmhKC484pE++
mMyLBimbCLn8UCqMjehwGm4hoqNHOz7udnSF1udV7RrrKLC5oNDw3z67NJ/1
XfGZduDIBPuvEbhRF8Ko+0WAm/qXttWzVHG8IDBm1RAcn3mpUFiFB7xo+Vsm
ngQa3zgaXx3tg7H7l/VlAAemBlsNvw5RQHeyTlSOvw2ezD6cWL6DgXCfuT2F
RTTQI3U/5auvhNQ+jd9StElIpzQpiJowgEdK8gbPuftAe7V4ycx9FBaczLtS
Y2fBbJfHZ+PSMtRzMdFgqmkAjGn4+V+aTHCQS027ta4dDd64epTvejf8USZs
FKpRGooZQGLejzo3cDWDQemxs/rzs5AmsRT94tEY8i3q5V9XVA3Ma2ZqS2Kz
8PlL/bap7mmUbEHPLDxZCLL22zWef6UD5x5DuQ95WES6HnZ3Ie4V+Gm5h0++
poEw7KYmJOERyFzP4rkfDSUmeS9faVPhjuzFfRFqRORv7FERddIVZiQTleSY
ZOCsFDf6t88hVdhbKz5P1dm9LorqBzYVX53MTCIg85R7Kxri/GLwRkU3PKcv
6wnoEODC3O/1VQ/JoNvE9dy1rRmIJpuO92bgYKNjaZDRVSrgD2/flhFSAb8n
HVfvKsOA3jyNKiVEh6pBvois5FiIKoqs79k0BYkGKb60ewxQX/2q4Yx6EboT
vvyFYMnyeeTXkwC/WVgnyqe8kasZVX87toblH+zn9tRb8e1zYwm3xeY+xK5W
rJ5B64I/Ogv05y+stbuHUeiPdarsSU0QGyLYbmA/C5T1hMD5+QlUqZhVpCtZ
DdGv2tklIxnwRX/vOVF1DJJ4oGSTPVcAngb1wvdvsfo2b7im7QgOjZ8Ja9LX
ewXnsM8v52jQYGaHlyiOgUdhQ/VtpmbRMMyp7NDFQ4Us7z3n1KyIqNLr1ryw
qCtcsEzhO9RDhtnGh8b/9vlloY/PP3Oj6e4xbrM2eFCWMkraT4L9vhs3klka
LRZdfTGhHtTHbLLq8gig+2To1sVfZMC/GbonuPABCnPDxX9icSB+RUgzrogK
7odudG1sDQT3+GrpPT0YcM23pNofoYNs773NjOhCJJ41tZb1vMLW6O8TK8/p
9OW1W4RONSLlN4bWFZKj4LvO9c09xVk4+9vpgqpeD2Lje1l0+NQAVOrcGaX7
s+b2QOEz7JdB5IbJmHAx7oI/OgsFiif3eY+PoS+93uNiu5qgXqDlYFQ7A4Le
rf9sdnIazdlzvfr4qAqYF+xnO37QocJU1M6WH4vCn8s7mKUWgCy99MWtXzSg
0pauk+pZ+04kKDZi9Su4Y5Ty0ZxIhd492TMtRwmI3IRXHJSPhu+ed02OtlHA
s+6SvuN9Itq3LXZT85wLnEpXv34xnwwj3XMmKz6XZ63zTn15WO2PkiBFQcYr
uaIcapqDR3Xuk4Dyu3PjGZY2fTYY4SzNBAqznatxhgA8239tClSiQDnl5FLX
cDSKbxPRZO0H4BX8cWhlL5g77/nJtbMEZWduOXMAYYByzOxUuAQdRCKy07pz
GtHEqlY10w+TcOvuXYLlDgZ8mGgtMr3TjUhGDaKJ1SPQM6HGJVPOgAsHTTsT
1g6iuALorprqh2dj3Qore0pm/T5pvthRlDLH42id0wl/lAHzPLzWrPdF3l/X
m7L+HQieyJ5eeX+i4S0eD0UMCj2nONbIrASzfRvLai3pUKDk3/B8CIve+Ios
wNkC+M68m696hwZ72rYXKGngkcItfzwWpUPZ3tBg2QdUeO4czWcWSkAfDa5l
BK+OZu397Vt/hVGg5S4Ht8BrImo5zQ6ZrS7g/YmmkRxDhmxco9m/+5n2RNXz
n7yxZfzzmLhrzX1f+pmVGrMoELSiDloGvhJZuejy+Yv2hVOsuSFVMSGmSIHV
h9q4bbSqkenpd4He/TgITH437J1KBc6Aa0JfvjWjphl67IMwDBy9XHE4qY0G
eULPppkxPShu32gah8IkJA3MDOW/oEP811ffDTcMopZmMW+9wyMwwn11yVOI
Af3Ek6tido6iIZHtqOF6P5x9a9I8IMuAEJR+OZo5gdy3ZBpHMzvgj9JBDCQT
9C/NoLSW7tsOuxthyjmim+BKhyXrLbJJh7Do4uNPxm4GlUBxPy+U3ECDDetd
THmicMj3+yeVrvl8IFBNJTwWqGCtcpRJrMOjydOyx3xup4OgvNmJCzup8AJb
HJfRT0BbXAYiCRVRMLFc4yTEym9t7vMWys1ExB6tSct76QLnGZ/T2DzJEMOQ
u/RvnznDe9xX/PRWi9RKrShHF+j1Qyv9LFd5ZO1KPxuJDGgdiGxAvg/D0irf
EEBZ9aPQ5S9k2Gi8fo9kQzviLZqwEAnBgV5OAxtGmQon3WQfbJPsQ4QDd9+f
OIiBwMDWNLVjNLheMitMJwyi6N4tWXz+E6CIneQ884kGBVYTSmdDWH42/hzs
ihuG4scvw8bO0cE2tPgQK/+hfYngtZIHaUdv+KzkwPdxwbN13DPIbVylqE2m
A/4oHdiwvzy+kTEoLrL2Cld6A7TvmkibL6MBN2/OwzxpHALjxOt27ypYOS88
vGMnDQ4LS+/ZpIZHm1tPttlk5IMuYZpcfocKtg7alrtUCUjj0oVcN8V0WOOf
5svZTIGk8wUPysWIKKAwQlTDIQpsNq5jxvNRwEn22J5JEhHtqHmmPn3LBbBY
d5eHRv/n8x9/D6v9vz7bIIudPGZtyP3q+76V+Sxx/fLqlfk82Z2+ziutB60x
bYPnQAAufMMTdIcMxlG3o8uEB5AF1U/zoRAO9nIL6eimUCC8d4tm+bVhdPai
8/1l/xl4zf57/eUgKvTPv29siR9DIk03zzRljQMku6RqStCgXFpH/HfyJJp9
kC5iNzUEnTo/svfepIEgO79xlNUMogmuW29wrg+286UJ/wyiQW5NGBf/Rww6
Z7FzzNW0Hf4oDe4m8OsM8OKQiqWmg7doA/SLnv4p+psKXTcsfM9z4dGQReR2
Jl8FSJV4rIoMoYLD2eLG3Xg8KhLaNXb5fD7UXjasf7pIAaXsgDTZXAIyas6u
Y86mwcEf2ct2dhSgxs5R31wlIqm7u0uPbI6CVA4np/BuMnzSW9Ti4CYhj2x0
7dh5F0g8M3tf7jAZdNY4W674rOcc48zyueaPkqDotJ/Ah6h+dEax/fhKzmAY
z3qu6EsevaAZ1yEkMHlp1C8fD3xGt/a3DJGgVnjY9YbJKBrb+imK/AAL3guF
H3rHyHA+Wkz+muwEwuzIJSa6TcNW6gzhSiYF2h3Nu7NGp9D6gMsuzRVj0PP8
utYaVv/TSr2CZ2Qw6MHlNV85xIZAmprq08jy4cTehSLGCSySOzG+cVNlL8Qb
OXWuzKXX3+IimKo4dMM0gUc/uA3+KGtPrVkjb7QJj6ouHBMwjK6HzMfZj11P
U8FFh23V+UE8Oizz9JLojXJItN1Z+pFKgZlIy01l/gQUE61bz7b8Hj5tz953
y58C9vz5Yjs3E9ErmYtc67PT4Bu91DKTlwKpgszhOxlEZLfApHa1PAY1QmLh
j2gyRHywfpwrQ0I4iy82rXtcoM3Ys+KnCBms2DgtVnw+5LPgstLPf5QEb3js
lDh+jSAhxuuZlfy8fOs2/0p+dlmUnN8WOY5OSsp8cebEg/qnc1L860jArSQ7
McU/hTxOZTsIYTGQdYq9/vZPEjR2tt7pvTmDbgWMNhhoTUGfqbvt0xIybLsw
8oNrAINaIz+Jj1ePAq5lNWMfsJ5HnszAui4sin1kd6/AYBB+bK1pXoylQK8/
W+5yFg49rOnxuynVC7HZM85nSihwMFBwk4wtHgmdeZsemd8Kf5QCEYlmZU08
BKRWZKtM5K6HtuUwIfSIAneuqPy6/5SAYkt22fV2lsEw08tvWI8CbgVv65X5
iajHY5F326X3MNaZ8ryenQLfFhNDNAOIiPucyzqSTRpE7r2gic8jQ+LcazUt
1nwo8Ba/vvbWY5DVtG4hXyADtyPH8JgGCe3vzda+z+EC+8uThigsHzZvO3lt
xecAs2rHFZ//KAkcVdQVfccn0e8KWsnKHShdiyOtqGzajij5bTPoEL/FlkR1
HGyR96xx2U+ECwLhPA/TMejJm8YMZ3kMzPOaV+Zws+ZPKf3LrxdYZEVa2BWx
YRKqacVxmypIkFPxInk+EIcIS+y7zleMgPMnl+bBEyz/ZQ85NLD2O9iTvV3v
D8D0xTydySQyYM9XnAim49GmYpk0lc09MFf09sbKc0qjvOqq92LdudqehWXT
LfBHyXBp+gpvAoWAhOLip48H1oFZpXGtzwAZok/sQp3aRPTtdXd6n3wZvNqi
c2mhiAytC46c25OI6C1jj+ndinegqYu6m1l3gWvPhHM9nojyzRu7I3ekwWj6
NFHlPBlI13h+ibD6dhPmauji7sdA97OfsGT17cbrFNpjGxISlE5Z6zLhDMYT
WfGLEyT4vSvXesXn5wYXHFbmxh9l3dFzpmzCzzAoAbx1V7hGb87w3RU9LrhQ
khSDRaL6qcMyPlj4/aj7lu9J1pzWZ7PY5ItD+nlOYpJz0zBWyHlFZD0RFmpr
ohp18CjRfd7k1sA4HJxO9RaqIMKhpNZri4t4tHD6bXldyTAEJGjpeauT4HVF
zkRgLAGFncWu2VreD7yBd50FM0mwNh6v7r+WiN54/7h/mNkFnp20RisaCcrK
aIbsTkQ0d8DHs3ljC/xRMoTya30+U0xE+0MOFMov1cKyZlZu+XYyXGtSb9n4
kYjwmXWdH56Wwobqvf5fxMlQGOFZQhAnIU/i84+e4u9g/Qkfq9Z1ZAi0nqC3
q7Oe9/73u4RnXkKO7l6luu8kyK0zrVi0JqHkI89jMscjwZnN2MKO5eej77Vp
nUEs/7Uip+9/cIbuEeM8pZr/n89q/6/PePzHw5m3ceivgktf77UVfdZoKjdy
Ho+arZbiH2ZhQILaY8aqwbwHY3NxEwHN8usL7QmcgpsBvJGsGmTqX5YOVxEQ
feCUQ3viGHAPBU2zaoiREo6bYvXVxSMxu/nLhuBcw3IFq4aD9kULm8qISPuo
LvuTL32wP7J4h1AZEYIcRsjb+Ugo82QGL72jEx7G2HJK8JGA6K+7Z782Cd0t
ldHYr90Mf5QE1dJ3QizdSGg2+7v6pbu1oJMc8opVw6GTpzwUw0hI1JZeMbdc
Ajr6Cw9YNeQkDvMsPyOhG8JXr+oGvoXjYy2irBoOHhoziEkhoe18dlVRKS9h
3fuFK6wa3PgW2blYvvmreEoKR0aCx7oMblYNMXsUq5+wXs/QYGAGIp2hXn+i
nlUD6YDQ9RWfizSodis+/1ESZOzv/BnOhwVD9vg7H9xwUJdy48fkIB4ck7yi
T0VjweTuTOwOGg78IjrQiibdODfs1U1EgjsldrQ+04cjRc+X7J3I/5NTzV6z
H5XlxiELvh+WY2w4+J0+6xFzGQ99RwMKWO+PLE+H3l9532tGN/NXdPMdz6LD
z0koZciVFhyvB4ZF1bc4skiw6PG2PYX1/uc8N05ORupBycPALlYNTnofT4Qs
Y0E36ovJBBcOfM7KDmKu4qFbjC3vBCvfDqN9S+ilPjy7Y4PWsPLt8edvIyQo
OKT9RaYr7gkWaqbHP7Bq6Dx6z3bl8//Rw2p/a/DssaSsb8eCa8rAoVAfHBzr
wPmz78TDFzUDA30VElL4mG+AFZSDyAfXvgtxk+GQyf3kyRM4NCfqpHMecGC/
TiWggvX/0hQ8rt6USkJabuJTadH7gU2095xPOmuenAQyJzcOMhaf6HwqYN3X
iQteKzoqL5hz6TBrzx54Em0sLAeGq+Hbdx4yhNTeT3crwCEhreqC9Tw48NhH
7WbV//P7dcjaQmtWw4H0+KtgwxM4UKpXl2ui4/7n97VOEfFwsb4vs90uqiuf
I7dp8PqKxrtxma/8/ZfdnltVHu8H+YS8lVwFnBb3+49sngGlnFXmrjdZn+Nm
9o7TXESIn+UTETHFgIpa+AGLYgwQZe8rfpsgwrxX1693VpPwTc5HXsUJCwbS
mGvH20igG/zZ4v29KRiYPFmQCDOw5Tx7wAfWfvf6ZoVPoY9C3AZGKJ8KBkjn
Rz+aJ1NA8gjHiVKPMTjUf1DVr3YS4r7nZnx5ToUbU407bqQOQrleWZBB3hRs
m9xb6uNAg06XnE+yroOQx30uAUMcA0yVBA/OiQ77TVNoC9PdEOoioro9dBzG
sw+zG21igDfjV6HATCdse3jh12D+MIiYdwe+4p2F2w9M8z0H6sHo4TEJxtoR
kNwx2D3qOwtLmuJ8+nI1gKQoZVcVBuA69ou20lkmsLEpKK3wfI73f3j+wl+e
73S8/o5l2mvQM3K+/MZgAL6RzPODfJng/pdLk/5yacxfLh2/6kuYsBJC5SfZ
Yx59bgEmx/OrMgc+gm+d5/KNfS1I58Ked8pVLbChDbtfgsIEeBF5irOgGxV7
OVXs86gD6mrMrZP1THgXOb3hqHU/yqkIzOxWroPBqlGx8YtMONgpJTipN4xC
ZvX2HysuhWvxb+QmRmfBcqvV8FTCKNKXTddyNy+FfPvS4O7rs6Ad7iC14e4k
WuA4Kpht9xbe88YGtycwYLUvyJdtnkbR6x+pd/zIg+w3WJ1OOQa4ruV3W6Rg
kHVqP7cz9QXw79yXJ8i6y0SZRy/wumBR7Rqp06aBL6DnzORcaB8NmO/FksVl
8eirgNjw3qBwGG4r0qxi5eEe6ozLcW884ri9troGwiHzypvhqetUIAaqXu3c
SEQpGAIbrtQBvNoCtYOFKaD7JadHTo6Iunk5mUHpTtC0b7rz/SIZLO1jeBwf
jMNueS5db2U8DKElwW04Ityqq0vqDx8B3oTm4RQBHBx0PaPo+IoMqvuu7Bgd
GYBLxRkUzxoMVGnPrEuxpcJAQrhYZHk3BCXhT824TgPhSs/jnk10uDn+vr71
aCNU1G/7cZV9AlSiKCTVGAaIW2zAh/bmg5abTAm/+gi4NzZFM6pmAeVxcFv5
p6HR/IuVhw0H4Hvzc736u0wQ/8vP7f/y82t/+bnRCRs3ycButKXzRGG6ewv4
BfwwV3rA6h9tg4iLekNo35bPn698rYUXdc37zmFmgd91XkambRyFP59sOv+z
BDpvZqk/pzNAQj1zv/erGbTe98cR8sM8YMgFvDWrpwPmJ1+pIhOLolYF1b3a
/AKusp9oS79Lg+qe7duuIDwysjIXD1l6BMsFjacP7KfCG73Vtif0iOiIfZlo
iL8TtP86wrMVS4YCQsAxbdshkPzcvs2bhIfzx7ZcFsgmwd27CfuUD/bDPodN
0RXpOLjtHRnAtKDArm+7WtPSOuFJrx6fpiwWNv4iu7Xx0qDbRF2XM6gB0tXZ
7VV/T0PRfJS+XwwdvIQdvWg6hfASHXEXPTMBd2/SLXrGGSDWZZ54NyAGSeZs
XOY6NwKXf5VPkjtmoczTn2S4twqdYDqbUJQHQMTqfVbzeSZc/cvPx//Dz6+4
TkxfaexHMuJdNHahFkjw2/NTdy0Tely3leQLjqKLAiX18tm1ULKtfY5hPgub
Io5jl6Ym0XZ2N8yquBIIeu/G98SJAV/XiYcpPsagmquh5YUCeUAL009fZ0QH
apjTzScOOPRbuePD8/ep8Pzu2u9xu2gwcGa7+cPVBJSHk7OIrXwEPSc/Mmu/
UuCyNe7sNCvX2U3LUMvMnSC4aGg2u4kMKbqNwrce9QDVMElnqw8Bkpu/pV/V
I8Oa5msCoR2tELykaXpVAA+5bxe39X6kQOuzAvnfE7WwqZLLQYGVV+3OHlia
9qXBucQdEiXH3sMr25yn987NwAmr1Cn6MB2CaY3bL+vEIC+dWCmLKxPQdu0t
fiuDAVTVW6/5/cqR1OHNU5OHRsDqoJRIx5tZeLyl3fHi4xZUyz0sv4FjAE7S
NWeLFmbh419+zvuXn3P+5eciq6uNbbYMI46jab7krGaojEp4W+U3C/ibVtVb
P4yjvTg/93TTWkisERTk7GCAbI7dSfGRaWRD7uHM2V0Cj0RjErnJdNa91spF
PIlFH3612A4n58LCj0xfHwINNgZM3tPC4JD1+UNavpqpYLZLmyO8nwpOIicE
G88SkGCwdBv99iPwd3G1e1ZFAeHzhqJrHhGR/rj62HplJ9i/eF/VNIcMw9Y9
s288GuDRwBUD7RkChIdu6w5oIMN+DWPrh+vLgV8pc5cJ6x7Yt+FLhsVZKuxU
0+vc/SgdxLYayvomYyGsB+NtUkCDYq4nJwctXqLFp+fuvrwyA9rUw4XMGTqc
2qs3922kAlUfXzzQrDoBFuxRR6cbGLDu6DXyEl8Lehr2IV3h8zA0JOfsqTSY
hZDYnwdXX+hFydeDzusX9cMlW39ssf8sbPvLz73/w8+rFCQvqp8cQw0iLhGC
Cs3wfQKH1mMYMHPHV8d5/xSyffOjbD17LVQNbDw2cpABJbHfMnXNMahBcDJS
u7IYTr3/miVjSQfP7MOiSwwscs6bOcXYmQvNTVcUxG7SoF6gwcDJEI/qooKc
AqdSoCDn7KVCPyocUSm7siOKgII5jPakqTwCzi1yIRXBFPCSfGfTlElEQZy3
vKMEnSBZsjd5ZxQZSlf16vw6kAt0ebzFW2EitGa22q3hoIAHfq0eR7k2+srY
qDLsjof+nv6FnY5USFbePCGKfYfeqgS83JaAhQdfnwa1ZrGeoyThn1VtCPVc
8koM3TkDAeI68U25dCjrlL0yb9WKGHrn3udjx+G3wMW6MhsG8Le++fTOqxd9
dZ4JGQkfhjMDacxcVr/prT50xeDFINqzr0r8hEE/pHfu8vVm+Sb9l59n/OXn
qX/5eWaFdbu54iS6N3fW/MzbJqiteWHfpcQAwifJbI17Myg/KDbdRw/BxufJ
AZFP6FBrIefuehSLFNzxn4fOFkPJYFE/7xANnI6W1HyIwiFRg5yX997lQITP
HdEbnDTYkZt7WaIWj0S4vewIN1MgfUO3o8IeKtQ0vfDM7iWgqu0htpXzYYDJ
ee+gpEeBseUtjfxNRDQwNairPucIbFvzq4VuksF4VZXlZ6UslDLWfCx0MxHq
dq2TTOKkgINcx1Fft3JECc1bbmL188Glp7OBOlT48Im7yWuqAb3Afb/u4YgF
zAUxn2krGlREBVyK1+tA85XnlCzypuG7nPKyphod9EMZ1M/2fUjH1Gj/qPk4
VOeo83YN0mEpVtSyX3QIvW8h+RtyD4O0Yu3cyx0MKIw+JRKbNooaGXpRa8b7
wM2hh+m1iwEP/vLzW3/5ucdfft4W5r8ma24amT/5QVOQaoKYoOXPpkF0UDTL
DuYYwqDpmo/r3sbVwGzQxBrxzzRIi7hTq7sBh+h2T9bITXwAjc35Um91aFDz
8tl3vb14VKjkOcGnnAOHN2R+Ho6lAvb9m6zQPQR08Jaf4iBfCojv2lS1a4gC
F42PpNmx8oYMJeWdRmkYTCVU+a5n5Y2viRm9c1giyh4K0xTvcoRvCeWKu83I
EFTnMWFSXo9kX6T4vSMQ4CvbM/ENrWSYoWfYSy60Im9UPqEgiIeLEU7KKgwK
NFp8ubXWr4e1f0tMBUSwcKRvv588jgoCn/cV+fMOID3diFP5v6YgR2CyavsL
GkwVcBmwaQ+j8A1oyvTtGPzaIPQ+S5wOgxFHTzCujyGn46961zgNwYSxEFeF
GR1o3xYmqi5Moo72mYxvpn0Q/FG439acDm//8nPv//Bzq62jq2uqMOgARnT/
oSeNYKwc3tXQSgM9k9Jv+iNYdGu+VXx0uBqEldMp6no0IOJ0GUbDOBRf/ShM
0PED7Pl2cNfHaio4us4m8lfj0acYv0Mctdmw9UKLYpkkFe44ojMtjwkoUYCk
fOd1MuBVBBRKAylw5XHgMTt9InonFLus6RO2Mq/u6s6QYZrtnqDNMhGdlM67
JpXjCBqXQ59fUSOD/VoVl6qJbkTmpkc/v0cA2YQc+zAjMnSEFsXParP2+P3Q
n32vcBD8ktdo1IwCwYktg+2yQyhSkz1dMgMD4iEHtUQUqVCqVA+TnKPoPAe/
D2HLFJxd2sPuMkqFb8XChltrx1H66ZQZN9wouOJT+n5r0CD+yGpVrgtTqG6k
O/hJ9SBsFbO112TlpQ+FO5LzimaQH3ettFBXL2z1+MKTdY8GOX/5ucl/+PlR
jY2WyWQsItwo/HWLoxFOkn0z29bSQMWTcuJICw7VX1f+0LW5Gk6mWKmFZlLh
caNCxdoYPPptIoHkfhbB/Htn6ZiDVNhwffimnjYBbflmdAXpZEOyc+wTqyIK
6N1042ObI6Dr3I79bJDMygdzCr/kKNB8BhtbxNp37sd5qtqUw8A7qjLhWxYZ
vPVUpZzFSOhUyhzFJMQRJOYK3UukyPAaV5/xXWgI9Re1al/7hIcjBFl+nUIS
kPqUvLenjaBzAdah04I4SAsLGpNKIUPypZuJKTvG0WG/u6t2i2JgWJNQMG9J
Ac9b5PNjoZPohoFluKP4JLy0TO/b940C9APMpbH2aWRwbV+LNecoZPa5NN81
p4LEgIJPoSsGnRoBrMiqQdjI9+sSbwwVXJT3SihbYdFmscS16473wuKX/F3U
5P/j5x5/+bnzX36er+udw/ULhxDtJWHQtQHA++t8lR7reT9HhRev8cjtvLju
1ktVUCwQKK7CQYXm3VOWHCdYvn00nd0QVgTuxg4GKlkUULL2CjbsJKDifYMB
8YNZcOWcPBLVoMDp3tQdpqw8zMPx3PzhWBIIn2yZ4pkiw52S0a+mrDlcNb53
rv9HKOiEW17Y4EkGn87Gh+tY9/67mydWV9g4gvh7PnVFXjL0uSxslTg+jtwD
c8zFTuPhqlemeguDCE51U0kXvSbR6twbmIc3sOBgWDEgVk8C0/sE4o+n08jo
t5ZMxcI0WEh/Sr7FmvMVz8lHRc5g0OZT3k3yPBPwOMaSe+I3GRTeGGSuP4RF
P0Own59uHgFTJbm6mWsU2Hj/mkT5ahySlZ0nzWkOQOru4cf1qRTYzzldWFSH
QxYKfTIE4x5QnvKx+Pkvfi72H34uIymx6fw3PBJMf3Gla6oe7tQw6sKjKTAz
O57u6UlAnxr8hgVeVIJ1mC/OlpX/o6zZ/fvxBDST+mpOXqwI3NrcHrlup8Br
j3sJnjpE9DYssKj3ahZEXJ7buHWUDGfq/Ifn3hBRmH3Wvt1eSRCx/ar2j3Ay
4JNtn1my5kND2YcZx4pQsLp6JDf1OBkSlXGdmudJaLtirOpZdUfYWPLEb5BJ
AtFzHMdOjE6jlpFnFuJBONAimazp3EAEY1xHw5qrGPTw+MYXr0sw4DAskq45
yLoTb5c/XH0ai8h4DdGkwimQrGq1ULxDgjA3wgHVTThk6YlfHU8dg9xzfOfj
2clwijd27Eg3DuWd617etGcY8o8aLN2zJYObWf+cojseSc1t+hQU0g+3TdKq
51k50zrKlKdpCY8enKcWBhzsBqngE6Xlff/Hzz3/w88vLAxtWDVBQDl4Dp9k
vXpgtatg4xAZah7zqlQdIKJJJXpHFbECin7inb9VkUHUow0r6kdErZT+95/z
CkGEIvksO4EMhbKrV3HVEtEBsRcymcxMYHga+6XeYN0RbovqnxaJqH/EJ5pd
IAl0bpaVjR8lw1mt+LghJRIK/exoH383FI7Xawhn8ZBBMz7OS+wGCfVE2O9Y
K+EI7qtVEhMHSXD9YPE2d0/WfEtosG/6gAWRtfEnFncSYKM6MjqrjkM2rk8/
1n2ZASG3tPuJUwR4euIdx8QyDl24meqddW0Sru/s9ft8lwgy6ZkfPd7gkaFK
CcdS6yjMP8dllbCTwLzsWECxMgGdDv3888aRIRD9lawk6UQCJS/L1qRCAip5
rF1yqL0P1mnuvjpXToLFaQtBo81EVK7KU9co2AU/88cGd839Hz//+h9+/jT4
w63SPCKKT3thoVxbB+IyF8RTtpHB1e3Di/usva90b/7dnHwFUDrDTj1jvc5N
+r3Zh4+EtOWUIrJOFsI6drzPqU1kcGjkLzRRICF5nz3XzvpnwtfGOMtWDjIs
HB/Zd9eAhPK2F8zvzE+E8lToQwwSrJtTYTQ6kZDIm87WSxAKnnqrQuVZfg5m
qPE+ekhCByO+OswvOcCuy1G/HlSQYOeBGuJnZTxKOHUhjYOAgY5um41flPEg
/qGu4wsRj0SrFp5E3poGhcn6r6waHmm423sFEJCYTbgzbtMEbFEeiGLV0GYf
0Vy+iojKEI9KTt4I2O+cn2XVoE26ZbDGi4g4Ap9Hlp0bBFrie29WDRQX5q/e
biLCi52qfcDfB5vSTLb1dROBo+cFv88mEgopyvkYuNgBC9aq+1n1/8fPA/7D
z5O7rxLYWf1z7+TCgslhls99dmwcN0gw6mUkOHCfhHSFS6iG/uXg7iS5h1Wz
7so93Q9jSUh/LIU3ZrQAvkvIYFg1zM181axOJCHzxPA1pA2ZELDungmrhqxP
z1o/pJIQ8UKMf7ZBIuxNDB9g1fD6yttbKi9JKCsVvw1xhEKTk7E/q4ZDu2bq
G17OgIDab86cSzjIPH9B6jOJAJD/6omr6xTMDnFt26KGBUqFo1fjUxLIT4TZ
4lPGYWTnQ3rk0gxIyN6BQgMK5Hv3rwrhHgGTqbY6GaUp0HzrfzFkDQ3oa58X
Rz/rh/VGONF3O1j3yOc6yxsFdGDfLErWutMOjtMaDTMtw/Djd7BC4J5Z6NHy
VvVkqwJ5H878O0oDIPR93dZGQybY/A9+qJ16Um9OpBmdGbVs2trcAkWtzNyz
X5nQFPlj32H/PsTfGtQ7plcHKust7o7eZkL4ida8Y7EjSMX4sexsZCmYnNZq
bUycBV3imqUYySmku2h9zubMW8hpnC4dc2HApXIJt661WCRdpNhzY/IFkN0Y
bdobWXdixe07+YfwiKx3lnEuIBzkn63dGxVPhcCRgJpYVp9paEVl9G7Hw8tN
PvNf2omws7zo292qUbAaN6D5U7GQtjrOCLH2V2nANdX9VUNw/NrHEesIDESe
1BZYkKIC2+9z1zvZWHevvEiS5vppGL8t0xfcwrr7gt5GmS20Q6U5zsy8ZBzq
RsoitHRYd65YlTCPVS3Iv/c+47xlBDKS2V7tiZoFLXobbkI7De6UOh0VMxyA
2tSDF4l3mSD8P/ibsHVWvq5HF1oU4Eq6f68FcuoPOMk8ZUKDmf3WfrdBNPLs
w+bldXXwQ3XDr/5VTNiQ3p5zrXsMnRMx1jFTKIVGrFxRkdQsOAa2HXcum0Y+
9jTanfE8GNU/9KuYkwHxQvckm6KwaLC09sOamy/AaojBEVRJA6ukvQcz7uGR
e7BxzODxcOBc/ebLGwsqvKle07vCOXWJvP9wzrz4sH845zHhO2rrWPdVs523
eVIfHnL2Pp3sfEICVw0OYUbwAHScDS/4dA8HSO2RWLsyKw8nmypcte6FZW7e
wmhOLNgT3TTch6gw/MTqq7hcGzy06cF2lk8DLWuYIHOJDkX6Hal05VrwaU6b
atg+AblRHGvmChlQZt954GdbJpysZ2T46YzA9Mhg4XzjLMz49xKg4TUyzcI+
4WL5rNH7/MEaXyaY/w/+Vu+ncfzyyX70nXP/Az+ZFhAay/JM2caE4ogEptDJ
EcQnsW3fVFMtlF7lHTkWPAvYpp9GOR8nEH4pKpjUWQIO7OTWPW8YML3JI+7o
NgzKdHjytdwuD9TqZF4YPaPDaBNb38x6HDJZ91RRaO0LSLuCl3GypYGSlrRN
fCseScS3hDxeeARnir60fdpJhY/LSv9wTsVHlf9wzmuuG//hnLFU8uhj717A
/45abWdLgJjK8wZmrLyxniP3ZPHbDpBNPPX72g8crB1bZHAPUMCSsWOznl4T
2FXnR01cxoIG/2kh3EUaKCa943v7sBKqNGIf9OybgXWZI9M/K+nQ8AieXDLL
gPwS15RjphMgumyUV0hmQJNJ6FED73QUNyIYcMJgBHLV0stTW2ZBUldp8erR
GoTVi9KSZ82HcHb9PWpnmMD4y9/W/Ie//dKQbpBIHUKft2qdC6xuhmx/lfzZ
uFnYgT8ReZcxhrLLrcO7vGvBWrGEeXWeAVtvyhLDvk2hgq5AYqlNCZQcmFvt
I8UAQwGRcscRDDqji3Hu+5wLX4fFlnR30UGoPOHD4TAcmnzfW9+flgr5vJtP
H+angRuXTtOTDQTUqlvwNrz8EfTtPPX79iwFcjH8uiucc13Jnn8453VKzj+c
k2Sd/OTgp0Zw3LvqzNpBAqQUVh/jLSfDNtMB370HEOg9vrTN8gwezri1nfc/
SgXDWc4Ru8eFEPFGPpUZg4VlGnYdLYMGuT8xjZVs0ZB6yNHkoOUMLEWP8Mvg
6eC4SkUt9n0W0k7Tkft0cQKMM6L1aXgGsPNeP950oAZ17J11g30j8Gb9D8O2
Z7OwHd1XWHjUirilt8vxLPWz5pn6kYGPs7DlL3/z+cvf3P/yt6I0Ye6G9lEk
DotZx7WagdRfvDfuBwMCNqk993KfRJ9PylXtkqyFZ7VRZQ+sGGC8NeX2zMwM
OhaqmIH7UQzSKksKY8l00OPKx5JCsGhEjcBvfzcXbNfse7G3lAY/np3iJbHy
ErNiIDxYJRVuHPNW5a+iwkXlZp1MIwIS0m60GPV5BAv1b0R1iikQaRv4D+ec
0+tQ3KDsBA/LL/7DOXfSIhvWV+dD0Iu6VHYBIpxPL/mhuEyGd5sizQrTE+AR
+ROXnyseKo+32323p0LRDBt1zVI8yr+57fbbVCxIflVjTyuiAdvlk2F1GUVI
NE4Lv0VvBuy4tqzO66KDM3OTw1W9OqT7+2Lpc+kJeH9oNCcrkwEC4ygWc6YN
PX0q880LNwymJHlhOaVZSO1/yL+3vRexrTa8opHXD19kzEqFXWdB4n/wt6yb
rmWGjRNoiufKZbfmJti0PHBq0zkGcFxoiz3XM40knyoLesQi4LkR+H20kQ6y
qSEF7qy+tbN+xu3wqBiWeNj9vQXpsG+wURUjj0NS1xvGNq3KBWpiz+sbmjTg
33jqAZ8bHuGf+ONselLA7HVD0047KqTZefOOxxNQbMaRsKDDj+CWcQnRzo8C
JQF811c4p6zt/JYVzhnfefsfzmn8XLKvoSMNicTKVm3YQoRAJVe15dUUOCFB
lDm1rghFG3xye22Dh886lQ2vTKmw2cX1C/F6DfK9Y3iJOwgLOcsjRW33abDl
18xMsX0T0ppOOVUxPw0XDibxLt+lw6BGtdnchk70xOl24+PqcXCwWcWsPMyA
FJWjX8aC+pBzxi41Lu9hWJttdHx3FgOKlI4kuK0fQtdbg09FaPbD2708EY1d
DAj6H/zNu8Hvjm/YNLL2SGqpO94EC1lhNkMpdOiLMVq18T4GiXbH2XqM18BA
UuiJq1J0sFWqfB9RgEVm7wyfHxZj9fPLS9vNQ2nQF72zI6YHh5oW4jiuRubA
eOjj8AesvVOCvna1T+LR4jPdtGzbFHBhduU8F6BC3N5adZUxAto17x0V8y0M
Bm/PuE+z7u7vM2f+4ZycM8P/cE6758H/cM5HZ5dibknWIfHbnnouTAJUuGYu
vu4nw1D+xdjBySZU5riEr9mLh9UJlT9+8FDhq3RPK5atA12M5np2kJXr5CPP
6IuI0kBKXSVLAXqRbbur58br0+CLRoXQdxqMbr+wM3T7AKouSNJR2TsOBS7W
CnwJdDhw/KMmSWAYZV8PkotjDIH5tjzxT99Ze7PDYIcazxg61Wm1b3VvHwgq
lYdcFWBA7l/+5vOXv3n85W9eHg4/JCMxKO8RZ372+0YIsFvomSew8sBpmW26
4Vj09FJs8sNtNTDN/+Q9058GoqYMjjR/HKqvwxpvy/4APIeLzDwWqcCnLiAO
dng0kWDeUS+UA4PEC2cmbKjworOe95QGAb1hdq4OWk4GZ/PPXY9rKHAkdRy6
WPdRYYM6lr84DHLeY3Z8WE8Bcbs/nJOvb13aCud8bfWHc2rbJn86ZNSF+rr3
ln2LIsCbpCWxd9fJsN+vLYmzuxc959/8zLcZB4XnXHmM71OAOmawhV1gAO3+
tpCvOooBNMe2yvkOFSIEAntuuQyhB3LMH+OpU8AuaDBZeYoGFMX4PsHxEbRj
x3djLs8xEC7gE7w/SIPz09clmnTG0XfDQ7ZPdIfgOxjWvd9Dh/DM5JCRgkkU
eRg+z+v2warZwv1PT9Eh+z/87fxf/hZ0Na2cWYlFHEMRuZe3NcI7bw6N07tp
IL1Qc/t7AOs+NbeJS79aDaXqSxLbx6hgNthuKQN4lNTAf2RM+QOcYFzaEO1G
BYMF8a0H5/FIdUK9LSs1G3yVmQUtXyngoOFhmZBNQNbreTeJxidDXf19bykn
CtB/DF3OMCGi7dIa/Gu8wiD34IHsjyOsO3pgzaYVznngUfZbyRxHuDDN9Q/n
fOFp+eGNxSDq8p3+oMZNgJ7mWtXRVhJU5VoLuqoPo06rliOmgINXZ17icnvJ
oPcqQn290ij6sb+Tb5UpBppsNpy3ZM3/Ne0KN37Jj6Op8Ls36PmTUCZQ4ujl
QoWcBH3bZdlJlHbk46ZDaaOwqjMpvfsbK/+oH9t9b8c0UnXaP/soeRBcZpVV
n2nTwLr3xNP3XBi0XtrvjXNdL9Ss0z9eYEeDV/+DvwXlu6lL9ONQuVG0b314
A7wx4wYJRyrMeX85O2rD8m2Ds4FXehW4xh98YKhIhbWPfoa//oJHx81mZbhb
isDBlmxiR6TA6swAzfJ7BDStYVHpsjsbBBinFxMeUOBnSlAek5eILn7ku/1E
IRna5npdPTZToO3sBmJrLBGN40l3gpXCwAad3R2fRoYfL9f8wzlD07+lmIY4
wmLx9D+cUx8/O/Dw6RgaCLd7JGiBBxcbrQQzbhLMcDY4lCtPoBd76j2PsPYd
b8LP33mLJMhp+aJ4cGISNaRVejkGz8BWnwDiLdac+XWw4VeK7zRKcVh6ejtz
gpWf1orkBlKARzG+1Z4Hg15tNcxvrx6BnXatbmdXUeFHe617bCcGOW3jC/LD
DUC58MZNipeogDFxeLwmFIuCzjbi2A70wgl+eqIBy88Df/nblr/8Tfgvf3s1
fecORx8eaUtdVvb8WQ+fVeJp4XkUaFH0d59QJiDyLws1B2IlJAXmShQ8pkBB
4lJDYTIBdfe/65U3LYLAc4KU6EsUiMni/7aTneUbv46rTVEW9E7fC4wVoYCP
jp2Eoy0RiTJseYQ7kuBqI0E3rpkM6VGC+zS7iKi5oWv7w++h4HMjSCTfiTVv
l/VDVjhngOmpfzinm2vIyRXOOXbeJIJLfRrtMHwg25CKA4n+8ulP+4hQa3TD
w+r1DLrlzmYixMCAdXBFFJsgCR5LcO+n3cOgI+liN9TVp+HOuLtf9RTrficY
4+NksOi6a79Qd+Q4uCjtaVIOIYNN+RbPT41Y1C32yL2zdxg+pOiuPrWWAoF6
b937zHCokp+olSo1AD8VkPRqewroHac/rCXgkBa2A+d1vAeIX74q7kllzau/
/O3mX/7m+pe/Ma6B8YYKAsJk38ypsK+HW54MK5lPZPCpsmpb+kVAzadN4rL2
VgImfJZdjkGGuaRXXNQjRCTY5KDaSCkEgtpb3ogBMmAlW7+33yGirTR6Uzdk
wWB4QtQsK4+V2ZlzyiMiEqBxHyq3TQJuxby4RC8yhDHCrXetJqHW8DkVkbJQ
OPfbyhkOk+H3nY1dK5xTvCMy+Iy6I3T52//DOU91OFZIHcCiyAjLk139WOgO
yhp2PE2AS58LGZLNWCSo9ptEVMAARkH/Icc2IngVXDnAeQGHqg3Fh89/nYR2
dUbVOwwR/HZiG8WHcejQcLi3p/MY7NigZX89hAQ2AhvCjfTxSDyfOTiKGQLe
Q911IevJQGCyPTtViUe7j7zesdOmH/ibpF9cYO3lX4z6s0ZbCeiYspyeqFg3
xL9ts17J86V/+du3//C3awdR7+hjIkoXnaenjNeBa/RWrsOqZKj7qMHUfE9E
wcdM2nZ4VkBl00B9uC7LB2WCAKmbiK6tZhfdcbcQBBYN8bV6ZLCteO+18JGI
du5dFCR1ZcJ99smD40CGvDLDq1abSGhQysU2gTMJ+Jb38ibuJMPg0aAcn+Mk
5Bv6E477hoJv07o4HXbW9yL/h3OyGzsPr3BOthTlfzjnagNnsXI2PHr25cqR
5d8Y6F9UTRA1wUP7cnIR7TYe7Wg1XmtJmgaHG/a9ojIEMCv34mSj4xHEJHG0
ZkyAbjhXyziOALsc357beo6Avoq7fCLpjYLIiJrHu1AiRAbE6cRmEVCH0KO+
jV8G4VsSB7/FJhJMHBI77PWVgPIX+H4ZZPZBz6Fr62WCSfAqvotZeIiI3vF3
6uYtdAIPacfa8RESEP7yt8D/8LfLe3oOz58jobqd95/hDergbk3dx8IHJNDn
9uavNSahxxapE49ROTTWHGS7lk+CG6t33tAyIyFrNtkz0fyFoHf72WRQOwnO
vjnF4LUgoZnEkKWxK5lwsH6/VMAwCU4O6NGkbUlI8J23W0taIgQKWg68ZL1+
49OHxZOeLD8z5XIWj4WCsmKPV38nCTYr9BTMG2HBbOB3DbMOC58cmxPeHyLA
Ed5QAYoA6zlSL/xxodQBOBc8pPM2UUAwpGWGtp81fxzjTlonOADPpCMfc5EM
RTqUt2HvsWhJ37lWPBELhzbn+kzyEEBcL+6IYygJbZ9vC5yWsIdH351/5ZaR
wOj82ts1qSR09tuJsFFOeyjm7nVxTydB9RqJVQkvSYhh+rX9OOv1NlnBNawa
rqQVOMey7szKxqbf/JlYuDs+9bZLhAC3zl6BNNb9s8pfdfazKg6uDWZlXZci
ggXPfZndQxjY+hIz5aWGh9s/nqz1Zmn3sbdHnm+ZBAnqp6N3V2HheM9k+SpZ
Mnyu4A3mwo/ArALolCrMgIrN9Ndv6lR4HahxhC2gH4iNanOyoxNgXloxlqRD
h3USXvu6RltAOsCbys81CmdE7L7brZ8FR6JCyrMLBeAXqsr7vW8AnkvsHwww
Y4JqiG6K7693yMpIY3B0sRv+KBO8TPQ98zVa0cQq4cfyH5rhB1dEFTeZCU6q
jWiRMYCQi+cTbEsNJP/Uu6q9lwke53mv98+Mo5z1UsanyYXQSvu2T+IzA4Rb
9luscsQgrMf+hk17MmBv8KJ0lxsdYnebHX9KwiFHNpeOTZPRULg+dP9yLxV0
kqjhq78Q0Mc9orLrElxB+eebe7YKFLi2SvZLFOs+t0u4GBxPYOWc0queelQi
nMgkWst9mYIiaquv4m88697UylnRdT4WLoO4EVg+VB3TH4eFe3Lj5vWsOTwW
9MNf2XkAKhQ0fmlzYeDea3Ny6ycqFHtUqHS0dMAyT0HUY5tJePzZvEh+gA5b
qRxFxsbVIDcJIQ7ao6z9mvBQxGoWnLZKz0xxztd4zUlfezE1ADIx16QvOzEh
MOQJNrejBhkG+HUW9HXDH2WyctDa4nfh3Sjeft/d6JvNsF2hTdU1mgkannat
0vrDSP/+7rItl2tg186Rczm1s6C5677HiUeTaOr052tJGYVwvFbee10EAxxP
SnAKfMagiQ85IMJ4BcXv4pzbttLB95TRIeuDeCS4sbvGoTQatib0aYwmUEE4
Qfniddbz4h3J73P1pitIY6vKRYQoIJ23dP5fPw/MZt3Bdmfl53u3GJUpZv0c
hsFruYgegIcYUUnvpFQSmFwrlkgeGIPVO0Z3rf5AALF8TrMVjU3Q/f5SawBI
3Jlvf27EwTPjbVJb4inwaO6d/W/tLmDrFjssdwUDDK0Nky2BNHh8warGTqwe
DrOHzB7omISxtomoJmUGxEb4mA5seA1R6hHxRjdGYU1mjV1ExCwsjeDWWxkW
IGk+k5x5Vt+ydWIM77P6NkO8atIR14xEhXBal8O74Y8yQe+3i/1W3X6UNDwe
F7S7GWoPcj+g7WYCzTPHpvjpKLoT3tnaTa6G5vzikXz9WeiSutW0VWoaReEa
A79bFkI8Bif6SZIBuq/qOC28sOjTJcWuzHev4MXZsvS97TTQ7sgNOnsXjxRe
jKt2xUbDs6GxlNarVNBIzyu9dICIdnDRRPrOucJb2mnxqZ9kODv/5MK/fVYL
cLi94rP1VLKW2eF+eGxl4mLCmkeBL0KSs46SYZUA+wPTM0NwOMUj6oMJEa5Z
3GlY0S+zM/q2WZ3grZzQs8cHB4ccvBcOSFKBEaM6MCLfAOkBh4qKUjFQVrMo
Q6Oz7sRfv1rHVfLhYpTZB0HuKTjc9KjmpgcDDPsz9u6ZfImEIw50HXUZBQO3
tRNjj2chnpdSv16xDmkWf/YKeD8ANSZB7VXSTBD9XbL5qFQ3st3COPBLthv+
KBMiU2SC2Q8OIYWI3/iwvibY2P65O6xwFvzGfN+21Y8j5SXcmvM3qkHhPbtV
7hADmm6+TbubM4O2mJJny0ULwSbjo71NKR1sOlHI7y9YdGnrbj662ys4drso
VdKbdXevUtIxbcSjuB38mRou0eAbe8l4bDcVrHjEZmgGRJQRj55c2u8KP8aw
LqWsPPYD9f379wywPSnd98/vGahQ9nuzeKgdrIubRuVuEmCTCQxXlrH2/t3G
8lmLXvC9INZHnmHtV5H/p5Azj6b6C/+9sTJFlEiTEAoNkiKelFBJJZIIpZRk
zhAVInMaTJmnkClUZtnmIWSepzNPDkUpId3T93u+93evdVv3r2ets5azztn2
efb7vT+v5/1xNYVRz4Z0Lovur4XapGa7NTU4iPabc/rgT4XZoyVYnF0hZP+k
nzVswIBYVnThg12TcGZ5XYyn6jN0r6V9h9iGMYha/nLpgDcdTiZJ+blpVCBU
cdCYX28QNnR419FvToH872z+Yt8W5F5X5PnMrQfam4UvbOiYgrhDJlrk0G40
HEkYVCtuh3/rFHAHdhvVfBtAui559uDYAPunh3rv7ZmCyKtCZEzvKOI6ftT4
M60SltsMt2Eu0qF//0YWrWcYNLrmUvbx7kKQLUrX/8E4F/qeEXfz2+HQr1CM
ELtiGjwIv9E8IU4D1r6HnU+5Cai21SJy6OQzxn5aMyM0QwF/Nje29XZEFH5k
1y4WbnvwuNPpmFlHhvTAtf/Mv99XDx50nd+uTp3+/M/8e+GJR7QyXBX4vl9y
tqsiQNV7vl2Daymgp1Jnchoa4Zke/+a7DJ1xzbH+wp9qk9zeGHs9D2Z3Bt04
RcPBqOOAO7GKCmHvavd8WAhD6tf0k3o/YSCMw4AFc3gSZB5cFmzQKkWvXThu
3WfoUu4PJSlHLOhACCkkNPc2ogQ/djVtvkFwCjLlChWdgqe4byq0mk40TO9M
3y/XA/3+R9LyTKZg/tbNT0ZjfejmxXU/VeXb4d86Bev8Hb09Xgyjtm4pdQ2u
BoDao6LTKXSIj/W819s6juR+XBYlX6+EHWXrt/kzzoVR8ub+lmNYZN5wm3sy
qBBqIj4n7hmhwW0H4aRMPA49KiC58s+lwvl1XKJP2qkwnpHxaFmPgNg3uRPD
pJ7BcY9lU58yCrgGPzEcDCGin/cLoJ5kB0YJ58byXpOhtSfd6M86R/6zznvV
G9IuufxZ58wO1ZanZ1JgvdvvZ84Mvfj0ife9xEMU0P7L/Dt2zaUgD/9iWMcm
8mZnMOPvxTRJfyoLS/WX/9ccPWHNyEy8ZQJKMC7LO/UFB+4xLwIFmqjwQ/Hf
OfpLzDn6R8w5+gqVQJX57WXIQdnRI7gcA72npIzZRCdhyevf+fpG5nz9EeZ8
vf3eV91ruBuRxpUw3f6MUZDNjRGWXE+HDObcfQRz7j6eOXePi9/R5PG2A2UH
3/cpezMAE7InNu7MpEPEX+bx8d5BYXue9aLx25IS8x3d8DjiOtfdT3ToZM7p
9zPn9HWZc/rSHJpDDcuDaGCwsOtIRBv8W/+HP3Racf9ZEBIfJMY9hp6Sn9+U
jKsH+atLJD5eOoj8Za5/zbnDzqQLGDThZxZ0daQCSGvb86t1Gevzl3n/FhVb
tXk6FgVP+bixaBQy9JPE3UCbv+cA6J9f1CIa4BF5SldXviQV3nuQZfTv/T0f
oM83jJT7nICG1vo63WZ9Brgi92nZR5S/5gaIW3fxHs4iIou9z3Vz6uzAL4pq
0fqE/Nc8AZLE7P+Z28CSd4H3n9yGFTkDLP/Nv58XNT2tvViDLilt13EpIIB+
3uiDtGVGP3cim9/3L0bqAxk5f/aruqop9k+1l8g95nqsBfWexsdSXuDgXfXZ
/DltKqiYvvuwxb4TafpzxK8GDNysF1v+co4GBdHR3DeO96Lb1pZ7F6JG4OHh
YVoJ1yQ4Dy9Kyi4MIOtf6YmYrH7AFKvohtlMgn76LXtD1xE0H+ysnzLTBWss
x0V+35uEVzarE3Dp40ipueUA8Wgr/FsngRa1Y41EDQY9Ztlw6cq7OlAI7j8d
0UmDaePEgwurcOjVJymB37XlMF19+uPPwzRYv6O975oMHm3qF2xcfFMAeY65
kjMhVJgo+XX20i4Ckrnz6YDOkVQ49rXYjLebAvoHPaVq1hFRSJG4fqDzU9iw
5a6+M8Pv5HNWE1pwRBQ/wG408sAOpLvc91269D85A1ExkWnBbYr/O2fAhXaH
oyG1DWkONapMXiEALS4hjZpIhp7CWU1daESdl+SF//RldlvR039qWt+rS9x5
XSicdmVDqhJDb7zFmbC0UKCexTfbSLgP3Unf/JWnagIi9t44aVvE2FeDIZJF
doNI4mCUsihuGBR+/VztcokGUa41F/piR5AL7yOWeL5+QIXGrx68ocF1y/pk
/YBxNBdHCK9y6YLlyBPjpytp4Nvn91o/EoMM1JS5v4d+hH8rDdxJqo+21mKR
XKl1850jdRCscvVOgQJDT76ckaC14VD7JcsQ1oPl4HOWZ8enfCroCR1R2V+O
R0bS+/dYWBWAwLPgsdrNVFiHu0vrCSOgxBtX7Z1/p8DGJx4SR70oIN3ekHiE
oSuaLEqPRck9BbYbGzPEGboiqbo9f2mZiFKCJE7uMrGDeMFNmc1qZBh5dOWf
+feDZk42ick7qyq+Jf8z/76QKLN+o3EPauJ9G7h/Eg9mG6mkUVEydAW+k502
60Te+J1Nf/RGzqG2pT91kWcH/pVlP4pvsZjuQFg4G+h/PlWGAg4PbR9L3RhC
vjxRM8Kj47CVtznBZpkCvhPaITOaDF9Q76StIzIMuaJWFnkvqBD9Fqbufh5H
Ny2OGPNY9YGIMnWxBk8FAYXgNw9zMWhLb7Rw4bdOIPFkHs7/ToU924u5NiEs
Uhe3dTjV1wL/VioY804M6xTiUMQV2dT0+lqwWSVm95qxPyMzHXVp/ow+c7nq
0v6sMsga5MR1MPqJGE4lHmkSkH2zmIr81gLQ3yU8eOAN43Oqh4rd+0xA7h7P
L/LWpcB+Gc2+NfKM14msBdsZ511AseeN9aQw2BEa7riTcd7Rc/npnZtIyP60
v2/sITu4Gc39Ul+CDKL1wf+ss8/jTYx9LKz+8J3zP+vsKiIufZBjEH1QtEbP
zfAQYKflU+9KAp75OApDPyN5t1W+f3TzkUP8JX8qChUI7SgbRhcax2sllbEQ
bzKBjbcjw5dT9Tl2hmNIcPruluvYMcg3V11n8efcfPv73ub6CTT32ve86NEh
CAgV0uyqogAfZgljsIRBvsXKv8+W9ELqM93nlwWosClIYSTiOxb1/dipUe3Q
CUnOBc4Zcgw/S8/p1urCoYzFKPn1m1vg30oFiaLRaoeneLTbbGvjF91a6KsS
vl1GoUBhsESerxIBPfGOOKK4pQw8DfAZCfEU+ObVInyxmYC6XndObc3Lh/OO
rNohRynAzytkd0uXiAwdFvMlAlIAV53D8XCEDJF28t9dG4jITHukmTs5DPoz
fPUCnMhw0za4WfsgCdFMh8vlhO1A921S2J85UzX+HRZ/1tnk1uidP/Ok/1YS
0CfPfp3RGUVz3ufGi6twUBfclGb+gQgdzhpuDD+IwjSMN/3xgT6dfqf/VDzk
fdTIHkettuKbdFIw8HqZVS81lQS5n3+swjph0H3nN27h/Qz91qf6RcuEDGfb
D+4vdsWi/NgfRg7mgyCCqw/JwJHhJFxI9THFoeTfbU9YOHshxWln6x+dU/Km
qf2iBB4F9B0OLx/ogLzhe+RdVynwIKyCX7Adj0rjOrQULJvh30oBnt26Jz2u
ENCry1NxQv01wKX+g/WLFgUyeONNTwwRUFCOGzXsRSnoq1oqIkZflfL269c4
QUSEFGszk235oD/E/pS1lww7QwXNa9OJKPbuoHLL6RSoUB6reB9MBv2KumUd
Rn/w+WX3zvtyGIRpqFqeZPQHCat++2vnSWja+2si9qstTNq5rSuaJkEHtvmf
PAcB6z/rK6zeEqn0T54D26s3u9vXYdDDrZPLQoI48Cl4vEZmjgD1bZLvFb6O
oY93XWz+3Gu8cg6L+1NfpJGETTdhkYBNu5I1OwZencFI1LQSIfDYxxAFXhwa
0DPbp1I3Altt3jhq3ifB2LiNkjoOh7adue973nMAtv6qL9jITobs8jvZyrF4
tPBbuf8PB1UgOHRA3oIMNJxjjf8BAlpbfPWpZscnWF9TGloQRYbF12yjQ+8I
yBVvs3t7bhP8W8mQvEpY7+JmIiJvShR/a1ED+xrjdXdnkmF3e//TGicielDI
ebKcqxQus3GwZ4aR4VwPOtFRQURVaymp+uFvgO/MEezHW2SIkDA6krlIRGst
lLu516XAqZ3bk5EKGUbzBE8kK5GQSk1BteeGMKAL3rdyZOxbAZsDPDvukJAY
br9NaZct9JqmJof1MvStzL85A7/+yRfYWRXLzBnYySZ0uOYjFulG/BS6bYaF
OsyW+RZJArjhRdOvv8Ghq542FnN14xB1Vl9q9RcCvKZs3CV4D49ECOFs6XnD
cOLJqnqnOCK8ix+JPS5NQFonM/U6ovvBUz3QYIckCY5dsEoYKyGgAH4ZRY6U
bnhZlYyfDCJBegKhepMcEcV59Q7lfmwHbY5cc7kOEgQ+fqMoEEBEHZ+SayXm
G+HfSoIrvfzai21ERInU8Ts/VQ3G2O/R27kZ59FZ8pYQNhIKpBosbvAtgQjW
F2veM16/edvp8ik5EmrKVSxU43oDu7w/Dwn+JsG859Y1ynoktFwXPf21PxnS
2K4I5k+SQMXMQt7fhoTcnH5WsXQ9gU5D83R2xrpZZBfUB/iTkAJWPKcg3xYo
DEfmW06CWTmL63/WM+NU4q0//eHfSgLx1ipSiNcoyBWTP5bIYUFG7huH+mcS
TJbtjBGxHgTrDCzp1ZMJENgdPdXISYWmEopnmXwPcLRSAx1PjMLZfXGpp/gn
QdVW2kEjoAUmuGUd4nwGIesEiVdhjA6xYoe3JhwrgplGATVJ0164aPXj6LND
03CRyTeeWME3SicscI7ju9GLu/vLzl2shji2EzSs7jRMChDV2maHUDli1RFy
eA8T4zOcIxJT4OGLzUccGGRyR0vJ2zYDFA449GRkT0KFkW3rwxc49CDcLHvD
cDiweom2H+SjwdXj9kj7DQFFYR4a5Bm4wqDgI/f9NhTYJShrV8fYhyfYruwr
iVYAHos67z/rGblrUeNocC9c+pbpxHYbA6YTFW/VPaiQjPqKHaI+gfGuF8hL
fwzCdGiawTcmwS0n4uI0Vy18VmEdErw4BArD7lZJXFPAmfjphsnjROjo5HMK
ZumD7fmqZ70OTsNHJn/YzeQPfzD5Q3Zs4IwWbhhtMd3nP5lZBHw2uwz6qXRG
dy5/FHwEg9qpBs4lV15DmKir4q3ASWh+tI3TKhaHvm0mlmrERMHHICFt9tU0
eFvYeC4xgoAqy1sU76bfB140Qav0psAhy3cvOA+TkLNV9Dejl2fho990j+Uq
MnjfXQz/bt4IMvxXrLt1x2G5Qe7hwWSG3t4TFlTp9h6QNxpQ3zQMg0Jnjec2
TcFWLCESSmMQihIK3fiyD9b2NgiObZ4GEpPrG2FyfbeYXN+785FW4ItB3raH
f7MqZcP8DJtmgOkkQ8di3crycYiuvuCxqBYDly/u5d38gwoXlPq8Zh8T0MdN
d71+3fSBhfRAWUooY1enXuKwW0dCRL3zsXbhRhDHMa1pJEeGA3me747LPYfc
bDXDpaZh6HBi0WPjn4InEvqWw9j3yL7d4jl9Sz80OjV57qdNgSGTfzu6gn+L
bJVbCmWc+3d3Pc470xwHH4v7RxbHqGCwWBCC9yEgKfcUTcXbfsDxdCe/9DOG
LuLklFk7S0TKRSLL9SfM4WnVowC+Uww9X679Lbi7BtXJ6bMbPemHLYVE1cMJ
U7DA5L4wK7mvz3us2AMJyP/u0+Zo4wB40BFBHQ+mgO6qxVjSMBElX0WcsY6W
EF8c/qzRnAypTH7pEZNfcmPyS6q75WlTrURk8HmJfUnpJniXTzaV2ZJBiXnP
cIV5z6DPvGegM+8HjFfk7H1n3gM0rcjZS2T6/egVOXvPmL6+dYWvb2f696EV
/l2Y6bszmb57nOm7F5n++irTX1OZ/not00f7MH00kemjrzH9Monpl9cz/XIi
0xcfYvriUaYvbmb636NM/6vP9L8/mDzS5/F/eSQrJo/07P/yv9ePcDB9mdXC
dSOX882I3ugsKTCMg+Ywlm1fxanwjOtBtsloB6pzaCp++QQDSfZH2D8o0uBK
Sg7/96oelNR0rrLhyCiorT8qbfWDBiO4old+bgPI/k67h925AagcNRQnXZ8E
I/s1wdwLw+ip6b3cnmfd8Otk45Lhw0k4eNBJ3WQQi2TwRhvW3qwEAyVVCao+
DcYrREndjH2l511k17dYCDwFdurXM6mgsb/nwUlORt9LSItMlXsFPX2BU57T
FOA9FiUU84WAyude3ve58gL2yV3kGdhLgU7zmM+/6onIy+LBKj9NF8Co8/Cu
Y6xDzABPc/VjEhJ0n/o+nKIO3wOlZ00qSND9kcNy+55eZDSv4udyHwO2FsHm
Qd5U+PB2jO9LwACaVNtn+EJ2FH6tDn1+RZkGx5/rquZUDqPvIvuj6vQHQGb3
3iRaCg3Q1u8SX0vGUBd/9BJ3djf8PqIynFpLA+quc1+1XfHopA1u0m3yLfCY
RjZ5n6ICby6bSf95Anq4naz5uzEdbHL2ncYz/MvFvT9PiIgQ0XI9ccG0PgK8
Pa/Qv/BR4K5kGraVcS4nzyR031/vCUFGsTtK75DhiJnj+1InEjozX96MvacH
LqlX7+78RAKtwOwd77aMoN6AgRqeHyPAoxhHmLKkAtWyTnNiaAx5tnR9UVQb
gBfDww0ZHYx+tatu/Jo8BmWpmGqsK+wG746tLH0LVDjl53fzUAYB3ZeT8l19
MhO4Ik9/F7xJAaWkXeqaOkR0/oqPiptgNORt3mrYx9DPCRG99w6MEdFXjaCR
ixbekCopsOH0FYYPjTIv97xJQje9+ixCPlyEqD2HLfYMkeAmHaQkbmAQITzB
f926Adiz+VnJsxkKjF2gn5+zwyKq2Z2vaRndUOH1aesNWSqIaAsfA28i8k+u
mrfQiYG2Va5uU/lkUDhy6FH9HBEtaVVCt6QvmCTwVK7XIsPkOTnsd0sSGmAY
XL1dZnBvKXNN8igJZKp2i5Yl4pDjVdngc6HdMOSy3/D3OYYOJ2r8ZhcmobbN
mdNsg49B5cjGsIvSZBiUirnCf4uEog7tTiqvuQba2VAWM0iCIZ2TmmnOJOTn
/5w//boVVCwHf1JqJ8Hp1NPCiu8x4NbrkCi4HQ/GO2cDt93Dwwbm8+IXzOfF
q5jPi1fk5LD8l5NTFL0pifyVce4kxPBqceJBMqBB6ogpHrjvPNKV6cMghR2X
2/48zzX+Or74p6qJZX2qT2TosRG1M5nR8sDPrlP/J/8HPyuDX76Wga45Vw2b
8nXCqm6la7yz01BtZFND/zkCzjGq8ZFyeDDcLYDPdiWCUvhSVVdRMbK1qi9g
e9oJy2OZLElN03BS+7ip1pOPqPFNOrd0fDNwXJQVeVQ4Dfw9O8+u4RyEBFfx
iQPf8VDLTeBT+UKEA1OHi7IzeiH87G8ZwwQcNLobHUsjkMHV5uhVC50a5NG/
Nv/Hqi6IaiO/JAdPwxb+Y/cCFDqQYZntj0DLFhDYO2+jfXUaphu2rdcR6UeD
NmLcsWU14FAXtXfP+yk4oTfMXVreA6HtPzws3xLA21KPrU6fBJtP8eqGHu+E
/mUw5j2Oh8CpG6kxhymMvg0lc3NNQJq0f/M7DAth9T5OSJAGo79TvvGaNaF9
HH0LcY5dwCHS7ZalMg2/m7kvblzqQo3HhPEBGz+C7eXMY4/YpkFQ/a4bsX8A
5V3qCdhnVAuCHZvc9IymQNJ20f7wxjGUz/ft4dxYCZwJf3zpwyU6NPumUb4e
/wRyp+TfTl4mAsvMIb0zMSSId5yaLz/YBPpSJVacfXhI8agT4LKnwE2clo+3
9Qe452Ad82Q1DozmNE8pK9Cg7McbNhedNFCM9zcopE3A861CvLSiSch56Rn4
9UU78ih+tvCxtQucpb+Ukvum4JhjP32GodPWPRrWc37/EbQ/v2V3jJiCb4iv
I/r1EHJo68hnIdaC3e1Kj+ppOpA+rp2gGoyjz4fZ3xsPl0J8nDU5gpUO5eFt
e5yUGb/HGnbfS9F5ID/RObCWSoP8BfGM5eB64Di5ycqKSoTZbpbNmYgEfOMS
vUmkcojWmZzzO0OAhK7wM+BDgXuYE+mvrF/Bwzb2AfNbOPDi+jU1J0kDuqPq
jwqHFJR3sr7dGzCQWh1eRAuZBP3rIc6yWh8QV4Xd3sKmERD8im4avqSD5KuG
9Qb0LlSqvntcUagbgmi5tvKmU+AZtnfg4+d+5Hun+8WQcissZeyo+yQ8Bfom
88snA0cQNvGH4tLVOthbePekvQcditi7RNNfTSClDfNPb9WUwQzKCGlj6MYt
2NDvVSlYlK7wrmJwRz5w9mwX2ZZKg5zwQfqHg3h0uLvjeJZ2MoRzX5yufU6F
58Vl9VEd76E97urjd0YkqGzyvfS2lgTWsTsW7Udiwb0grFEhkwDhZ8w+5NhS
YE4W57uVloruCPubC+fhQC8yUG/PHBXsZEVsfAwr0K6Y2fwYRwxk0bVwnGqT
8Pj4k+u5kk1IafHGgd0Co0BqvyU0zdAhnMO0BfGrnUi1rn2ES2wAeG/xfZN/
S4fa8Dr3B45D6ONiyfuw5FaQ0Xi5lRREB55fqTY3HcaQf6wT7UN7HdxOu1+S
uDAJ6bvM7wv5YNBPdxMv1vByOLPTnJh9cBIC6m5xNa/HoY0upzvKTxVAGeeM
ZjvjvA5IVx5f545HGVmQnGWVAl+vaYxYmzP8xRDFklRAQC4mpmJurE8gaSD3
Mv8tCvgwuegtTC66jMlFX+UIO7pKcRx10LI2U6+1QZC8rKG93iSkIakjS2yt
6H3t+DW5cQL83C30hPMMGWSZfG/sCr73RtCvx/UHMcj3a/satco2IHjETE0z
/l9nX8zt3GOLRbK+bWkeOxqg0UqFT+McDUJ+J9DnDnSjRlfGG+QTgKdra+3q
1ySYlvnwrPtAH8rId7GzisFBPHGPn08zGU4xudafK7hW94g6pXZdLDqZIh48
/7MNeC68O2s7RYVzUwVSj0/j0Nqq4s4u7wYIsxdwLn1LBcVhvRA9OTzqIUi6
Rh6pgucZZFsWIyqE90/4nEnqR7t0DG+LXieA1Cy18jCNCHpBdwtNLgyhhyHx
qg6GOGjb77Wl7QcJXu4ktzvMjyDbCEzR/m0YcKHI3h8dIMMck/9MY/KfW5n8
Z0RmkpyZMQ7d2yZ97Ofmdpg7f3Bjyh4qVHzexcGxE4+GNl+W3NfaALt9Jg49
4aOCp0Orx61BPNIplO4cWqyCo+ynvOzaKWCo2WRwxIWArItmEvY8fQ9583eV
Gt0pILQ2Lq2rZBi948g1v8ZKgN2YkgbNTUR4tz9rSUpiDIlg+BXHf2EhP9zx
R9BGEjigD9d/OU+gmW1axsr5ExD7qF0oborRtyceRgi1/8lP1rR6oz4Ct1z8
BQ5HksGSyVX2MLnKIiZX2eLyPu7BZTwSGr1WKyPdDrFyIct3Gb7YznDxZ/UC
HgkItJkXszVCZokrq+g1CkiMX4p46EtAfnqjtKIkBImHbpuYqVHg9Vmvb14/
CchrS7RBlWYRzM/K153npMDJh2TX61eJSMDC0G56VTZ88X7ERakmQ7mACa/B
vXFEAK1g/xA8vHgpVPhInQChPnqntM4xfkfD9H7/KCxYWHbEvJMnguS+R+sD
9bFIkqdpyn7VBHjwf3AiLhLh4L3fxYQjOCTeuOyhVDMMoidZSavTSNClcIPK
wYNHp7R0wpO9+mH7K3WS9nYy4Jh8oxyTbxRk8o0z5IydSXoEFCmJuywi1g4E
fcdhfCoZlgzM8sWbCSjps6Y7XqYRyrZ3yzYXkiFov4c6uxwRaWB2dU6ur4Zc
pUuiPZlkMH1mtMDjRUSBEvzkp5Qi+JnN61UTQga5Gm2zTwx/IeZ+temRZg4c
5bzoHmVJhoCegER1DhIynU/s22eXAN2n+AOVD5AhWWiwwZKIRdEXPSecJbBw
9kleeDIQoCrI5ExuAw7VZIVQrp4aB+83+iHuq4nwmlzdGRGKR3lO/F9KFYeB
dkxTUCSfCJuPzXngDxLQuzfi739s74fCetG+CUUS0KrV7jbWERDHc24J973d
kMO+R3U6kgSpTP6wcAV/2PAiRIQcSkRrn1pedoRGWHPm7hfOZRLsIvnIv+4k
IozS9N4NetVwzrx5Rw8fGXg0XsWmMb7XyTqxyATPYtDmS1Pt4CUD+61jngby
JDQaIFCzfCcXSiNGD25lIQPRTXkmWY+EFNRG253MkwBbXe4uSieB/XG7uRQb
EuqL2aPRxxMCDvdEn23rJcFbJh+4xOQDDzL5QEyaDDuGMgrBDrO8wwZY2Pgp
T6s6nwSeEXHOi/eH4Jm4yy8jKQw8vxsnacnoe5gDx3X8DvcBTW6GNevpGFiX
0k0Qoz/fuSkmWb+uE95Nt7vxugxDvjNbJA8bHc6XufNYi9VDD8f6+xvZGP7F
qGjhkP0UfHHuLjEMzQZijWKwzpkeyNrcdfW36zSc+cs8r8t745aBL13op3j/
odljNVC7WVg8zHoaTszjXwdoDKJ1PwRT221KwKnUQr7YbQpqDtddsBwZQ9m2
Aa3X+fIgcyHnISvQwbKPRcH1MhZt8Hx4riA8CVxtX8L+cRqYLux+bGyDR/Nj
uqfDToUAXWShfJ8dFd4R71afF+uDWnrDtuAEDFSnBqQRVKjQwlmoXpffCZcy
TzcNHB2HwJ/rr334TAOc962K/i+NsHnWUBwRh6GsaGLguysdvqe2ZT2SKAaM
wXeTRuUBECGEn18omAJpjp82a9TDEI0nZ5evQQ+Y9xi9uec9DQ1/mbdNlF/f
rrBjGL3SIRL3bi2B2RA7rOq6KTj3m5B2UGECGS/qscwU5MLbmhCPE/hJWHKu
KQ1sxqK4vArPa2pJIDFP+f0lkqF/2FmvyGfj0XHF3KtcQiEgXG+YidSocGvd
gVhLTSK616Pb0hNoAyZp2z6zUslwb67ATL2+CeoEp65mto3DuKJSxbrbk8B7
oHhjfEs5fCdcxGgpjoD2ge4NCQ10KNQI/2K8MQxoNH2uhrMDEF+jrnKqjaED
hbMS2Rreo2/f114aP9EDu7k+nbt5cxrwf5lvdScV1uqrYNCH0+NbX+nnwpiZ
bNzU40nYJGnAf0wRh+4kU/yzSIlgdvNQn+0ZGtyo6xdMJOORc6XM91cjwVCi
EffwDuN8aRao9aszI6LIZIlu4ds28MTriKlTF6PPKEQvdIglwLqHVW7HLo9A
q7KytCeNDnKUl6d0z+Uh5Zb2RomTA0BIGXEQq54CXiWeGt2qWqST6Wo/I94D
6QLXpj/KTcOFv8yHhuxtVyyMxaEwHjnTrKeJAEE/OBs4aGC1tJRXKMHQLb71
dTdfBQOLi4aJ+hgFMq0CqjvdichPWt/e5bQNiO+XJc2XkQEzdbvO0rYaXXvw
EPZLDsD8CaNGjidTMG8dtq97/CNik/bM5aN1g9tz1srW7qm/zku6sLvq2JkR
kPrZs/7GtsGQzibMpppHgY9979VDXxDRZCXvps9yNqAfsJYjitHPC/DWo9eN
upBtk92L7cndQL/yqNyPoXv/Ng/YwMXx5XsOEWU5Vhb5r7WBpz+TpE8x+vkB
Zh5XIjOPq5aZx2XMzOOiMvO4FJl5XLl/yeN6+5c8rtPMPK5TzDyuKmYe18Jf
8rgKmHlcDcw8LkdmHlcTM3fLhJm79YKZu7Wfmbs1wczdml6Ru0Vn5m5p/X9y
t3DM3C1FZu7Wlv9P7tbf5v7+lscVo2tv6HinCZ3co7j+0jY8uMZFnhBepMDZ
ZDrF9nc7yqmo6K6SxELITXjtyND/pPtqgj1G3YjSrJdXLzwOMltsNIyLaWDb
lujtm9mHdJrlD9U0DcHkDIfeMEOfS79O/eQ2NIik7x3v7fHpA6GX/NS7LpPw
7eqqhrTREfTW43rLknUXYN28UgVcJ+GO6YKfeSEW0WnnetsXPsBFP9VkRSsa
ePOsT99bhkPxT4oF93m9h6rtRSqkbip0GvjIvM3Eo6qE/j1hfVlgd/D0dlNF
xueUKOwX9yagAMG+nisl8TDx8Xnr1yeMfRtyMdnrBBEV3PU0jPcJgk0SmTdU
yWRw/72QYLhARK7pl0Yk82+DXukmf8VjDJ0Q/jroS0MPOqsX02LXhIE3XXZP
5K9TYfRGac/j8n7Ecz/l8XbzMWg89GJnGj8NDuupGR6MGUJd4l4Yqa1DcN7+
B++SNw12E/h9d+uPIi7ppd2k6V7oVsVK7S2lwWWXT1zsw+OI5yJ9E3a2Ewar
5KwTyxg+boPy5iCGblTreznJK/EeRGKMv7GZUsH2W8jj4W0E9CUjh2B4Nwvy
FfBJSr0UqL4eEjDZw9AbwiNal6/Fwz6ebdsktCngxbo55fo9IqIHcrMf0w2C
hhCnmexSMji+lx6wFSShdJUPs6ef34a17BvNjXaT4Us+aY1G0zDS867joIeO
wu2gfeYS56lwWjkuEVTGkLb0acNcy0Gw8mmPNy2jQmrbjTD8ownkNYlru67f
CwraC8+7p6mwQeDRojRDJ1e7SAWtc+uE9RSx+AHG/snmu+M/+4KA8J/3sj0T
ygL7u2yFT10o0LwNp/1TkohGulD0KF88KCXMXmxgoUDFrq2Tm3OJ6DU2Q05l
YxAcWSrosAgmQ/aMtaXKLhLK21F7P8L5NhSqnRGNWM/oG8GrRL9qYtDL2mih
tIQBuFBjUVNFpADI2s2fPYhFZaVjMR35PdB6llceu4UK533OUwoYv8fZB86l
x2c6oLVbeIldgQqH67QSzJyJiFPK9/P3sjjIeTffSiknw35zzso3Y0T0o/m+
ThAuEPpKHztamJLh6bEPCpUaJOT2ba5xyfA2qMsc4KT9IsGMFvuL+UAcOl7D
F3yAm6Fb3r9QPnmSAu/GtAoXlPCoKTqP6+3sJwgKvJ/85ToFFLtjj29fS0JB
RroTim8Y779ZhDdPgQy9ognbvl0ioSu3tFQeH7oN+gcmnIzJJDCVub/hrQYB
+Zu8NbaYawdLnyjMdDwZlGR2iOHtSWjrh4FXe8Rug0ub9BtcJwn4mXMNN1fM
NYxapKkEZo3ApzEapWMNHj4ozFlrFBDBnsntX1rB7d/NYvnMFtaGkpeQ8+ag
Jlgf/E1ZKZWhx3Rqi45cGADVoEwZ/9d42LL9w4WtN0jwey9XjtH+XrixdUv5
HnscBB52H/+5nQLxTF592wpenVhSm9Zk1YVO7N2ic0OtCezMMkJa1abBQqln
r8p0P+o1+nRiur0aKqp2TkpETIFvTkT7t+huaORvS3qnSIBT06yVPmxkaDok
ZhwV8wlMWHw2PhjHAXunCbY9nwLhn81PyTQ2wo1rWVE7GTo22sn3DOkUDdYx
uW7bFVz3dzKLXrNVL9ozkGwdRWiEz4Vrj0m1TIF3C8n65dkh9L087Rh/YDVo
cPcMm4tOQUWNYMbwhzEU/CJRdKddMWimjLSK7qcDqhI5+p6zFfh4R36/SCPA
V1NH8kdvMhTbxYx7KtXD7gwKNnkfHjRd7FopolTIvGWiV5ZSCgIiXVukgrDg
l6SmsxxFA0ebQXat5Dho3fRSUujKBBRnKk+4YyfhJZOXxqzgpdmSB4+6Hh9A
nHmn4zy9G2E+xjwhUGsK+A/VZ0SFj6B9rx3br6hVg6fvMZpINB0umyV267pO
oL7HHM0qvMXQKd17prN8EkbMZoIcXbFIVeWgQqRfDpgoh2HDamnAkfZ479PT
1XAkszyVPkOAo6Ibyn8PkuHRvXOqvfVv4dtA4NdKSzzMKmZ3yBtT4cODjlUl
54Ig0jjdWycJC1synbTkimgQkFo3OdeXg/xDsqWvGU1A3sLBlujBSRBq+HIh
h60avR4N3nBVbgQOjYeWdxfSYY7JLduu4JYdlT//ProwhMo5HR/8EGyE2oht
S+dK6SCowu1nWzaGWJc0PqaPIagRtnw4sJYO/dpvVz0OxSCzhxP6s5lFEPRL
P0VSYxIaqt+JP1iLQ79DOI5HbciB6qz0kEtXaFCZqMW1xwqPtmnwPtnSmwAV
o7KteQz97xq0eVa06RVIcPvkj4gSYfUW7JrXDJ/OOr7lvuq7YJQU2HbTzxEP
3Dvv0PysqWC6PK1Zav8WIedW3JcILNgTl0SPp9Eg8kt4foJWDQq3vBPhJTYB
67Y+qzRMmYTGjoDPkfEtKD19dOlM/zCI1FN9hC/SQcyBMHZnqRNd5pVwkPDp
h2oBvKNCOR0kmRzv2AqO1ypxl0VY0CgiyI+OTyU0gMFY7PH+7XQwK4ozGKye
QGsLc0JLVRA8djsjI8DQM2fspVtkL2CRYfZDbe5jRTDb4sAz1kADjZqEp8VJ
OKSlqNqjlZENl5sN5FnnqaCqkG9W2IJHIjvqrXY5MHSLo5tbrjgVbp/7LD/T
y+hX2dtxGd+DwKPgqF4wox8+/ksuQQqTL1Vl8qUHmXzpmeDQn+49rUj2KC/V
NJEAPV0/vxu7kmH3ivu3d8z7t0dMftJ4BT+5rej+8+FoLOrdbceXsqce7LPf
02qABmPlIzcfzHcjrxtGXtzyBJi4dSI59RsJXlPytnnF9iFW+fdjnudx4C1V
pmvC8Dun/zJXrsDkCY+v4AmLh0aHip/iUMLeSgO9N3Vw9vTAqHgMFb7xJ6GG
U3jkgfn66V5xJewKLZyc1aLCWnIgRiV3AM3Yih0uScaDeJ+maowBCRzV8N9O
rhlGXJdZww2asGB4aNVs8gEyxFeXHp0/N4p6uqO2pr2egJIIvmejn8nwg3n/
lrji/u0/Hi9nBY/3scONEuiCR2jIYaZfrg4Kxe2+e8xSIPj5lexbqwkoYbk/
lZ+vEhqenJN5zvi+chvvXTkaTEC7NQKt4Oo7aLvmf4zVhgILUkOpFgsj6Nzh
9VayLHjY62gWiEsgwkDylLKtwDjywqQcXquAhY2G0in9d0ggKzGAO8GJQXp8
z9QPhY1DrwckmIuRIWCr0v3RzxhEGb46zZU3DI08FJeZ9P+5f+tYcf/2H//2
YQX/VrEUfPzoKQISrbw+ui+3Fkyq74bO6zLOI7G6d4ElBLR19eb72jcqIEDX
8k2mFAW+XUg9eUCEiCJSHPIzlt6CwsLXKN5ZMhjfUtysbk9EF4/P2IvqvIYz
S1ZXjxeT4XpoRlzY+AQqDrghxaKPg9hXUte/DBBg8bnU6oJBDGoOuGShH4KB
Tx2lSbIxRPj63EVCh6F775y7cZl+cwwOblzD4qFOAp/brKuzXXBomJ84rZQ7
BCV2wYJiDSQYWX4p1y+BR2z+gy9kf/YB+fiy1yY5MuBXzBf/d//2H5/muYJP
26I1LDuxlohEDttOysrXgk1Z1/7nWWSYD6myHjAhIpXmFqlRVA45HlSRxmgy
eCXXKM8kEJH1eqFQ/5i34HFLcrTXgwy8bl0qPINENDt9bfeF8Uw4/iMxUeci
Y33MrfvDeUnoCTl2j/WaODi4fTJstTwZCpn3S8vM+yUl5v3S0EBr2ZwrDoXb
3Ni+pXkC3k+3p/UjAkM/U7ViFfCIwlu/wUltFG65b0TvzYiwvXxWSbELj1wL
miRSswfBQ90WevAMvyi/ebXfFQKKs7v1q3dHH5Q4jp2+rUcCFlpERhxDJ3tp
Pn/VXdoF4Q8PcW5P+vtc8H8cWs8KDo039+2oQz0R7caHe10tqIHKJ77Aw0WG
OW6zAK45IopToHhZbikHzSbnFAtexvlemhVPFiOh9dOdJzcdegvfr1V/iuYk
Q18ItbpVlYQejSx+UHbNBFrW4/6qHyRwWFW5h9eIhOb5XhWa5cSCStqe9GtE
EnhbttX4MnSd3xDfEzn1QEjgCDvjw9B1f5vz/V/NgS4v
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{303.32391081877006`, 190.58483135101298`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {0., 0.9999999285714337}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.507057585809367, -3.1850734415046906`, 1.0238162808310105`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6344897134472513`*^9, 3.63448972871865*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Lambda]", " ", "\[Beta]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"k", "-", "1", "+", "\[Beta]"}], ")"}], "/", "m"}]}], " ", 
     "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Lambda]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Beta]"}], ")"}], " ", 
      RowBox[{"k", "/", "m"}]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Lambda]", " ", "\[Beta]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Lambda]"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Beta]"}], ")"}]}]}], ")"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.634491989103244*^9, 3.634492062259426*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", "\[Beta]", " ", 
    "\[Lambda]"}], "+", 
   RowBox[{"k", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Lambda]", "+", 
      RowBox[{"\[Beta]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}]}], 
  RowBox[{"m", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Lambda]", "+", 
     RowBox[{"\[Beta]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "\[Lambda]"}]}], ")"}]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.6344920334197474`*^9, 3.6344920627301826`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vpkb", "[", "k_", "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "2"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", "-", 
        RowBox[{"(", 
         RowBox[{"k", "+", "\[Beta]"}], ")"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"k", "+", "\[Beta]"}], ")"}]}], " ", "+", " ", 
     RowBox[{"\[Alpha]", " ", "\[Beta]"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vpk", "[", "k_", "]"}], ":=", 
  RowBox[{
   RowBox[{"1", "/", "2"}], " ", "k", " ", 
   RowBox[{"(", 
    RowBox[{"m", "-", "k"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Assuming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Alpha]", "\[Equal]", 
    RowBox[{"1", "-", "\[Beta]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Alpha]", " ", "\[Beta]", " ", "\[Lambda]"}], " ", "+", 
         " ", 
         RowBox[{"\[Lambda]", " ", "\[Alpha]", " ", 
          RowBox[{"vpk", "[", "k", "]"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Lambda]"}], ")"}], " ", "\[Alpha]", " ", 
          RowBox[{"vpkb", "[", 
           RowBox[{"k", "+", "1"}], "]"}]}], " ", "+", " ", 
         RowBox[{"\[Beta]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", " ", "\[Beta]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Lambda]"}], ")"}]}], " ", "+", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Lambda]"}], ")"}], " ", "\[Alpha]", " ", 
             RowBox[{"vpk", "[", "k", "]"}]}], " ", "+", " ", 
            RowBox[{"\[Lambda]", " ", "\[Alpha]", " ", 
             RowBox[{"vpkb", "[", 
              RowBox[{"k", "+", "1"}], "]"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[Beta]", "2"]}], ")"}]}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Lambda]", " ", 
        RowBox[{"vpkb", "[", "k", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Lambda]"}], ")"}], " ", 
        RowBox[{"vpk", "[", 
         RowBox[{"k", "+", "1"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.6345792859743967`*^9, 3.634579369635387*^9}, {
  3.6345794051355247`*^9, 3.634579442512423*^9}, {3.6345794917475986`*^9, 
  3.63457951718782*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"1", "+", "k"}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "k", "-", "m"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "k"}], "-", "m", "+", 
         RowBox[{"2", " ", "\[Beta]"}]}], ")"}], " ", "\[Lambda]"}]}], 
     ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"1", "+", "k"}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "k", "-", "m"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Beta]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "k"}], "-", "m", "+", 
         RowBox[{"2", " ", "\[Beta]"}]}], ")"}], " ", "\[Lambda]"}]}], 
     ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.634579542230743*^9}]
}, Open  ]]
},
WindowSize->{640, 719},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4053, 112, 143, "Input"],
Cell[4614, 134, 2934, 67, 284, "Input"],
Cell[CellGroupData[{
Cell[7573, 205, 897, 24, 80, "Input"],
Cell[8473, 231, 239, 3, 28, "Output"]
}, Open  ]],
Cell[8727, 237, 2869, 69, 284, "Input"],
Cell[CellGroupData[{
Cell[11621, 310, 1234, 31, 182, "Input"],
Cell[12858, 343, 2497, 74, 81, "Output"]
}, Open  ]],
Cell[15370, 420, 1488, 37, 148, "Input"],
Cell[16861, 459, 1386, 34, 131, "Input"],
Cell[18250, 495, 1503, 44, 57, "Input"],
Cell[19756, 541, 669, 17, 28, "Input"],
Cell[CellGroupData[{
Cell[20450, 562, 492, 12, 28, "Input"],
Cell[20945, 576, 323, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21305, 588, 215, 7, 35, "Input"],
Cell[21523, 597, 276, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21836, 609, 5595, 148, 282, "Input"],
Cell[27434, 759, 3267, 96, 99, "Output"]
}, Open  ]],
Cell[30716, 858, 9268, 230, 361, "Input"],
Cell[CellGroupData[{
Cell[40009, 1092, 2526, 69, 216, "Input"],
Cell[42538, 1163, 389, 11, 28, "Output"]
}, Open  ]],
Cell[42942, 1177, 147, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[43114, 1183, 2021, 53, 195, "Input"],
Cell[45138, 1238, 563, 19, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45738, 1262, 1079, 27, 131, "Input"],
Cell[46820, 1291, 288, 8, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47145, 1304, 1714, 45, 214, "Input"],
Cell[48862, 1351, 431, 14, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49330, 1370, 2569, 70, 235, "Input"],
Cell[51902, 1442, 392, 9, 28, "Output"]
}, Open  ]],
Cell[52309, 1454, 7778, 212, 304, "Input"],
Cell[CellGroupData[{
Cell[60112, 1670, 461, 14, 28, "Input"],
Cell[60576, 1686, 150, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60763, 1694, 391, 12, 28, "Input"],
Cell[61157, 1708, 78, 1, 28, "Output"]
}, Open  ]],
Cell[61250, 1712, 524, 15, 28, "Input"],
Cell[CellGroupData[{
Cell[61799, 1731, 692, 22, 32, "Input"],
Cell[62494, 1755, 225, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62756, 1765, 478, 12, 35, "Input"],
Cell[63237, 1779, 81546, 1338, 141, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144820, 3122, 567, 18, 32, "Input"],
Cell[145390, 3142, 334, 10, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145761, 3157, 355, 12, 35, "Input"],
Cell[146119, 3171, 267, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146423, 3182, 523, 13, 35, "Input"],
Cell[146949, 3197, 78951, 1290, 335, "Output"]
}, Open  ]],
Cell[225915, 4490, 485, 12, 28, "Input"],
Cell[CellGroupData[{
Cell[226425, 4506, 501, 13, 28, "Input"],
Cell[226929, 4521, 387, 12, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227353, 4538, 410, 14, 35, "Input"],
Cell[227766, 4554, 285, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228088, 4565, 536, 13, 35, "Input"],
Cell[228627, 4580, 82052, 1345, 206, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310716, 5930, 795, 25, 46, "Input"],
Cell[311514, 5957, 757, 24, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312308, 5986, 2729, 69, 279, "Input"],
Cell[315040, 6057, 1227, 41, 84, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
